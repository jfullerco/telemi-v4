{"version":3,"sources":["Contexts/stateReducer.js","Contexts/firebase.js","Contexts/stateContext.js","Contexts/vendorList.js","Contexts/states.js","Contexts/serviceType.js","Contexts/accessType.js","Contexts/fieldContext.js","Contexts/AuthContext.js","Pages/Register.js","Pages/Hello.js","Components/DropDowns/DropdownMenu.js","Components/Forms/Form.js","Components/DropDowns/CompanyDropDown.js","Pages/Companies/CompanyList.js","Components/Layout/Columns.js","Components/Layout/Column.js","Components/Loading.js","Hooks/useSortHook.js","Components/Forms/Hint.js","Components/Drawers/SideDrawer.js","Contexts/initialFieldContext.js","Hooks/useRefreshDataHook.js","Components/DrawerPage.js","Components/Layout/DrawerComponent.js","Components/Tables/MapListTable.js","Components/Tables/RelatedMapTable.js","Components/Tags/TagCloud.js","Components/Fields/LabeledTextField.js","Components/Fields/LabeledTextRelatedField.js","Components/Layout/Card.js","Components/Layout/PageField.js","Components/Fields/MappedList.js","Components/Layout/PageField2.js","Components/Tabs/TabBar.js","Components/Tabs/Tab.js","Components/ConfirmationModal.js","Components/Buttons/DeleteButton.js","Components/Tabs/DetailViewDropDown.js","Components/Forms/SelectField.js","Components/Forms/TextBox.js","Components/Forms/TextArea.js","Components/Forms/TextInput.js","Components/Modal.js","Pages/Locations/AddLocationModal.js","Components/Forms/FileUploadField.js","Components/Forms/PageInputFields.js","Components/Forms/RelatedPageInputFields.js","Components/Navs/DeleteButtonFooter.js","Components/Navs/AddBookmarkFooter.js","Components/Navs/AddNoteButtonFooter.js","Components/Navs/EditButtonFooter.js","Components/Navs/AddTagButtonFooter.js","Components/Navs/AddDocButtonFooter.js","Footer.js","Pages/DetailDrawer.js","Hooks/useLoading.js","Hooks/useDrawer.js","Components/Tables/Table.js","Components/Grids/GridGroup2.js","Components/Grids/SelectView.js","Pages/Dashboard/DashboardGrids.js","Components/Menu/Menu.js","Pages/Login.js","Pages/Dashboard.js","Components/NavBar.js","Components/Page.js","Components/Buttons/Button.js","Pages/Companies/AddCompany.js","Contexts/initialFields.js","Components/Layout/FieldLabel.js","Pages/DetailModule.js","Components/Conditions/CheckIfNeedsCache.js","Pages/QuickAdd.js","Pages/RelatedDetailModule.js","Components/NotFound.js","Components/Panels/Panel.js","Hooks/useCore.js","Pages/Admin/Admin.js","Pages/Search.js","Hooks/useSearchHook.js","App.js","index.js"],"names":["state","action","type","currentCompanyID","payload","currentUser","currentCompany","currentGrid","loggedIn","currentLocationID","currentLocationName","currentServiceID","currentServiceName","currentTicketID","currentTicketNum","currentOrderID","currentOrderNum","currentAccountID","currentAccountNum","dataLoading","userType","userFirstName","companies","services","tickets","orders","accounts","bills","events","notes","users","userDefaults","contracts","locations","currentModule","currentDocID","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fire","collection","query","where","doc","getDoc","getDocs","updateDoc","setDoc","addDoc","deleteDoc","getStorage","ref","onSnapshot","uploadBytes","getDownloadURL","arrayUnion","arrayRemove","auth","getAuth","db","getFirestore","store","stateContext","createContext","StateProvider","props","Provider","useState","data","setData","active","setActive","fetchCompanies","a","q","fetchLocations","userSession","locationsRef","docs","map","id","console","log","setLocations","refreshLocations","fetchServices","servicesRef","setServices","refreshServices","fetchTickets","ticketsRef","setTickets","refreshTickets","fetchOrders","ordersRef","setOrders","refreshOrders","fetchAccounts","accountsRef","setAccounts","refreshAccounts","fetchBills","billsRef","setBills","refreshBills","fetchEvents","eventsRef","setEvents","refreshEvents","fetchUsers","usersRef","setUsers","refreshUsers","fetchNotes","notesRef","setNotes","refreshNotes","get","fetchContracts","contractsRef","setContracts","refreshContracts","fetchPage","isModule","docRef","docSnap","docData","docID","handleSubmitNew","set","useReducer","stateReducer","quotes","dispatch","value","isStyle","headerStyle","borderBottomStyle","bottomBorderColor","setUserFirstName","name","setUserType","setCurrentUser","user","setLoggedIn","loginState","setCurrentDate","Date","toISOString","substring","setCompanies","setUserDefaults","setCurrentCompanyID","setCurrentCompany","setCurrentLocationID","setCurrentLocationName","setCurrentServiceID","setCurrentServiceName","setCurrentTicketID","setCurrentTicketNum","num","setCurrentOrderID","setCurrentOrderNum","setCurrentAccountID","setCurrentAccountNum","setCurrentModule","setCurrentDocID","setDataLoading","setCurrentGrid","children","vendorList","Name","Value","stateList","serviceType","accessType","fieldContext","FieldProvider","userContext","useContext","core","setCore","fetchCore","querySnapshot","module","serviceDetailFields","label","inputFieldType","dataField","inputSource","inputID","inputValue","relatedCollection","relatedDataField","relatedInputLabel","relatedInputFields","inputName","relatedDataType","tab","isHeader","visible","hasBreakBefore","ticketDetailFields","accountDetailFields","tabLabel","orderDetailFields","inputField","permission","billsDetailFields","locationDetailFields","helperCollection","columns","contractDetailFields","serviceGridColumns","docField","headerName","key","filterable","mobile","serviceMobileGridColumns","serviceGroupByFields","Label","locationGridColumns","locationMobileGridColumns","locationGroupByFields","ticketGridColumns","ticketGroupByFields","ticketMobileGridColumns","orderGridColumns","orderGroupByFields","orderMobileGridColumns","accountGridColumns","accountGroupByFields","accountMobileGridColumns","userGridColumns","userDetailFields","userProfileFields","contractGridColumns","contractMobileGridColumns","contractGroupByFields","contactDetailFields","eventDetailFields","AuthContext","useAuth","AuthProvider","setLoading","unsubscribe","onAuthStateChanged","email","useEffect","signup","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logOutUser","Register","emailRef","useRef","passwordRef","confirmPasswordRef","navigate","useNavigate","signupError","setSignupError","loading","modalState","setModalState","e","preventDefault","current","handleModalClose","className","disabled","onClick","Hello","Dropdown","isActive","params","DropdownTrigger","DropdownButton","toggle","onBlur","DropdownMenu","role","DropdownContent","Field","FormControl","CompanyDropDown","handleClick","handleToggle","company","style","marginTop","history","push","CompanyList","activeCompanyID","activeCompanyName","isUserLoggedIn","undefined","Columns","options","Column","size","isVisible","Loading","useSortHook","sortedArr","setSortedArr","arr","setArr","sortBy","sortingArr","sortArr","sortRef","sort","b","Hint","SideDrawer","Drawer","anchor","direction","open","checked","onClose","handleClose","title","fieldsCompanies","useRefreshDataHook","refreshModule","DrawerPage","DrawerComponent","hideBtns","handleSubmit","MapListTable","colRef","headerFields","handleDelete","col","width","keyProp","item","index","RelatedMapTable","helperColRef","TagCloud","handleTagDelete","tag","LabeledTextField","placeholder","readOnly","LabeledTextRelatedField","CardHeader","bgColor","txtColor","CardHeaderTitle","isCentered","Card","noShadow","CardContent","PageField","field","fieldData","relatedDataMap","handleRelatedDrawer","handleArrayMapDrawer","handleDocRelations","handleArrayMapDelete","filter","f","location","Address1","Address2","City","State","Zip","href","target","MappedList","headers","header","h","PageField2","coreModules","fetchContext","fields","r","d","TabBar","Tab","el","dataArr","groupedArr","reduce","acc","tabs","Object","keys","ConfirmationModal","DeleteButton","isIcon","toggleConfirmation","setToggleConfirmation","deleteSuccess","setDeleteSuccess","deleteError","setDeleteError","delete","res","autoClose","setTimeout","handleConfirmation","RelatedFieldDropDown","views","activeView","handleView","handleEditDrawer","useParams","view","SelectField","handleChange","hide","hint","handleAddValue","showAddLink","defaultValue","onChange","TextBox","fieldChanged","addOn","TextArea","TextInput","inputFieldName","inputFieldRef","inputFieldValue","inputFieldLabel","inputFieldChange","readonly","Modal","toggleModalState","setToggleModalState","AddLocation","resetAddRelatedValue","handleUpdated","addLocationError","success","locationName","CompanyID","CompanyName","FileUploadField","handleFileChange","PageInputFields","pageFields","activeValue","handleRelatedSelectChange","handleAddRelatedValue","addRelatedValue","fieldType","relatedName","i","AddLocationModal","nameRef","handleACChange","React","memo","RelatedPageInputFields","relatedFields","activeData","relatedData","related","DeleteButtonFooter","setToggle","AddBookmarkFooter","isBookmarked","AddNoteButtonFooter","EditButtonFooter","isDrawerOpen","AddTagButtonFooter","values","tags","setTags","addTag","setAddTag","tagValue","setTagValue","update","splice","newTag","AddDocButtonFooter","setDocs","fetchDocs","attachmentRef","attachments","file","files","imageRef","child","put","fileURL","FileURL","AttachedDate","Footer","handleEditButton","DetailDrawer","handleRelatedClick","isDetailDrawerOpen","serviceTypes","accessTypes","setTab","activeSubtitle","setActiveSubtitle","docIsNew","setDocIsNew","updated","setUpdated","setPageFields","setPageSuccess","setPageError","isRelatedActive","setAddRelatedValue","relatedInputData","setRelatedInputData","relatedSubmitData","setRelatedSubmitData","isRelatedDrawerOpen","setIsRelatedDrawerOpen","isArrayMapDrawerOpen","setIsArrayMapDrawerOpen","isArrayMapInputData","setIsArrayMapInputData","isArrayMapData","setIsArrayMapData","setIsDrawerOpen","initialValue","useLoading","toggleLoading","handlePageFields","checkForNew","isDrawerActive","isNew","handleSetHeader","handleInitialFields","handleFinishedLoading","c","coreFields","handleInheritedData","notesDetailFields","handleSubmitUpdated","handleRelatedSubmit","selectedIndex","text","handleArrayMapSubmit","rel","merged","assign","minHeight","docItem","toggleViewDrawer","isViewRelatedActive","handleArrayMapChange","handleRelatedInputChange","handleRelatedField","fontVariant","LastUpdated","LastUpdateBy","setIsDetailDrawerOpen","Tags","RenderDrawer","drawers","handleAddDrawer","drawer","Table","TableHead","TableHeadItem","TableRow","handleRowClick","TableBody","TableData","handleDataClick","GridGroup","isGrid","mobileHeaderFields","groupBy","handleSort","groupedKeys","group","textAlign","includes","SelectView","DashboardGrids","userGroupByFields","Grid","grid","setGrid","groupByOptions","setGroupByOptions","setGroupBy","recent","setRecent","isRefreshDrawer","isNewDocDrawerOpen","setIsNewDocDrawerOpen","isNewDoc","setIsNewDoc","isCurrentDocID","setDrawers","useDrawer","recentUpdatesArr","handleSorting","handleCloseDrawer","getTime","slice","modRef","newDrawer","addDrawer","headerArr","Email","m","_sys","_modules","handleGridChange","groupOption","str","strLower","toLowerCase","charAt","toUpperCase","modGridStr","handleAddClick","GridGroup2","resetIsNew","removeDrawer","CompanyMenu","Login","loginError","setLoginError","onSubmit","Dashboard","isUserAdmin","fetchUser","isCurrentCompany","fetchPageData","userRef","FirstName","Type","Defaults","fetchCompaniesAdmin","timer","clearTimeout","companiesRef","handleCompanyMenuClick","NavBar","setIsActive","logOut","signOut","Page","handleGoBack","subtitle","pageSuccess","pageError","Button","AddCompany","companyName","nameField","uid","userField","status","handleToggleReadOnly","setInputReadOnly","inputReadOnly","goBack","tablLabel","FieldLabel","DetailModule","viewDropDown","setViewDropDown","setIsRelatedActive","handleInitialFieldMapping","indexRef","findIndex","pageFieldsRef","DetailViewDropDown","toggleFieldDropDown","pathname","CheckIfNeedsCache","setValue","fallbackValue","handleSetCache","QuickAdd","RelatedDetailModule","serviceStatusType","cachedLocations","cachedAccounts","handleSetLastUpdatedFields","LastUpdatedBy","addBtn","dataLabel","fieldRelated","NotFound","onclick","Panel","PanelHeader","PanelBlock","useCore","editModule","setEditModule","setFields","RenderModule","moduleData","handleToggleHeader","handleToggleVisible","handleToggleCurrency","handleParamsTextChange","handleRefTextChange","handleTextChange","handleModuleTextChange","handleDeleteField","handleSelectChange","handleAddField","handleSaveModule","handleSubmitModule","handleToggleDrawer","prev","currency","Admin","isModuleList","setIsModuleList","fetchModules","baseField","modulesRef","modules","closeToAdmin","handleDeleteModule","mod","handleSetModule","newFields","handleToggleVisibleChange","handleToggleHeaderChange","handleToggleCurrencyChange","optionValues","split","copyArr","totalFields","length","Search","searchValue","setSearchValue","searchResults","setSearchResults","searchLocationRef","searchServiceRef","searchTicketRef","searchOrderRef","searchAccountRef","locationResults","obj","some","toString","indexOf","serviceResults","ticketResults","orderResults","accountResults","useSearchHook","setLocationResults","setServiceResults","handleSearch","result","AssetID","LocationName","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"0OAAe,WAACA,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,wBACH,OAAO,2BACFF,GADL,IAEEG,iBAAkBF,EAAOG,UAE7B,IAAK,mBACH,OAAO,2BACFJ,GADL,IAEEK,YAAaJ,EAAOG,UAExB,IAAK,sBACH,OAAO,2BACFJ,GADL,IAEEM,eAAgBL,EAAOG,UAEzB,IAAK,mBACH,OAAO,2BACFJ,GADL,IAEEO,YAAaN,EAAOG,UAE1B,IAAK,YACH,OAAO,2BACFJ,GADL,IAEEQ,SAAUP,EAAOG,UAErB,IAAK,yBACH,OAAO,2BACFJ,GADL,IAEES,kBAAmBR,EAAOG,UAE9B,IAAK,4BACH,OAAO,2BACFJ,GADL,IAEEU,oBAAqBT,EAAOG,UAEhC,IAAK,wBACH,OAAO,2BACFJ,GADL,IAEEW,iBAAkBV,EAAOG,UAE7B,IAAK,2BACH,OAAO,2BACFJ,GADL,IAEEY,mBAAoBX,EAAOG,UAE/B,IAAK,uBACH,OAAO,2BACFJ,GADL,IAEEa,gBAAiBZ,EAAOG,UAE5B,IAAK,yBACH,OAAO,2BACFJ,GADL,IAEEc,iBAAkBb,EAAOG,UAE7B,IAAK,sBACH,OAAO,2BACFJ,GADL,IAEEe,eAAgBd,EAAOG,UAE3B,IAAK,wBACH,OAAO,2BACFJ,GADL,IAEEgB,gBAAiBf,EAAOG,UAE5B,IAAK,wBACH,OAAO,2BACFJ,GADL,IAEEiB,iBAAkBhB,EAAOG,UAE7B,IAAK,0BACH,OAAO,2BACFJ,GADL,IAEEkB,kBAAmBjB,EAAOG,UAE9B,IAAK,mBACH,OAAO,2BACFJ,GADL,IAEEmB,YAAalB,EAAOG,UAExB,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEoB,SAAUnB,EAAOG,UAErB,IAAK,iBACH,OAAO,2BACFJ,GADL,IAEEqB,cAAepB,EAAOG,UAE1B,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEsB,UAAWrB,EAAOG,UAEtB,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEuB,SAAUtB,EAAOG,UAErB,IAAK,cACH,OAAO,2BACFJ,GADL,IAEEwB,QAASvB,EAAOG,UAEpB,IAAK,aACH,OAAO,2BACFJ,GADL,IAEEyB,OAAQxB,EAAOG,UAEnB,IAAK,eACH,OAAO,2BACFJ,GADL,IAEE0B,SAAUzB,EAAOG,UAErB,IAAK,YACH,OAAO,2BACFJ,GADL,IAEE2B,MAAO1B,EAAOG,UAElB,IAAK,aACH,OAAO,2BACFJ,GADL,IAEE4B,OAAQ3B,EAAOG,UAEnB,IAAK,YACH,OAAO,2BACFJ,GADL,IAEE6B,MAAO5B,EAAOG,UAElB,IAAK,YACH,OAAO,2BACFJ,GADL,IAEE8B,MAAO7B,EAAOG,UAElB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEE+B,aAAc9B,EAAOG,UAEzB,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEgC,UAAW/B,EAAOG,UAEtB,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEiC,UAAWhC,EAAOG,UAEtB,IAAK,qBACH,OAAO,2BACFJ,GADL,IAEEkC,cAAejC,EAAOG,UAE1B,IAAK,qBACH,OAAO,2BACFJ,GADL,IAEEmC,aAAclC,EAAOG,Y,iCC5HvBgC,EAAMC,YAAc,CACxBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,kDACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGJC,EAAO,CAClBC,eACAC,UACAC,UACAC,QACAC,WACAC,YACAC,cACAC,WACAC,WACAC,cACAC,eACAC,QACAC,eACAC,gBACAC,mBACAC,eACAC,iBAEWC,EAAOC,YAAQ7B,GACf8B,EAAKC,YAAa/B,GAClBgC,EAAQX,YAAWrB,G,OC7DnBiC,EAAeC,wBAAc,IAE7BC,EAAgB,SAACC,GAE1B,IAAOC,EAAYJ,EAAZI,SAsCP,EAAsCC,oBAAS,GAA/C,mBACA,GADA,UAC4CA,oBAAS,IAArD,mBACA,GADA,UACwBA,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAc,uCAAG,WAAM1E,GAAN,eAAA2E,EAAA,6DACfC,EAAIjC,YAAMD,YAAWmB,EAAI,aAAcjB,YAAM,QAAS,iBAAkB5C,IADzD,SAER+C,YAAQ6B,GAFA,mFAAH,sDAMdC,EAAc,uCAAG,gCAAAF,EAAA,6DACfC,EAAIjC,YAAMD,YAAWmB,EAAI,aAC/BjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAFhB,SAGMiD,YAAQ6B,GAHd,OAGfG,EAHe,OAIfnD,EAAYmD,EAAaC,KAAKC,KAAI,SAAApC,GAAG,oBACzCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETa,QAAQC,IAAI,qBACZC,EAAazD,GATQ,2CAAH,qDAYd0D,EAAgB,uCAAG,WAAMJ,GAAN,mBAAAP,EAAA,6DACjBC,EAAIjC,YAAMD,YAAWmB,EAAI,aAC/BjB,YAAM,YAAa,KAAMsC,IAFF,SAGInC,YAAQ6B,GAHZ,OAGjBG,EAHiB,OAIjBnD,EAAYmD,EAAaC,KAAKC,KAAI,SAAApC,GAAG,oBACzCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETa,QAAQC,IAAI,uBACZC,EAAazD,GATU,2CAAH,sDAYhB2D,EAAa,uCAAG,gCAAAZ,EAAA,6DACdC,EAAIjC,YAAMD,YAAWmB,EAAI,YAC/BjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAFjB,SAGMiD,YAAQ6B,GAHd,OAGdY,EAHc,OAIdtE,EAAWsE,EAAYR,KAAKC,KAAI,SAAApC,GAAG,oBACvCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETmB,EAAYvE,GACZiE,QAAQC,IAAI,oBATQ,2CAAH,qDAYbM,EAAe,uCAAG,gCAAAf,EAAA,6DAChBC,EAAIjC,YAAMD,YAAWmB,EAAI,YAC/BjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAFf,SAGIiD,YAAQ6B,GAHZ,OAGhBY,EAHgB,OAIhBtE,EAAWsE,EAAYR,KAAKC,KAAI,SAAApC,GAAG,oBACvCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETmB,EAAYvE,GACZiE,QAAQC,IAAI,sBATU,2CAAH,qDAYfO,EAAY,uCAAG,gCAAAhB,EAAA,6DACbC,EAAIjC,YAAMD,YAAWmB,EAAI,WAAYjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD7D,SAEMiD,YAAQ6B,GAFd,OAEbgB,EAFa,OAGbzE,EAAUyE,EAAWZ,KAAKC,KAAI,SAAApC,GAAG,oBACrCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACTuB,EAAW1E,GACXgE,QAAQC,IAAI,mBAPO,2CAAH,qDAUZU,EAAc,uCAAG,gCAAAnB,EAAA,6DACfC,EAAIjC,YAAMD,YAAWmB,EAAI,WAAYjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD3D,SAEIiD,YAAQ6B,GAFZ,OAEfgB,EAFe,OAGfzE,EAAUyE,EAAWZ,KAAKC,KAAI,SAAApC,GAAG,oBACrCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACTuB,EAAW1E,GACXgE,QAAQC,IAAI,qBAPS,2CAAH,qDAUdW,EAAW,uCAAG,gCAAApB,EAAA,6DACZC,EAAIjC,YAAMD,YAAWmB,EAAI,UAAWjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD7D,SAEMiD,YAAQ6B,GAFd,OAEZoB,EAFY,OAGZ5E,EAAS4E,EAAUhB,KAAKC,KAAI,SAAApC,GAAG,oBACnCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT2B,GAAU7E,GACV+D,QAAQC,IAAI,kBAPM,2CAAH,qDAUXc,EAAa,uCAAG,gCAAAvB,EAAA,6DACdC,EAAIjC,YAAMD,YAAWmB,EAAI,UAAWjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD3D,SAEIiD,YAAQ6B,GAFZ,OAEdoB,EAFc,OAGd5E,EAAS4E,EAAUhB,KAAKC,KAAI,SAAApC,GAAG,oBACnCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT2B,GAAU7E,GACV+D,QAAQC,IAAI,oBAPQ,2CAAH,qDAUbe,EAAa,uCAAG,gCAAAxB,EAAA,6DACdC,EAAIjC,YAAMD,YAAWmB,EAAI,YAAajB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD7D,SAEMiD,YAAQ6B,GAFd,OAEdwB,EAFc,OAGd/E,EAAW+E,EAAYpB,KAAKC,KAAI,SAAApC,GAAG,oBACvCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT+B,GAAYhF,GANQ,2CAAH,qDASbiF,EAAe,uCAAG,gCAAA3B,EAAA,6DAChBC,EAAIjC,YAAMD,YAAWmB,EAAI,YAAajB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD3D,SAEIiD,YAAQ6B,GAFZ,OAEhBwB,EAFgB,OAGhB/E,EAAW+E,EAAYpB,KAAKC,KAAI,SAAApC,GAAG,oBACvCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT+B,GAAYhF,GANU,2CAAH,qDASfkF,EAAU,uCAAG,gCAAA5B,EAAA,6DACXC,EAAIjC,YAAMD,YAAWmB,EAAI,SAAUjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD7D,SAEMiD,YAAQ6B,GAFd,OAEX4B,EAFW,OAGXlF,EAAQkF,EAASxB,KAAKC,KAAI,SAAApC,GAAG,oBACjCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETmC,GAASnF,GAPQ,2CAAH,qDAUVoF,EAAY,uCAAG,gCAAA/B,EAAA,6DACbC,EAAIjC,YAAMD,YAAWmB,EAAI,SAAUjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD3D,SAEIiD,YAAQ6B,GAFZ,OAEb4B,EAFa,OAGblF,EAAQkF,EAASxB,KAAKC,KAAI,SAAApC,GAAG,oBACjCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETmC,GAASnF,GAPU,2CAAH,qDAUZqF,EAAW,uCAAG,gCAAAhC,EAAA,6DACZC,EAAIjC,YAAMD,YAAWmB,EAAI,UAAWjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD7D,SAEMiD,YAAQ6B,GAFd,OAEZgC,EAFY,OAGZrF,EAASqF,EAAU5B,KAAKC,KAAI,SAAApC,GAAG,oBACnCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETuC,GAAUtF,GAPQ,2CAAH,qDAUXuF,EAAa,uCAAG,gCAAAnC,EAAA,6DACdC,EAAIjC,YAAMD,YAAWmB,EAAI,UAAWjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD3D,SAEIiD,YAAQ6B,GAFZ,OAEdgC,EAFc,OAGdrF,EAASqF,EAAU5B,KAAKC,KAAI,SAAApC,GAAG,oBACnCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WAETuC,GAAUtF,GAPU,2CAAH,qDAUbwF,EAAU,uCAAG,gCAAApC,EAAA,6DACXC,EAAIjC,YAAMD,YAAWmB,EAAI,SAAUjB,YAAM,YAAa,iBAAkBkC,EAAYhF,mBADzE,SAEMiD,YAAQ6B,GAFd,OAEXoC,EAFW,OAGXvF,EAAQuF,EAAShC,KAAKC,KAAI,SAAApC,GAAG,oBACjCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT2C,GAASxF,GANQ,2CAAH,qDASVyF,EAAY,uCAAG,gCAAAvC,EAAA,6DACbC,EAAIjC,YAAMD,YAAWmB,EAAI,SAAUjB,YAAM,YAAa,iBAAkBkC,EAAYhF,mBADvE,SAEIiD,YAAQ6B,GAFZ,OAEboC,EAFa,OAGbvF,EAAQuF,EAAShC,KAAKC,KAAI,SAAApC,GAAG,oBACjCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT2C,GAASxF,GANU,2CAAH,qDASZ0F,EAAU,uCAAG,gCAAAxC,EAAA,6DACXC,EAAIjC,YAAMD,YAAWmB,EAAI,SAAUjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD7D,SAEMiD,YAAQ6B,GAFd,OAEXwC,EAFW,OAGX5F,EAAQ4F,EAASpC,KAAKC,KAAI,SAAApC,GAAG,oBACjCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT+C,GAAS7F,GANQ,2CAAH,qDASV8F,EAAY,uCAAG,gCAAA3C,EAAA,6DACbC,EAAIjC,YAAMD,YAAWmB,EAAI,SAAUjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD3D,SAEIiD,YAAQ6B,GAC5BhC,MAAM,YAAa,KAAMkC,EAAYhF,kBAAkByH,MAHvC,OAEbH,EAFa,OAIb5F,EAAQ4F,EAASpC,KAAKC,KAAI,SAAApC,GAAG,oBACjCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACT+C,GAAS7F,GAPU,2CAAH,qDAUZgG,EAAc,uCAAG,gCAAA7C,EAAA,6DACfC,EAAIjC,YAAMD,YAAWmB,EAAI,aAAcjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD7D,SAEMiD,YAAQ6B,GAFd,OAEf6C,EAFe,OAGf9F,EAAY8F,EAAazC,KAAKC,KAAI,SAAApC,GAAG,oBACzCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACToD,GAAa/F,GANQ,2CAAH,qDASdgG,EAAgB,uCAAG,gCAAAhD,EAAA,6DACjBC,EAAIjC,YAAMD,YAAWmB,EAAI,aAAcjB,YAAM,YAAa,KAAMkC,EAAYhF,mBAD3D,SAEIiD,YAAQ6B,GAFZ,OAEjB6C,EAFiB,OAGjB9F,EAAY8F,EAAazC,KAAKC,KAAI,SAAApC,GAAG,oBACzCqC,GAAIrC,EAAIqC,IACLrC,EAAIyB,WACToD,GAAa/F,GANU,2CAAH,qDAShBiG,EAAS,uCAAG,WAAMC,EAAU3C,GAAhB,qBAAAP,EAAA,6DAEVmD,EAASjF,YAAIgB,EAAIgE,EAAU3C,GAFjB,SAGMpC,YAAOgF,GAHb,OAGVC,EAHU,OAIhB5C,QAAQC,IAAI2C,GACNC,EAAUD,EAAQzD,OAClB2D,EAAQF,EAAQ7C,GACtBT,EAAU,aAACS,GAAI+C,GAAUD,IACzBzD,EAAQyD,GARQ,2CAAH,wDAYTE,EAAe,uCAAG,WAAML,EAAUvD,GAAhB,SAAAK,EAAA,+EAGdd,EAAGnB,WAAWmF,GAAUhF,MAAMsF,IAAI7D,GAHpB,sDAKpBa,QAAQC,IAAI,iCALQ,wDAAH,wDAmBrB,EAAgCgD,qBAAWC,EAxRtB,CAEnBtH,SAAU,GACVf,YAAa,GACbgB,cAAe,GACfb,UAAU,EACVc,UAAW,GACXC,SAAU,GACVU,UAAW,GACXP,SAAU,GACVC,MAAO,GACPF,OAAQ,GACRG,OAAQ,GACR+G,OAAQ,GACR3G,UAAW,GACXH,MAAO,GACPC,MAAO,GACPC,aAAc,GACd5B,iBAAkB,GAClBG,eAAgB,GAChBG,kBAAmB,GACnBC,oBAAqB,GACrBC,iBAAkB,GAClBC,mBAAoB,GACpBC,gBAAiB,GACjBC,iBAAkB,GAClBC,eAAgB,GAChBC,gBAAiB,GACjBC,iBAAkB,GAClBC,kBAAmB,GACnBgB,cAAe,GACfC,aAAc,GACdhB,aAAa,IAwPf,mBAAOgE,EAAP,KAAoByD,EAApB,KAqCQlD,EAAe,SAACzD,GACpB2G,EAAS,CACP1I,KAAM,gBACNE,QAAS6B,KAIP6D,EAAc,SAACvE,GACnBqH,EAAS,CACP1I,KAAM,eACNE,QAASmB,KAIP2E,EAAa,SAAC1E,GAClBoH,EAAS,CACP1I,KAAM,cACNE,QAASoB,KAIP8E,GAAY,SAAC7E,GACjBmH,EAAS,CACP1I,KAAM,aACNE,QAASqB,KAIPiF,GAAc,SAAChF,GACnBkH,EAAS,CACP1I,KAAM,eACNE,QAASsB,KAIPoF,GAAW,SAACnF,GAChBiH,EAAS,CACP1I,KAAM,YACNE,QAASuB,KAIPuF,GAAY,SAACtF,GACjBgH,EAAS,CACP1I,KAAM,aACNE,QAASwB,KAIP0F,GAAW,SAACxF,GAChB8G,EAAS,CACP1I,KAAM,YACNE,QAAS0B,KAIPiG,GAAe,SAAC/F,GACpB4G,EAAS,CACP1I,KAAM,gBACNE,QAAS4B,KAIP0F,GAAW,SAAC7F,GAChB+G,EAAS,CACP1I,KAAM,YACNE,QAASyB,KAkIf,OACE,cAAC4C,EAAD,CAAUoE,MAAO,CACbC,QAnPU,CACdC,YAAa,CACXC,kBAAmB,QACnBC,kBAAmB,UAkPjBC,iBA3OqB,SAACC,GACxBP,EAAS,CACP1I,KAAM,iBACNE,QAAS+I,KAyOTC,YArOgB,SAAChI,GACnBwH,EAAS,CACP1I,KAAM,gBACNE,QAASgB,KAmOTiI,eA/NmB,SAACC,GACtBV,EAAS,CACP1I,KAAM,mBACNE,QAASkJ,KA6NTC,YAzNgB,SAACC,GACjBZ,EAAS,CACP1I,KAAM,YACNE,QAASoJ,KAuNXC,eArBmB,WAErB,OADoB,IAAIC,MACLC,cAAcC,UAAU,EAAG,KAqB5CC,aArNiB,SAACvI,GACpBsH,EAAS,CACP1I,KAAM,gBACNE,QAASkB,KAmNToE,eACAI,cACAI,aACAI,aACAI,eACAI,YACAQ,YACAwC,gBA1BoB,SAAC/H,GACvB6G,EAAS,CACP1I,KAAM,oBACNE,QAAS2B,KAwBTgG,gBACAL,YAEAqC,oBApJwB,SAACxE,GAC3BqD,EAAS,CACP1I,KAAM,wBACNE,QAASmF,KAkJTyE,kBA9IsB,SAACb,GAEzBP,EAAS,CACP1I,KAAM,sBACNE,QAAS+I,KA2ITc,qBAvIyB,SAAC1E,GAC5BqD,EAAS,CACP1I,KAAM,yBACNE,QAASmF,KAqIT2E,uBAjI2B,SAACf,GAC9BP,EAAS,CACP1I,KAAM,4BACNE,QAAS+I,KA+HTgB,oBA3HwB,SAAC5E,GAC3BqD,EAAS,CACP1I,KAAM,wBACNE,QAASmF,KAyHT6E,sBArH0B,SAACjB,GAC7BP,EAAS,CACP1I,KAAM,2BACNE,QAAS+I,KAmHTkB,mBA/GuB,SAAC9E,GAC1BqD,EAAS,CACP1I,KAAM,uBACNE,QAASmF,KA6GT+E,oBAzGwB,SAACC,GAC3B3B,EAAS,CACP1I,KAAM,yBACNE,QAASmK,KAuGTC,kBAnGsB,SAACjF,GACzBqD,EAAS,CACP1I,KAAM,sBACNE,QAASmF,KAiGTkF,mBA7FuB,SAACF,GAC1B3B,EAAS,CACP1I,KAAM,wBACNE,QAASmK,KA2FTG,oBAvFwB,SAACnF,GAC3BqD,EAAS,CACP1I,KAAM,wBACNE,QAASmF,KAqFToF,qBAjFyB,SAACJ,GAC5B3B,EAAS,CACP1I,KAAM,0BACNE,QAASmK,KA+ETK,iBA7DqB,SAACzB,GACxBP,EAAS,CACP1I,KAAM,qBACNE,QAAS+I,KA2DT0B,gBAvDoB,SAACtF,GACvBqD,EAAS,CACP1I,KAAM,qBACNE,QAASmF,KAsDTR,iBACAG,iBACAS,mBACAC,gBACAG,kBACAC,eACAG,iBACAC,cACAG,gBACAC,gBACAG,kBACAC,aACAG,eACAC,cACAG,gBACAC,aACAG,eACAM,iBACAG,mBACAR,aACAG,eACAM,YACAM,kBAGA5D,OACAC,UACAC,SACAC,YAEAgG,eA5GmB,SAACvF,GACtBqD,EAAS,CACP1I,KAAM,mBACNE,QAASmF,KA0GTwF,eAtGmB,SAAC5B,GACtBP,EAAS,CACP1I,KAAM,mBACNE,QAAS+I,KAqGThE,eArEJ,SAuEGX,EAAMwG,YCtlBTC,EAAa,CACjB,CACEC,KAAM,OACNC,MAAO,QAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,oBACNC,MAAO,qBAET,CACED,KAAM,QACNC,MAAO,SAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,QACNC,MAAO,SAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,WACNC,MAAO,YAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,QACNC,MAAO,SAET,CACED,KAAM,QACNC,MAAO,SAET,CACED,KAAM,SACNC,MAAO,UAET,CACED,KAAM,WACNC,MAAO,YAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,OACNC,MAAO,QAET,CACED,KAAM,OACNC,MAAO,QAET,CACED,KAAM,OACNC,MAAO,QAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,eACNC,MAAO,gBAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,eACNC,MAAO,gBAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,cACNC,MAAO,eAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,WACNC,MAAO,YAET,CACED,KAAM,cACNC,MAAO,eAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,cACNC,MAAO,eAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,SACNC,MAAO,UAET,CACED,KAAM,WACNC,MAAO,YAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,kBACNC,MAAO,mBAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,mBACNC,MAAO,qBC/JLC,EAAY,CAChB,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,aACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,cACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,QACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,OACR,KAAQ,MAEV,CACE,KA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CTX,YAAa3K,EACb4K,QAAS,KACTC,WAAY,KACZO,IAAK,WAEP,CACEZ,MAAO,MACPE,UAAW,MACXD,eAAgB,OAChBW,IAAK,WAEP,CACEZ,MAAO,qBACPE,UAAW,YACXY,SAAS,EACTb,eAAgB,aAChBW,IAAK,WAEP,CACEZ,MAAO,YACPE,UAAW,WACXD,eAAgB,SAChBE,YAAanB,EACboB,QAAS,OACTC,WAAY,QACZO,IAAK,WAEP,CACEZ,MAAO,iBACPE,UAAW,eACXD,eAAgB,OAChBW,IAAK,WAEP,CACEZ,MAAO,qBACPE,UAAW,aACXY,SAAS,EACTb,eAAgB,YAChBW,IAAK,WAEP,CACEZ,MAAO,iBACPE,UAAW,gBACXD,eAAgB,iBAChBQ,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,YACNC,MAAO,aAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,iBACNC,MAAO,kBAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,QACNC,MAAO,SAET,CACED,KAAM,SACNC,MAAO,YAIb,CACEc,MAAO,UACPE,UAAW,UACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,KACNC,MAAO,MAET,CACED,KAAM,KACNC,MAAO,QAIb,CACEc,MAAO,aACPE,UAAW,YACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,UAMf0B,IAAK,UACLG,gBAAgB,GAElB,CACEf,MAAO,UACPC,eAAgB,YAElB,CACED,MAAO,kBACPE,UAAW,UACXD,eAAgB,WAChBE,YAAa5K,EACb6K,QAAS,KACTC,WAAY,YACZC,kBAAmB,UACnBC,iBAAkB,YAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,SACPE,UAAW,YACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,UACNC,MAAO,WAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,aACNC,MAAO,gBAIb,CACEc,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,YACNC,MAAO,aAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,SACNC,MAAO,aAKf0B,IAAK,WAEP,CACEZ,MAAO,UACPC,eAAgB,YAElB,CACED,MAAO,kBACPE,UAAW,aACXY,SAAS,EACTb,eAAgB,iBAChBE,YAAa1K,EACb2K,QAAS,KACTC,WAAY,aACZC,kBAAmB,WACnBC,iBAAkB,YAClBC,kBAAmB,iBACnBC,mBAAoB,CAClB,CACET,MAAO,iBACPE,UAAW,aACXD,eAAgB,SAGpBU,gBAAiB,UACjBC,IAAK,WAEP,CACEZ,MAAO,cACPE,UAAW,gBACXD,eAAgB,OAChBW,IAAK,WAEP,CACEZ,MAAO,eACPE,UAAW,WACXD,eAAgB,OAChBW,IAAK,WAEP,CACEZ,MAAO,mBACPE,UAAW,iBACXD,eAAgB,WAChBW,IAAK,WAEP,CACEZ,MAAO,QACPE,UAAW,QACXD,eAAgB,WAChBK,kBAAmB,QACnBC,iBAAkB,YAClBC,kBAAmB,OACnBC,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,cAElB,CACED,MAAO,YACPE,UAAW,OACXD,eAAgB,YAElB,CACED,MAAO,aACPE,UAAW,YACXD,eAAgB,YAElB,CACED,MAAO,WACPE,UAAW,eACXD,eAAgB,aAGpBW,IAAK,WAEP,CACEZ,MAAO,QACPC,eAAgB,YAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,WAChBK,kBAAmB,QACnBC,iBAAkB,YAClBC,kBAAmB,OACnBC,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,cAElB,CACED,MAAO,OACPE,UAAW,WACXD,eAAgB,cAGpBW,IAAK,UAIHI,EAAqB,CAEzB,CACEhB,MAAO,gBACPE,UAAW,YACXD,eAAgB,OAChBW,IAAK,aACLC,UAAU,GAEZ,CACEb,MAAO,mBACPE,UAAW,eACXD,eAAgB,iBAChBE,YAAanK,EACboK,QAAS,KACTC,WAAY,OACZC,kBAAmB,YACnBC,iBAAkB,aAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,gBACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,QAElB,CACED,MAAO,kBACPE,UAAW,SACXD,eAAgB,QAElB,CACED,MAAO,MACPE,UAAW,MACXD,eAAgB,QAElB,CACED,MAAO,UACPE,UAAW,UACXD,eAAgB,SAGpBU,gBAAiB,WACjBC,IAAK,cAEP,CACEZ,MAAO,sBACPE,UAAW,aACXY,SAAS,EACTX,YAAanK,EACboK,QAAS,KACTC,WAAY,KACZO,IAAK,cAEP,CACEZ,MAAO,kBACPE,UAAW,aACXY,SAAS,EACTb,eAAgB,iBAChBE,YAAa,GACbC,QAAS,KACTC,WAAY,aACZC,kBAAmB,WACnBC,iBAAkB,YAClBC,kBAAmB,iBACnBC,mBAAoB,CAClB,CACET,MAAO,iBACPE,UAAW,aACXD,eAAgB,SAGpBU,gBAAiB,UACjBC,IAAK,cAEP,CACEZ,MAAO,qBACPE,UAAW,YACXY,SAAS,EACTX,YAAa1K,EACb2K,QAAS,KACTC,WAAY,KACZO,IAAK,cAGP,CACEZ,MAAO,kBACPE,UAAW,iBACXD,eAAgB,iBAChBE,YAAa7K,EACb8K,QAAS,KACTC,WAAY,UACZC,kBAAmB,WACnBC,iBAAkB,YAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,WACPE,UAAW,UACXD,eAAgB,SAGpBU,gBAAiB,UACjBC,IAAK,cAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBE,YAAanB,EACboB,QAAS,OACTC,WAAY,QACZO,IAAK,cAEP,CACEZ,MAAO,iBACPE,UAAW,gBACXD,eAAgB,aAChBW,IAAK,cAEP,CACEZ,MAAO,OACPE,UAAW,OACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,UACNC,MAAO,WAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,aACNC,MAAO,eAGX0B,IAAK,cAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,YACNC,MAAO,aAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,SACNC,MAAO,WAGX0B,IAAK,cAGP,CACEZ,MAAO,UACPE,UAAW,UACXD,eAAgB,YAChBW,IAAK,cAEP,CACEZ,MAAO,QACPE,UAAW,SACXD,eAAgB,WAChBE,YAAa,GACbC,QAAS,KACTC,WAAY,WACZC,kBAAmB,QACnBC,iBAAkB,SAClBC,kBAAmB,QACnBC,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,cAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,aAGpBU,gBAAiB,OACjBC,IAAK,UAIHK,EAAsB,CAE1B,CACEjB,MAAO,iBACPE,UAAW,aACXD,eAAgB,OAChBY,UAAU,EACVD,IAAK,cAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBE,YAAanB,EACboB,QAAS,OACTC,WAAY,QACZO,IAAK,cAEP,CACEZ,MAAO,uBACPE,UAAW,mBACXD,eAAgB,aAChBW,IAAK,WAEP,CACEZ,MAAO,OACPE,UAAW,OACXD,eAAgB,OAChBW,IAAK,WAEP,CACEZ,MAAO,mBACPE,UAAW,WACXD,eAAgB,WAChBE,YAAa,GACbC,QAAS,KACTC,WAAY,UACZC,kBAAmB,WACnBC,iBAAkB,YAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,WACPE,UAAW,UACXD,eAAgB,QAElB,CACED,MAAO,mBACPE,UAAW,eACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,WACXD,eAAgB,SAGpBU,gBAAiB,UACjBC,IAAK,aACLM,SAAU,aACVH,gBAAgB,GAElB,CACEf,MAAO,QACPE,UAAW,QACXD,eAAgB,WAChBK,kBAAmB,QACnBC,iBAAkB,YAClBE,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,cAElB,CACED,MAAO,cACPE,UAAW,gBACXD,eAAgB,QAElB,CACED,MAAO,WACPE,UAAW,UACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,aAGpBW,IAAK,UACLM,SAAU,YAIRC,EAAoB,CACxB,CACEnB,MAAO,aACPC,eAAgB,YAElB,CACED,MAAO,mBACPE,UAAW,eACXD,eAAgB,iBAChBE,YAAanK,EACboK,QAAS,KACTC,WAAY,OACZC,kBAAmB,YACnBC,iBAAkB,aAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,gBACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,QAElB,CACED,MAAO,kBACPE,UAAW,SACXD,eAAgB,QAElB,CACED,MAAO,MACPE,UAAW,MACXD,eAAgB,QAElB,CACED,MAAO,UACPE,UAAW,UACXD,eAAgB,SAGpBU,gBAAiB,WACjBC,IAAK,cAEP,CACEZ,MAAO,eACPE,UAAW,WACXD,eAAgB,OAChBY,UAAU,EACVD,IAAK,cAEP,CACEZ,MAAO,eACPE,UAAW,YACXD,eAAgB,aAChBW,IAAK,cAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBE,YAAanB,EACboB,QAAS,OACTC,WAAY,QACZO,IAAK,cAEP,CACEZ,MAAO,eACPE,UAAW,oBACXD,eAAgB,OAChBW,IAAK,cAEP,CACEZ,MAAO,aACPE,UAAW,OACXY,SAAS,EACTM,WAAY,SACZhB,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,MACNC,MAAO,OAET,CACED,KAAM,SACNC,MAAO,UAET,CACED,KAAM,aACNC,MAAO,eAGX0B,IAAK,cAEP,CACEZ,MAAO,eACPE,UAAW,MACXD,eAAgB,WAChBW,IAAK,cAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBG,QAAS,KACTC,WAAY,OACZF,YAAa,CACX,CACElB,KAAM,UACNC,MAAO,WAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,YACNC,MAAO,cAGX0B,IAAK,cAEP,CACEZ,MAAO,YACPE,UAAW,YACXD,eAAgB,OAChBW,IAAK,WAEP,CACEZ,MAAO,kBACPE,UAAW,UACXD,eAAgB,iBAChBE,YAAa7K,EACb8K,QAAS,KACTC,WAAY,UACZC,kBAAmB,WACnBC,iBAAkB,YAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,WACPE,UAAW,UACXD,eAAgB,QAElB,CACED,MAAO,WACPE,UAAW,eACXD,eAAgB,SAGpBU,gBAAiB,UACjBC,IAAK,WAEP,CACEZ,MAAO,UACPE,UAAW,UACXD,eAAgB,YAChBW,IAAK,WAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,WAChBE,YAAaxK,EACbyK,QAAS,KACTC,WAAY,YACZC,kBAAmB,SACnBC,iBAAkB,UAClBC,kBAAmB,QACnBC,mBAAoB,CAClB,CACET,MAAO,QACPE,UAAW,YACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,MACNC,MAAO,OAET,CACED,KAAM,gBACNC,MAAO,iBAET,CACED,KAAM,kBACNC,MAAO,mBAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,gBACNC,MAAO,mBAIb,CACEc,MAAO,OACPE,UAAW,OACXD,eAAgB,eAGpBW,IAAK,WAEP,CACEZ,MAAO,kBACPE,UAAW,UACXD,eAAgB,WAChBE,YAAa5K,EACb6K,QAAS,KACTC,WAAY,YACZC,kBAAmB,UACnBC,iBAAkB,WAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,SACPE,UAAW,YACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,UACNC,MAAO,WAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,aACNC,MAAO,gBAIb,CACEc,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,YACNC,MAAO,aAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,SACNC,MAAO,aAKf0B,IAAK,WAEP,CACEZ,MAAO,QACPE,UAAW,QACXD,eAAgB,WAChBK,kBAAmB,QACnBC,iBAAkB,UAClBC,kBAAmB,OACnBC,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,cAElB,CACED,MAAO,OACPE,UAAW,WACXD,eAAgB,cAGpBW,IAAK,SAEP,CACEZ,MAAO,UACPE,UAAW,UACXD,eAAgB,iBAChBQ,mBAAoB,CAClB,CACET,MAAO,QACPE,UAAW,aACXD,eAAgB,cAElB,CACED,MAAO,UACPE,UAAW,WACXD,eAAg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WACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,QAElB,CACED,MAAO,kBACPE,UAAW,SACXD,eAAgB,QAElB,CACED,MAAO,MACPE,UAAW,MACXD,eAAgB,QAElB,CACED,MAAO,UACPE,UAAW,UACXD,eAAgB,SAGpBU,gBAAiB,WACjBC,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBE,YAAanB,EACboB,QAAS,OACTC,WAAY,QACZO,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,OACPE,UAAW,OACXD,eAAgB,SAChBE,YAAaf,EACbgB,QAAS,OACTC,WAAY,QACZO,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,eACPE,UAAW,oBACXD,eAAgB,OAChBW,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,cACPE,UAAW,aACXD,eAAgB,SAChBE,YAAad,EACbe,QAAS,OACTC,WAAY,QACZO,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,WACPE,UAAW,UACXD,eAAgB,OAChBW,IAAK,aACLM,SAAU,aACVL,UAAU,GAEZ,CACEb,MAAO,YACPE,UAAW,YACXD,eAAgB,OAChBW,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,eACPE,UAAW,MACXD,eAAgB,WAChBW,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBE,YAAa,CACX,CACElB,KAAM,SACNC,MAAO,UAET,CACED,KAAM,eACNC,MAAO,gBAET,CACED,KAAM,qBACNC,MAAO,sBAET,CACED,KAAM,qBACNC,MAAO,uBAGXkB,QAAS,OACTC,WAAY,QACZO,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,UACPC,eAAgB,YAElB,CACED,MAAO,qBACPE,UAAW,YACXY,SAAS,EACTb,eAAgB,aAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,YACPE,UAAW,WACXD,eAAgB,SAChBE,YAAanB,EACboB,QAAS,OACTC,WAAY,QACZO,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,iBACPE,UAAW,eACXD,eAAgB,OAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,YACPE,UAAW,OACXD,eAAgB,YAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,YACPE,UAAW,OACXD,eAAgB,YAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,iBACPE,UAAW,gBACXD,eAAgB,iBAChBQ,mBAAoB,CAClB,CACET,MAAO,UACPE,UAAW,UACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,KACNC,MAAO,MAET,CACED,KAAM,KACNC,MAAO,QAIb,CACEc,MAAO,aACPE,UAAW,YACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,OAET,CACED,KAAM,MACNC,MAAO,UAMf0B,IAAK,UACLM,SAAU,UACVH,gBAAgB,GAElB,CACEf,MAAO,qBACPE,UAAW,aACXY,SAAS,EACTb,eAAgB,YAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,iBACPE,UAAW,WACXD,eAAgB,WAChBE,YAAa,GACbC,QAAS,KACTC,WAAY,WACZC,kBAAmB,SACnBC,iBAAkB,YAClBC,kBAAmB,eACnBC,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,YACXD,eAAgB,cAElB,CACED,MAAO,WACPE,UAAW,WACXD,eAAgB,iBAChBE,YAAa,GACbC,QAAS,KACTE,kBAAmB,SACnBC,iBAAkB,UAClBC,kBAAmB,QACnBC,mBAAoB,CAClB,CACET,MAAO,QACPE,UAAW,WACXD,eAAgB,SAGpBU,gBAAiB,SAEnB,CACEX,MAAO,QACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,SACPE,UAAW,SACXD,eAAgB,SAGpBW,IAAK,UACLM,SAAU,UACVH,gBAAgB,GAElB,CACEf,MAAO,mBACPE,UAAW,UACXY,SAAS,EACTX,YA5zBO,GA6zBPC,QAAS,KACTC,WAAY,KACZO,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,UACPC,eAAgB,YAElB,CACED,MAAO,kBACPE,UAAW,YACXD,eAAgB,WAChBE,YAAa,GACbC,QAAS,KACTC,WAAY,YACZC,kBAAmB,UACnBC,iBAAkB,YAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,SACPE,UAAW,YACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,UACNC,MAAO,WAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,aACNC,MAAO,gBAIb,CACEc,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBG,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,YACNC,MAAO,aAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,SACNC,MAAO,aAKf0B,IAAK,WAEP,CACEZ,MAAO,UACPC,eAAgB,YAElB,CACED,MAAO,kBACPE,UAAW,aACXY,SAAS,EACTb,eAAgB,iBAChBE,YAAa,GACbC,QAAS,KACTC,WAAY,aACZC,kBAAmB,WACnBC,iBAAkB,YAClBC,kBAAmB,iBACnBC,mBAAoB,CAClB,CACET,MAAO,iBACPE,UAAW,aACXD,eAAgB,SAGpBU,gBAAiB,UACjBC,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,cACPE,UAAW,gBACXD,eAAgB,OAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,eACPE,UAAW,WACXD,eAAgB,OAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,mBACPE,UAAW,iBACXD,eAAgB,WAChBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,QACPE,UAAW,QACXD,eAAgB,WAChBK,kBAAmB,QACnBC,iBAAkB,YAClBC,kBAAmB,OACnBC,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,cAElB,CACED,MAAO,YACPE,UAAW,OACXD,eAAgB,YAElB,CACED,MAAO,aACPE,UAAW,YACXD,eAAgB,YAElB,CACED,MAAO,WACPE,UAAW,eACXD,eAAgB,aAGpBW,IAAK,UACLM,SAAU,WAEZ,CACElB,MAAO,QACPC,eAAgB,YAElB,CACED,MAAO,GACPE,UAAW,QACXD,eAAgB,WAChBK,kBAAmB,QACnBC,iBAAkB,YAClBC,kBAAmB,OACnBC,mBAAoB,CAClB,CACET,MAAO,OACPE,UAAW,OACXD,eAAgB,cAElB,CACED,MAAO,OACPE,UAAW,WACXD,eAAgB,cAGpBW,IAAK,QACLM,SAAU,UAIRF,GAAqB,CAEzB,CACEhB,MAAO,gBACPE,UAAW,YACXD,eAAgB,OAChBW,IAAK,aACLC,UAAU,GAEZ,CACEb,MAAO,mBACPE,UAAW,eACXD,eAAgB,iBAChBE,YAAa,GACbC,QAAS,KACTC,WAAY,OACZC,kBAAmB,YACnBC,iBAAkB,aAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,gBACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,QAElB,CACED,MAAO,kBACPE,UAAW,SACXD,eAAgB,QAElB,CACED,MAAO,MACPE,UAA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AChBE,YAAa,GACbC,QAAS,KACTC,WAAY,OACZC,kBAAmB,YACnBC,iBAAkB,aAClBC,kBAAmB,gBACnBC,mBAAoB,CAClB,CACET,MAAO,gBACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,YACPE,UAAW,WACXD,eAAgB,QAElB,CACED,MAAO,OACPE,UAAW,OACXD,eAAgB,QAElB,CACED,MAAO,QACPE,UAAW,QACXD,eAAgB,QAElB,CACED,MAAO,kBACPE,UAAW,SACXD,eAAgB,QAElB,CACED,MAAO,MACPE,UAAW,MACXD,eAAgB,QAElB,CACED,MAAO,UACPE,UAAW,UACXD,eAAgB,SAGpBU,gBAAiB,WACjBC,IAAK,aACLM,SAAU,cAEZ,CACElB,MAAO,eACPE,UAAW,WACXD,eAAgB,OAChBY,UAAU,EACVD,IAAK,cAEP,CACEZ,MAAO,eACPE,UAAW,YACXD,eAAgB,aAChBW,IAAK,cAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBE,YAAanB,EACboB,QAAS,OACTC,WAAY,QACZO,IAAK,cAEP,CACEZ,MAAO,eACPE,UAAW,oBACXD,eAAgB,OAChBW,IAAK,cAEP,CACEZ,MAAO,aACPE,UAAW,OACXY,SAAS,EACTM,WAAY,SACZhB,QAAS,OACTC,WAAY,QACZF,YAAa,CACX,CACElB,KAAM,MACNC,MAAO,OAET,CACED,KAAM,SACNC,MAAO,UAET,CACED,KAAM,aACNC,MAAO,eAGX0B,IAAK,cAEP,CACEZ,MAAO,eACPE,UAAW,MACXD,eAAgB,WAChBW,IAAK,cAEP,CACEZ,MAAO,SACPE,UAAW,SACXD,eAAgB,SAChBG,QAAS,KACTC,WAAY,OACZF,YAAa,CACX,CACElB,KAAM,UACNC,MAAO,WAET,CACED,KAAM,YACNC,MAAO,aAET,CACED,KAAM,YACNC,MAAO,cAGX0B,IAAK,cAEP,CACEZ,MAAO,YACPE,UAAW,YACXD,eAAgB,OAChBW,IAAK,WAEP,CACEZ,MAAO,kBACPE,UAAW,UACXD,eAAgB,iBAChBE,YAAa7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","file":"static/js/main.87e0a8b0.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_COMPANYID\":\n      return {\n        ...state,\n        currentCompanyID: action.payload\n      }\n    case \"SET_CURRENT_USER\":\n      return {\n        ...state,\n        currentUser: action.payload\n      }\n    case \"SET_CURRENT_COMPANY\":\n      return {\n        ...state,\n        currentCompany: action.payload\n      }\n      case \"SET_CURRENT_GRID\":\n        return {\n          ...state,\n          currentGrid: action.payload\n        }  \n    case \"LOGGED_IN\":\n      return {\n        ...state,\n        loggedIn: action.payload\n      };\n    case \"SET_CURRENT_LOCATIONID\":\n      return {\n        ...state,\n        currentLocationID: action.payload\n      };\n    case \"SET_CURRENT_LOCATION_NAME\":\n      return {\n        ...state,\n        currentLocationName: action.payload\n      }; \n    case \"SET_CURRENT_SERVICEID\":\n      return {\n        ...state,\n        currentServiceID: action.payload\n      };\n    case \"SET_CURRENT_SERVICE_NAME\":\n      return {\n        ...state,\n        currentServiceName: action.payload\n      };\n    case \"SET_CURRENT_TICKETID\": \n      return {\n        ...state,\n        currentTicketID: action.payload\n      };\n    case \"SET_CURRENT_TICKET_NUM\": \n      return {\n        ...state,\n        currentTicketNum: action.payload\n      };\n    case \"SET_CURRENT_ORDERID\":\n      return {\n        ...state,\n        currentOrderID: action.payload\n      }; \n    case \"SET_CURRENT_ORDER_NUM\": \n      return {\n        ...state,\n        currentOrderNum: action.payload\n      };   \n    case \"SET_CURRENT_ACCOUNTID\":\n      return {\n        ...state,\n        currentAccountID: action.payload\n      };  \n    case \"SET_CURRENT_ACCOUNT_NUM\": \n      return {\n        ...state,\n        currentAccountNum: action.payload\n      };\n    case \"SET_DATA_LOADING\":\n      return {\n        ...state,\n        dataLoading: action.payload\n      };  \n    case \"SET_USER_TYPE\":\n      return {\n        ...state,\n        userType: action.payload\n      };  \n    case \"SET_USER_FNAME\":\n      return {\n        ...state,\n        userFirstName: action.payload\n      };  \n    case \"SET_COMPANIES\":\n      return {\n        ...state,\n        companies: action.payload\n      };\n    case \"SET_SERVICES\":\n      return {\n        ...state,\n        services: action.payload\n      };\n    case \"SET_TICKETS\":\n      return {\n        ...state,\n        tickets: action.payload\n      };\n    case \"SET_ORDERS\":\n      return {\n        ...state,\n        orders: action.payload\n      };\n    case \"SET_ACCOUNTS\":\n      return {\n        ...state,\n        accounts: action.payload\n      }; \n    case \"SET_BILLS\":\n      return {\n        ...state,\n        bills: action.payload\n      };\n    case \"SET_EVENTS\":\n      return {\n        ...state,\n        events: action.payload\n      };\n    case \"SET_NOTES\":\n      return {\n        ...state,\n        notes: action.payload\n      };\n    case \"SET_USERS\":\n      return {\n        ...state,\n        users: action.payload\n      }; \n    case \"SET_USER_DEFAULTS\":\n      return {\n        ...state,\n        userDefaults: action.payload\n      }; \n    case \"SET_CONTRACTS\":\n      return {\n        ...state,\n        contracts: action.payload\n      }; \n    case \"SET_LOCATIONS\":\n      return {\n        ...state,\n        locations: action.payload\n      }; \n    case \"SET_CURRENT_MODULE\":\n      return {\n        ...state,\n        currentModule: action.payload\n      }; \n    case \"SET_CURRENT_DOC_ID\":\n      return {\n        ...state,\n        currentDocID: action.payload\n      }; \n        \n  };\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { \n  getFirestore, \n  collection, \n  query, \n  where, \n  onSnapshot,\n  doc, \n  getDoc, \n  getDocs, \n  updateDoc, \n  setDoc, \n  addDoc, \n  deleteDoc,\n  arrayUnion, \n  arrayRemove \n} from 'firebase/firestore'\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBi2EZr6TAuP_M0GDf2t6kYjVSBr-EEHgI\",\n  authDomain: \"telemi-develop.firebaseapp.com\",\n  projectId: \"telemi-develop\",\n  storageBucket: \"telemi-develop.appspot.com\",\n  messagingSenderId: \"208473651772\",\n  appId: \"1:208473651772:web:b7d880afd16985ad626139\",\n  measurementId: \"G-K3F50P2C8N\"\n};\n\n// Initialize Firebase\nconst app = initializeApp({\n  apiKey: \"AIzaSyCLcH3HfDZU-0Qa8k90hHYhQZZRyOAy8j4\",\n  authDomain: \"tiems-24d17.firebaseapp.com\",\n  databaseURL: \"https://tiems-24d17-default-rtdb.firebaseio.com\",\n  projectId: \"tiems-24d17\",\n  storageBucket: \"tiems-24d17.appspot.com\",\n  messagingSenderId: \"371736927443\",\n  appId: \"1:371736927443:web:9d80c3abc38e399db3c826\",\n  measurementId: \"G-1R2QK5MPPK\"\n});\n\nexport const fire = {\n  collection, \n  query, \n  where, \n  doc, \n  getDoc, \n  getDocs, \n  updateDoc, \n  setDoc, \n  addDoc, \n  deleteDoc,\n  getStorage,\n  ref,\n  onSnapshot,\n  uploadBytes,\n  getDownloadURL,\n  arrayUnion,\n  arrayRemove\n};\nexport const auth = getAuth(app); \nexport const db = getFirestore(app);\nexport const store = getStorage(app); \n\n\n","import React, {useState, createContext, useReducer} from 'react'\nimport stateReducer from './stateReducer'\nimport {db} from './firebase'\nimport { collection, doc, getDoc, query, where, getDocs } from 'firebase/firestore'\n\n\n\nexport const stateContext = createContext({})\n\nexport const StateProvider = (props) => {\n    \n    const {Provider} = stateContext\n\n    const initialState = {\n\n      userType: \"\",\n      currentUser: \"\",\n      userFirstName: \"\",\n      loggedIn: false,\n      companies: \"\",\n      services: \"\",\n      locations: \"\",\n      accounts: \"\",\n      bills: \"\",\n      orders: \"\",\n      events: \"\",\n      quotes: \"\",\n      contracts: \"\",\n      notes: \"\",\n      users: \"\",\n      userDefaults: \"\",\n      currentCompanyID: \"\",\n      currentCompany: \"\",\n      currentLocationID: \"\",\n      currentLocationName: \"\",\n      currentServiceID: \"\",\n      currentServiceName: \"\",\n      currentTicketID: \"\",\n      currentTicketNum: \"\",\n      currentOrderID: \"\",\n      currentOrderNum: \"\",\n      currentAccountID: \"\",\n      currentAccountNum: \"\", \n      currentModule: \"\",\n      currentDocID: \"\",    \n      dataLoading: false,\n\n    }\n    \n    const [toggleAdmin, setToggleAdmin] = useState(false)\n    const [toggleDevTools, setToggleDevTools] = useState(false)\n    const [data, setData] = useState(\"\")\n    const [active, setActive] = useState(\"\")\n    //** Global Service Calls */\n\n    const fetchCompanies = async(currentUser) => {\n      const q = query(collection(db, \"Companies\"), where(\"Users\", \"array-contains\", currentUser))\n      return await getDocs(q)\n    }\n\n\n    const fetchLocations = async() => {\n      const q = query(collection(db, \"Locations\"),\n      where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const locationsRef = await getDocs(q)\n      const locations = locationsRef.docs.map(doc => ({\n        id: doc.id, \n        ...doc.data()\n      }))\n      console.log('Fetched Locations')\n      setLocations(locations)\n    }\n\n    const refreshLocations = async(id) => {\n      const q = query(collection(db, \"Locations\"), \n      where(\"CompanyID\", \"==\", id))\n      const locationsRef = await getDocs(q)\n      const locations = locationsRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }))\n      console.log('Refreshed Locations')\n      setLocations(locations)\n    }\n\n    const fetchServices = async() => {\n      const q = query(collection(db, \"Services\"),\n      where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const servicesRef = await getDocs(q)\n      const services = servicesRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }))\n      setServices(services)\n      console.log(\"Fetched Services\")\n    }\n\n    const refreshServices = async() => {\n      const q = query(collection(db, \"Services\"), \n      where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const servicesRef = await getDocs(q)\n      const services = servicesRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }))\n      setServices(services)\n      console.log(\"Refreshed Services\")\n    }\n\n    const fetchTickets = async() => {\n      const q = query(collection(db, \"Tickets\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const ticketsRef = await getDocs(q)\n      const tickets = ticketsRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setTickets(tickets)\n      console.log(\"Fetched Tickets\")\n    }\n\n    const refreshTickets = async() => {\n      const q = query(collection(db, \"Tickets\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const ticketsRef = await getDocs(q)\n      const tickets = ticketsRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setTickets(tickets)\n      console.log(\"Refreshed Tickets\")\n    }\n\n    const fetchOrders = async() => {\n      const q = query(collection(db, \"Orders\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const ordersRef = await getDocs(q)\n      const orders = ordersRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setOrders(orders)\n      console.log(\"Fetched Orders\")\n    }\n\n    const refreshOrders = async() => {\n      const q = query(collection(db, \"Orders\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const ordersRef = await getDocs(q)\n      const orders = ordersRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setOrders(orders)\n      console.log(\"Refreshed Orders\")\n    }\n\n    const fetchAccounts = async() => {\n      const q = query(collection(db, \"Accounts\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const accountsRef = await getDocs(q)\n      const accounts = accountsRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setAccounts(accounts)\n    }\n\n    const refreshAccounts = async() => {\n      const q = query(collection(db, \"Accounts\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const accountsRef = await getDocs(q)\n      const accounts = accountsRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setAccounts(accounts)\n    }\n\n    const fetchBills = async() => {\n      const q = query(collection(db, \"Bills\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const billsRef = await getDocs(q)\n      const bills = billsRef.docs.map(doc => ({\n        id: doc.id, \n        ...doc.data()\n      }))\n      setBills(bills)\n    }\n    \n    const refreshBills = async() => {\n      const q = query(collection(db, \"Bills\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const billsRef = await getDocs(q)\n      const bills = billsRef.docs.map(doc => ({\n        id: doc.id, \n        ...doc.data()\n      }))\n      setBills(bills)\n    }\n\n    const fetchEvents = async() => {\n      const q = query(collection(db, \"Events\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const eventsRef = await getDocs(q)\n      const events = eventsRef.docs.map(doc => ({\n        id: doc.id, \n        ...doc.data()\n      }))\n      setEvents(events)\n    }\n\n    const refreshEvents = async() => {\n      const q = query(collection(db, \"Events\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const eventsRef = await getDocs(q)\n      const events = eventsRef.docs.map(doc => ({\n        id: doc.id, \n        ...doc.data()\n      }))\n      setEvents(events)\n    }\n\n    const fetchUsers = async() => {\n      const q = query(collection(db, \"Users\"), where(\"Companies\", \"array-contains\", userSession.currentCompanyID))\n      const usersRef = await getDocs(q)\n      const users = usersRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setUsers(users)\n    }\n\n    const refreshUsers = async() => {\n      const q = query(collection(db, \"Users\"), where(\"Companies\", \"array-contains\", userSession.currentCompanyID))\n      const usersRef = await getDocs(q)\n      const users = usersRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setUsers(users)\n    }\n\n    const fetchNotes = async() => {\n      const q = query(collection(db, \"Notes\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const notesRef = await getDocs(q)\n      const notes = notesRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setNotes(notes)\n    }\n\n    const refreshNotes = async() => {\n      const q = query(collection(db, \"Notes\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const notesRef = await getDocs(q)\n        .where(\"CompanyID\", \"==\", userSession.currentCompanyID).get()\n      const notes = notesRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setNotes(notes)\n    }\n\n    const fetchContracts = async() => {\n      const q = query(collection(db, \"Contracts\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const contractsRef = await getDocs(q)\n      const contracts = contractsRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setContracts(contracts)\n    }\n\n    const refreshContracts = async() => {\n      const q = query(collection(db, \"Contracts\"), where(\"CompanyID\", \"==\", userSession.currentCompanyID))\n      const contractsRef = await getDocs(q)\n      const contracts = contractsRef.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()}))\n      setContracts(contracts)\n    }\n\n    const fetchPage = async(isModule, id) => {\n      \n      const docRef = doc(db, isModule, id)\n      const docSnap = await getDoc(docRef) \n      console.log(docSnap)\n      const docData = docSnap.data()\n      const docID = docSnap.id\n      setActive({id: docID, ...docData})\n      setData(docData)\n      \n    }\n\n    const handleSubmitNew = async(isModule, data) => {\n    \n      try {\n        await db.collection(isModule).doc().set(data) \n      } catch {\n        console.log(\"Error submitting new document\")\n      } \n\n    }\n    \n    /** Global Style Variables */\n    const isStyle = {\n      headerStyle: {\n        borderBottomStyle: \"solid\",\n        bottomBorderColor: \"black\"\n      }\n    }\n    \n    \n    const [userSession, dispatch] = useReducer(stateReducer, initialState)\n\n      const setUserFirstName = (name) => {\n        dispatch({\n          type: \"SET_USER_FNAME\",\n          payload: name\n        })\n      };  \n\n      const setUserType = (userType) => {\n        dispatch({\n          type: \"SET_USER_TYPE\",\n          payload: userType\n        })\n      };\n\n      const setCurrentUser = (user) => {\n        dispatch({\n          type: \"SET_CURRENT_USER\",\n          payload: user\n        })\n      };\n    \n      const setLoggedIn = (loginState) => {\n          dispatch({\n            type: \"LOGGED_IN\",\n            payload: loginState\n          })\n      };\n\n      const setCompanies = (companies) => {\n        dispatch({\n          type: \"SET_COMPANIES\",\n          payload: companies\n        })\n      };\n\n      const setLocations = (locations) => {\n        dispatch({\n          type: \"SET_LOCATIONS\",\n          payload: locations\n        })\n      };\n\n      const setServices = (services) => {\n        dispatch({\n          type: \"SET_SERVICES\",\n          payload: services\n        })\n      };\n\n      const setTickets = (tickets) => {\n        dispatch({\n          type: \"SET_TICKETS\",\n          payload: tickets\n        })\n      };\n\n      const setOrders = (orders) => {\n        dispatch({\n          type: \"SET_ORDERS\",\n          payload: orders\n        })\n      }\n\n      const setAccounts = (accounts) => {\n        dispatch({\n          type: \"SET_ACCOUNTS\",\n          payload: accounts\n        })\n      };\n\n      const setBills = (bills) => {\n        dispatch({\n          type: \"SET_BILLS\",\n          payload: bills\n        })\n      };\n\n      const setEvents = (events) => {\n        dispatch({\n          type: \"SET_EVENTS\",\n          payload: events\n        })\n      }\n\n      const setUsers = (users) => {\n        dispatch({\n          type: \"SET_USERS\",\n          payload: users\n        })\n      }\n\n      const setContracts = (contracts) => {\n        dispatch({\n          type: \"SET_CONTRACTS\",\n          payload: contracts\n        })\n      }\n\n      const setNotes = (notes) => {\n        dispatch({\n          type: \"SET_NOTES\",\n          payload: notes\n        })\n      }\n\n      const setCurrentCompanyID = (id) => {\n        dispatch({\n          type: \"SET_CURRENT_COMPANYID\",\n          payload: id\n        })\n      };\n\n      const setCurrentCompany = (name) => {\n        \n        dispatch({\n          type: \"SET_CURRENT_COMPANY\",\n          payload: name\n        })\n      };\n\n      const setCurrentLocationID = (id) => {\n        dispatch({\n          type: \"SET_CURRENT_LOCATIONID\",\n          payload: id\n        })\n      };\n\n      const setCurrentLocationName = (name) => {\n        dispatch({\n          type: \"SET_CURRENT_LOCATION_NAME\",\n          payload: name\n        })\n      };\n\n      const setCurrentServiceID = (id) => {\n        dispatch({\n          type: \"SET_CURRENT_SERVICEID\",\n          payload: id\n        })\n      };\n\n      const setCurrentServiceName = (name) => {\n        dispatch({\n          type: \"SET_CURRENT_SERVICE_NAME\",\n          payload: name\n        })\n      };\n\n      const setCurrentTicketID = (id) => {\n        dispatch({\n          type: \"SET_CURRENT_TICKETID\",\n          payload: id\n        })\n      };\n\n      const setCurrentTicketNum = (num) => {\n        dispatch({\n          type: \"SET_CURRENT_TICKET_NUM\",\n          payload: num\n        })\n      };\n\n      const setCurrentOrderID = (id) => {\n        dispatch({\n          type: \"SET_CURRENT_ORDERID\",\n          payload: id\n        })\n      };\n\n      const setCurrentOrderNum = (num) => {\n        dispatch({\n          type: \"SET_CURRENT_ORDER_NUM\",\n          payload: num\n        })\n      };\n\n      const setCurrentAccountID = (id) => {\n        dispatch({\n          type: \"SET_CURRENT_ACCOUNTID\",\n          payload: id\n        })\n      };\n\n      const setCurrentAccountNum = (num) => {\n        dispatch({\n          type: \"SET_CURRENT_ACCOUNT_NUM\",\n          payload: num\n        })\n      };\n\n      const setDataLoading = (id) => {\n        dispatch({\n          type: \"SET_DATA_LOADING\",\n          payload: id\n        })\n      };\n\n      const setCurrentGrid = (name) => {\n        dispatch({\n          type: \"SET_CURRENT_GRID\",\n          payload: name\n        })\n      };\n\n      const setCurrentModule = (name) => {\n        dispatch({\n          type: \"SET_CURRENT_MODULE\",\n          payload: name\n        })\n      };\n\n      const setCurrentDocID = (id) => {\n        dispatch({\n          type: \"SET_CURRENT_DOC_ID\",\n          payload: id\n        })\n      };\n\n      const setCurrentDate = () => {\n        const currentDate = new Date()\n        return currentDate.toISOString().substring(0, 10)\n      }\n\n      const setUserDefaults = (userDefaults) => {\n        dispatch({\n          type: \"SET_USER_DEFAULTS\",\n          payload: userDefaults\n        })\n      }\n\n    \n    return (\n      <Provider value={{ \n          isStyle,\n\n          setUserFirstName,\n          setUserType,\n          setCurrentUser,\n          setLoggedIn,\n          setCurrentDate,\n\n          setCompanies,\n          setLocations,\n          setServices,\n          setTickets,\n          setOrders,\n          setAccounts,\n          setBills,\n          setUsers,\n          setUserDefaults,\n          setContracts,\n          setNotes,\n\n          setCurrentCompanyID,\n          setCurrentCompany,\n          setCurrentLocationID,\n          setCurrentLocationName,\n          setCurrentServiceID,\n          setCurrentServiceName,\n          setCurrentTicketID,\n          setCurrentTicketNum,\n          setCurrentOrderID,\n          setCurrentOrderNum,\n          setCurrentAccountID,\n          setCurrentAccountNum,\n          setCurrentModule,\n          setCurrentDocID,\n          \n          fetchCompanies,\n          fetchLocations,\n          refreshLocations,\n          fetchServices,\n          refreshServices,\n          fetchTickets,\n          refreshTickets,\n          fetchOrders,\n          refreshOrders,\n          fetchAccounts,\n          refreshAccounts,\n          fetchBills,\n          refreshBills,\n          fetchEvents,\n          refreshEvents,\n          fetchUsers,\n          refreshUsers,\n          fetchContracts,\n          refreshContracts,\n          fetchNotes,\n          refreshNotes,\n          fetchPage,\n          handleSubmitNew,\n\n          \n          data,\n          setData,\n          active,\n          setActive,\n\n          setDataLoading,\n          setCurrentGrid,\n\n          userSession\n      }}>\n        {props.children}\n      </Provider>\n    )\n  \n}\n\n","const vendorList = [\n  {\n    Name: 'AT&T',\n    Value: 'AT&T'\n  },\n  {\n    Name: 'Verizon',\n    Value: 'Verizon'\n  },\n  {\n    Name: 'Lumen/CenturyLink',\n    Value: 'Lumen/CenturyLink'\n  },\n  {\n    Name: 'Lumos',\n    Value: 'Lumos'\n  },\n  {\n    Name: 'Windstream',\n    Value: 'Windstream'\n  },\n  {\n    Name: 'Lingo',\n    Value: 'Lingo'\n  },\n  {\n    Name: 'Comcast',\n    Value: 'Comcast'\n  },\n  {\n    Name: 'Spectrum',\n    Value: 'Spectrum'\n  },\n  {\n    Name: 'Microsoft',\n    Value: 'Microsoft'\n  },\n  {\n    Name: 'Masergy',\n    Value: 'Masergy'\n  },\n  {\n    Name: 'Nitel',\n    Value: 'Nitel'\n  },\n  {\n    Name: 'Segra',\n    Value: 'Segra'\n  },\n  {\n    Name: 'Level3',\n    Value: 'Level3'\n  },\n  {\n    Name: 'TalkDesk',\n    Value: 'TalkDesk' \n  },\n  {\n    Name: '8x8',\n    Value: '8x8'\n  },\n  {\n    Name: 'ACC',\n    Value: 'ACC'\n  },\n  {\n    Name: 'BCN',\n    Value: 'BCN'\n  },\n  {\n    Name: 'CallTower',\n    Value: 'CallTower'\n  },\n  {\n    Name: 'Cato',\n    Value: 'Cato'\n  },\n  {\n    Name: 'CBTS',\n    Value: 'CBTS'\n  },\n  {\n    Name: 'Colt',\n    Value: 'Colt'\n  },\n  {\n    Name: 'Cox',\n    Value: 'Cox'\n  },\n  {\n    Name: 'Crown Castle',\n    Value: 'Crown Castle'\n  },\n  {\n    Name: 'DialPad',\n    Value: 'Dialpad'\n  },\n  {\n    Name: 'Dobson Fiber',\n    Value: 'Dobson Fiber'\n  },\n  {\n    Name: 'Equinix',\n    Value: 'Equinix'\n  },\n  {\n    Name: 'Fiber Light',\n    Value: 'Fiber Light'\n  },\n  {\n    Name: 'Evolve IP',\n    Value: 'Evolve IP'\n  },\n  {\n    Name: 'Frontier',\n    Value: 'Frontier'\n  },\n  {\n    Name: 'RingCentral',\n    Value: 'RingCentral'\n  },\n  {\n    Name: 'Granite',\n    Value: 'Granite'\n  },\n  {\n    Name: 'Green Cloud',\n    Value: 'Green Cloud'\n  },\n  {\n    Name: 'Intelepeer',\n    Value: 'Intelepeer'\n  },\n  {\n    Name: 'MetTel',\n    Value: 'MetTel'\n  },\n  {\n    Name: 'Momentum',\n    Value: 'Momentum'\n  },\n  {\n    Name: 'Netwolves',\n    Value: 'Netwolves'\n  },\n  {\n    Name: 'Nextiva',\n    Value: 'Nextiva'\n  },\n  {\n    Name: 'Vonage Business',\n    Value: 'Vonage Business'\n  },\n  {\n    Name: 'Net2Phone',\n    Value: 'Net2Phone'\n  },\n  {\n    Name: 'Peerless Network',\n    Value: 'Peerless Network'\n  }\n]\nexport {vendorList}","const stateList = [\n  {\n    \"name\": \"Alabama\",\n    \"code\": \"AL\"\n  },\n  {\n    \"name\": \"Alaska\",\n    \"code\": \"AK\"\n  },\n  {\n    \"name\": \"Arizona\",\n    \"code\": \"AZ\"\n  },\n  {\n    \"name\": \"Arkansas\",\n    \"code\": \"AR\"\n  },\n  {\n    \"name\": \"California\",\n    \"code\": \"CA\"\n  },\n  {\n    \"name\": \"Colorado\",\n    \"code\": \"CO\"\n  },\n  {\n    \"name\": \"Connecticut\",\n    \"code\": \"CT\"\n  },\n  {\n    \"name\": \"Delaware\",\n    \"code\": \"DE\"\n  },\n  {\n    \"name\": \"Florida\",\n    \"code\": \"FL\"\n  },\n  {\n    \"name\": \"Georgia\",\n    \"code\": \"GA\"\n  },\n  {\n    \"name\": \"Hawaii\",\n    \"code\": \"HI\"\n  },\n  {\n    \"name\": \"Idaho\",\n    \"code\": \"ID\"\n  },\n  {\n    \"name\": \"Illinois\",\n    \"code\": \"IL\"\n  },\n  {\n    \"name\": \"Indiana\",\n    \"code\": \"IN\"\n  },\n  {\n    \"name\": \"Iowa\",\n    \"code\": \"IA\"\n  },\n  {\n    \"name\": \"Kansas\",\n    \"code\": \"KS\"\n  },\n  {\n    \"name\": \"Kentucky\",\n    \"code\": \"KY\"\n  },\n  {\n    \"name\": \"Louisiana\",\n    \"code\": \"LA\"\n  },\n  {\n    \"name\": \"Maine\",\n    \"code\": \"ME\"\n  },\n  {\n    \"name\": \"Maryland\",\n    \"code\": \"MD\"\n  },\n  {\n    \"name\": \"Massachusetts\",\n    \"code\": \"MA\"\n  },\n  {\n    \"name\": \"Michigan\",\n    \"code\": \"MI\"\n  },\n  {\n    \"name\": \"Minnesota\",\n    \"code\": \"MN\"\n  },\n  {\n    \"name\": \"Mississippi\",\n    \"code\": \"MS\"\n  },\n  {\n    \"name\": \"Missouri\",\n    \"code\": \"MO\"\n  },\n  {\n    \"name\": \"Montana\",\n    \"code\": \"MT\"\n  },\n  {\n    \"name\": \"Nebraska\",\n    \"code\": \"NE\"\n  },\n  {\n    \"name\": \"Nevada\",\n    \"code\": \"NV\"\n  },\n  {\n    \"name\": \"New Hampshire\",\n    \"code\": \"NH\"\n  },\n  {\n    \"name\": \"New Jersey\",\n    \"code\": \"NJ\"\n  },\n  {\n    \"name\": \"New Mexico\",\n    \"code\": \"NM\"\n  },\n  {\n    \"name\": \"New York\",\n    \"code\": \"NY\"\n  },\n  {\n    \"name\": \"North Carolina\",\n    \"code\": \"NC\"\n  },\n  {\n    \"name\": \"North Dakota\",\n    \"code\": \"ND\"\n  },\n  {\n    \"name\": \"Ohio\",\n    \"code\": \"OH\"\n  },\n  {\n    \"name\": \"Oklahoma\",\n    \"code\": \"OK\"\n  },\n  {\n    \"name\": \"Oregon\",\n    \"code\": \"OR\"\n  },\n  {\n    \"name\": \"Pennsylvania\",\n    \"code\": \"PA\"\n  },\n  {\n    \"name\": \"Rhode Island\",\n    \"code\": \"RI\"\n  },\n  {\n    \"name\": \"South Carolina\",\n    \"code\": \"SC\"\n  },\n  {\n    \"name\": \"South Dakota\",\n    \"code\": \"SD\"\n  },\n  {\n    \"name\": \"Tennessee\",\n    \"code\": \"TN\"\n  },\n  {\n    \"name\": \"Texas\",\n    \"code\": \"TX\"\n  },\n  {\n    \"name\": \"Utah\",\n    \"code\": \"UT\"\n  },\n  {\n    \"name\": \"Vermont\",\n    \"code\": \"VT\"\n  },\n  {\n    \"name\": \"Virginia\",\n    \"code\": \"VA\"\n  },\n  {\n    \"name\": \"Washington\",\n    \"code\": \"WA\"\n  },\n  {\n    \"name\": \"West Virginia\",\n    \"code\": \"WV\"\n  },\n  {\n    \"name\": \"Wisconsin\",\n    \"code\": \"WI\"\n  },\n  {\n    \"name\": \"Wyoming\",\n    \"code\": \"WY\"\n  }\n]\nexport {stateList}","const serviceType = [\n  { \n    Name: 'Internet', \n    Value: 'Internet' \n  },\n  { \n    Name: 'Internet with Voice', \n    Value: 'Internet with Voice' \n  },\n  { \n    Name: 'Switched Ethernet', \n    Value: 'Switched Ethernet' \n  },\n  {\n    Name: 'Dedicated Ethernet',\n    Value: 'Dedicated Ethernet'\n  },\n  {\n    Name: 'Dedicated Fiber',\n    Value: 'Dedicated Fiber'\n  },\n  {\n    Name: 'MPLS',\n    Value: 'MPLS'\n  },\n  {\n    Name: 'MPLS with Voice',\n    Value: 'MPLS with Voice'\n  },\n  {\n    Name: 'Voice',\n    Value: 'Voice'\n  },\n  {\n    Name: 'Legacy Voice',\n    Value: 'Legacy Voice'\n  },\n  {\n    Name: 'PRI',\n    Value: 'PRI'\n  },\n  {\n    Name: 'POTS',\n    Value: 'POTS'\n  },\n  { \n    Name: 'Cable/DSL', \n    Value: 'Cable/DSL' \n  },\n  {\n    Name: 'Mobility',\n    Value: 'Mobility'\n  },\n  {\n    Name: 'Cloud Services',\n    Value: 'Cloud Services'\n  },\n  {\n    Name: 'Managed Security',\n    Value: 'Managed Security'\n  },\n  {\n    Name: 'Colocation/Hosting',\n    Value: 'Colocation/Hosting'\n  } \n]\nexport {serviceType}","const accessType = [\n  { \n    Name: 'T1', \n    Value: 'T1' \n  },\n  { \n    Name: 'Ethernet', \n    Value: 'Ethernet' \n  },\n  { \n    Name: 'Fiber', \n    Value: 'Fiber' \n  },\n  { \n    Name: 'Cable/DSL', \n    Value: 'CableDSL' \n  },\n  {\n    Name: 'Mobile',\n    Value: 'Mobile'\n  },\n  {\n    Name: 'Cloud',\n    Value: 'Cloud'\n  } \n]\nexport {accessType}","import React, { useState, createContext, useContext } from 'react'\nimport { db, fire, store } from './firebase'\nimport { stateContext } from './stateContext'\nimport {vendorList} from './vendorList'\nimport {stateList} from './states'\nimport {serviceType} from './serviceType'\nimport {accessType} from './accessType'\n\nexport const fieldContext = createContext({})\n\nexport const FieldProvider = (props) => {\n    \n    const {Provider} = fieldContext\n    const userContext = useContext(stateContext)\n    const [core, setCore] = useState([])\n    const {\n      collection, \n      query, \n      where, \n      getDocs, \n      getDoc, \n      addDoc, \n      updateDoc, \n      doc,\n      ref,\n      setDoc,\n      deleteDoc,\n      uploadBytes,\n      getDownloadURL,\n      arrayUnion,\n      arrayRemove\n    } = fire\n\n    const {\n      locations,\n      orders,\n      accounts,\n      services,\n      notes,\n      tickets,\n      events\n    } = userContext.userSession\n\n    const fetchCore = async() => {\n      const q = query(collection(db, 'Core'))\n      const querySnapshot = await getDocs(q)\n      const data = querySnapshot.docs.map(doc => ({module: doc.id, ...doc.data()}))\n      setCore(data)\n    }\n\n/** Grid Fields */\n    const serviceGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\", \n        filterable: true,\n        visible: true\n      },\n      {\n        docField: 'VendorServiceName', \n        headerName: 'Product', \n        key: \"2\", \n        filterable: true,\n        visible: true\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true,\n        visible: true,\n        mobile: true\n      },\n      {\n        docField: 'AssetID', \n        headerName: 'Asset ID', \n        key: \"4\", \n        filterable: false,\n        visible: true,\n        mobile: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"5\", \n        filterable: true,\n        visible: false\n      },\n      {\n        docField: 'Status', \n        headerName: 'Status', \n        key: \"6\", \n        filterable: true,\n        visible: false\n      }\n    ]\n\n    const serviceGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'Type',\n        Value: 'Type'\n      },\n      {\n        Label: 'Location',\n        Value: 'LocationName'\n      },\n      {\n        Label: 'Status',\n        Value: 'Status'\n      },\n      {\n        Label: 'Account',\n        Value: 'AccountNum'\n      },\n      {\n        Label: 'Tags',\n        Value: 'Tags'\n      }\n    ]\n\n    const serviceMobileGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\", \n        filterable: true\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true,\n        mobile: true\n      },\n      {\n        docField: 'AssetID', \n        headerName: 'Asset ID', \n        key: \"4\", \n        filterable: false,\n        mobile: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"5\", \n        filterable: true\n      }\n      \n    ]\n\n    const locationGridColumns = [\n      {\n        docField: 'Name',\n        headerName: 'Location Name',\n        key: \"1\",\n        filterable: false\n      },\n      {\n        docField: 'Address1',\n        headerName: 'Address 1',\n        key: \"2\",\n        filterable: false\n      },\n      { \n        docField: 'City', \n        headerName: 'City', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'State', \n        headerName: 'State', \n        key: \"5\", \n        filterable: true \n      },\n      { \n        docField: 'Zip', \n        headerName: 'Zip', \n        key: \"6\", \n        filterable: true \n      }\n    ]\n\n    const locationMobileGridColumns = [\n      {\n        docField: 'Name',\n        headerName: 'Location Name',\n        key: \"1\",\n        filterable: false\n      },\n      { \n        docField: 'City', \n        headerName: 'City', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'State', \n        headerName: 'State', \n        key: \"5\", \n        filterable: true \n      }\n    ]\n\n    const locationGroupByFields = [\n      {\n        Label: 'City',\n        Value: 'City'\n      },\n      {\n        Label: 'State',\n        Value: 'State'\n      },\n      {\n        Label: 'Zip',\n        Value: 'Zip'\n      },\n    ]\n    \n    const ticketGridColumns = [\n      {\n        docField: 'TicketNum', \n        headerName: 'Ticket', \n        key: \"2\", \n        filterable: false\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"4\", \n        filterable: true\n      },\n      {\n        docField: 'Details', \n        headerName: 'Details', \n        key: \"5\", \n        filterable: false,\n        visible: false\n      },\n      {\n        docField: 'Status', \n        headerName: 'Status', \n        key: \"1\", \n        filterable: true\n      },\n    ]\n    \n    const ticketGroupByFields = [\n      {\n        Label: 'Type',\n        Value: 'Type'\n      },\n      {\n        Label: 'Location',\n        Value: 'LocationName'\n      },\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'Status',\n        Value: 'Status'\n      }\n    ]\n\n    const ticketMobileGridColumns = [\n      {\n        docField: 'Status', \n        headerName: 'Status', \n        key: \"1\", \n        filterable: true\n      },\n      {\n        docField: 'TicketNum', \n        headerName: 'Ticket', \n        key: \"2\", \n        filterable: false\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"4\", \n        filterable: true\n      },\n      {\n        docField: 'Details', \n        headerName: 'Details', \n        key: \"5\", \n        filterable: false\n      }\n    ]\n\n    const orderGridColumns = [\n      {\n        docField: 'OrderDate',\n        headerName: 'Date',\n        key: \"1\",\n        filterable: true\n      },\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"2\",\n        filterable: true\n      },\n      { \n        docField: 'VendorServiceName', \n        headerName: 'Product', \n        key: \"3\", \n        filterable: true \n      },\n      { \n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'OrderNum', \n        headerName: 'Order Number', \n        key: \"5\", \n        filterable: false \n      }\n    ]\n\n    const orderGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'Status',\n        Value: 'Status',\n      },\n      {\n        Label: 'Location',\n        Value: 'LocationName'\n      }\n    ]\n\n    const orderMobileGridColumns = [\n      {\n        docField: 'OrderDate',\n        headerName: 'Date',\n        key: \"1\",\n        filterable: true\n      },\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"2\",\n        filterable: true\n      },\n      { \n        docField: 'VendorServiceName', \n        headerName: 'Product', \n        key: \"3\", \n        filterable: true \n      },\n      { \n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'OrderNum', \n        headerName: 'Order Number', \n        key: \"5\", \n        filterable: false \n      }\n    ]\n\n    const accountGridColumns = [\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"1\",\n        filterable: true,\n        visible: true,\n        mobile: true\n      },\n      {\n        docField: 'AccountNum',\n        headerName: 'Account',\n        key: \"2\",\n        filterable: false,\n        visible: true,\n        mobile: false\n      },\n      {\n        docField: 'PostTaxMRC',\n        headerName: 'Cost',\n        key: \"5\",\n        filterable: false,\n        visible: true,\n        mobile: true,\n        type: \"currency\"\n      }\n    ]\n\n    const accountGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'All',\n        Value: \"\"\n      }\n    ]\n\n    const accountMobileGridColumns = [\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"1\",\n        filterable: true,\n        visible: true,\n        mobile: true\n      },\n      {\n        docField: 'AccountNum',\n        headerName: 'Account',\n        key: \"2\",\n        filterable: false,\n        visible: true,\n        mobile: false\n      },\n      {\n        docField: 'PostTaxMRC',\n        headerName: 'Cost',\n        key: \"5\",\n        filterable: false,\n        visible: true,\n        mobile: true,\n        type: \"currency\"\n      }\n    ]\n\n    const userGridColumns = [\n      {\n        docField: 'FirstName', \n        headerName: 'First Name', \n        key: \"3\"\n      },\n      {\n        docField: 'LastName', \n        headerName: 'Last Name', \n        key: \"2\"\n      },\n      {\n        docField: 'Email', \n        headerName: 'Email', \n        key: \"1\"\n      }\n    ]\n\n    const contractGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\"\n      },\n      {\n        docField: 'Date', \n        headerName: 'Date', \n        key: \"2\"\n      },\n      {\n        docField: 'Term', \n        headerName: 'Term', \n        key: \"3\"\n      },\n      {\n        docField: 'Details', \n        headerName: 'Details', \n        key: \"4\"\n      }\n    ]\n\n    const contractMobileGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\"\n      },\n      {\n        docField: 'Date', \n        headerName: 'Date', \n        key: \"2\"\n      }\n    ]\n\n    const contractGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'All',\n        Value: \"\"\n      }\n    ]\n    \n/** Page Fields */\n    const serviceDetailFields = [\n      {\n        label: \"Essentials\",\n        inputFieldType: \"tabTitle\"\n      },\n      { \n        label: \"Service Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: locations, \n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"select\",\n            inputSource: stateList,\n            inputName: 'Name',\n            inputValue: 'code',\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          },\n        ],\n        relatedDataType: \"Location\",\n        tab: \"Essentials\"  \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"Essentials\", \n      },\n      { \n        label: \"Type\", \n        dataField: \"Type\", \n        inputFieldType: \"select\", \n        inputSource: serviceType, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"Essentials\",\n      },\n      { \n        label: \"Service Name\", \n        dataField: \"VendorServiceName\", \n        inputFieldType: \"text\", \n        tab: \"Essentials\", \n      },\n      { \n        label: \"Access Type\", \n        dataField: \"AccessType\", \n        inputFieldType: \"select\", \n        inputSource: accessType, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"Essentials\", \n      },\n      { \n        label: \"Asset ID\", \n        dataField: \"AssetID\", \n        inputFieldType: \"text\", \n        tab: \"Essentials\",\n        isHeader: true\n      },\n      { \n        label: \"Bandwidth\", \n        dataField: \"Bandwidth\", \n        inputFieldType: \"text\", \n        tab: \"Essentials\",\n      },\n      { \n        label: \"Monthly Cost\", \n        dataField: \"MRC\", \n        inputFieldType: \"currency\", \n        tab: \"Essentials\", \n      },\n      { \n        label: \"Status\", \n        dataField: \"Status\", \n        inputFieldType: \"status\", \n        inputSource: [\n          { \n            Name: 'Active', \n            Value: 'Active' \n          },\n          { \n            Name: 'Disconnected', \n            Value: 'Disconnected' \n          },\n          { \n            Name: 'Pending Activation', \n            Value: 'Pending Activation' \n          },\n          { \n            Name: 'Pending Disconnect', \n            Value: 'Pending Disconnect' \n          }\n        ], \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"Essentials\",\n      },\n      {\n        label: 'Tags',\n        dataField: 'Tags',\n        inputFieldType: 'tags',\n        tab: 'Essentials',\n      },\n      {\n        label: 'Details',\n        inputFieldType: 'tabTitle'\n      },\n      {\n        label: 'Order Number',\n        dataField: 'OrderNum',\n        visible: true,\n        inputFieldType: 'related-select',\n        inputSource: orders,\n        inputID: \"id\",\n        inputValue: \"OrderNum\", \n        relatedCollection: \"Orders\", \n        relatedDataField: \"OrderID\",\n        relatedInputLabel: \"Order Number\",\n        relatedInputFields: [\n          {\n            label: 'Order',\n            dataField: 'OrderNum',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Order',\n        tab: 'Details',\n      },\n      { \n        label: \"Related Order ID\", \n        dataField: \"OrderID\", \n        visible: false, \n        inputSource: orders, \n        inputID: \"ID\", \n        inputValue: \"id\", \n        tab: \"Details\",\n      },\n      {\n        label: \"MCN\",\n        dataField: \"MCN\",\n        inputFieldType: \"text\",\n        tab: \"Details\",\n      },\n      { \n        label: \"Service Start Date\", \n        dataField: \"StartDate\", \n        visible: true, \n        inputFieldType: \"datepicker\", \n        tab: \"Details\",\n      },\n      { \n        label: 'Last Mile', \n        dataField: 'LastMile', \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"Details\",\n      },\n      { \n        label: \"LEC Circuit ID\", \n        dataField: \"LECCircuitID\", \n        inputFieldType: \"text\", \n        tab: \"Details\",\n      },\n      { \n        label: 'Demarc Information', \n        dataField: 'DemarcInfo', \n        visible: true, \n        inputFieldType: \"text-area\", \n        tab: \"Details\", \n      },\n      { \n        label: \"IP Assignments\", \n        dataField: \"IPAssignments\", \n        inputFieldType: \"array-map-list\",  \n        relatedInputFields: [\n          {\n            label: 'Type',\n            dataField: 'Type',\n            inputFieldType: 'select',\n            inputID: \"Name\", \n            inputValue: \"Value\", \n            inputSource: [\n              {\n                Name: 'Public IP',\n                Value: 'Public IP'\n              },\n              {\n                Name: 'WAN',\n                Value: 'WAN'\n              },\n              {\n                Name: 'LAN',\n                Value: 'LAN'\n              },\n              {\n                Name: 'CER',\n                Value: 'CER'\n              },\n              {\n                Name: 'PER',\n                Value: 'PER'\n              },\n              {\n                Name: 'Border Element',\n                Value: 'Border Element'\n              },\n              {\n                Name: 'Virtual',\n                Value: 'Virtual'\n              },\n              {\n                Name: 'Route',\n                Value: 'Route'\n              },\n              {\n                Name: 'Device',\n                Value: 'Device'\n              },\n            ]\n          },\n          {\n            label: 'Version',\n            dataField: 'Version',\n            inputFieldType: 'select',\n            inputID: \"Name\", \n            inputValue: \"Value\", \n            inputSource: [\n              {\n                Name: 'v4',\n                Value: 'v4'\n              },\n              {\n                Name: 'v6',\n                Value: 'v6'\n              }\n            ]\n          },\n          {\n            label: 'IP Address',\n            dataField: 'IPAddress',\n            inputFieldType: 'text',\n          },\n          {\n            label: 'Range',\n            dataField: 'Range',\n            inputFieldType: 'select',\n            inputID: \"Name\", \n            inputValue: \"Value\", \n            inputSource: [\n              {\n                Name: '/30',\n                Value: '/30'\n              },\n              {\n                Name: '/29',\n                Value: '/29'\n              },\n              {\n                Name: '/28',\n                Value: '/28'\n              },\n              {\n                Name: '/27',\n                Value: '/27'\n              },\n              {\n                Name: '/26',\n                Value: '/26'\n              },\n              {\n                Name: '/25',\n                Value: '/25'\n              },\n              {\n                Name: '/24',\n                Value: '/24'\n              },\n              {\n                Name: '/23',\n                Value: '/23'\n              },\n              {\n                Name: '/22',\n                Value: '/22'\n              },\n              {\n                Name: '/21',\n                Value: '/21'\n              },\n              {\n                Name: '/20',\n                Value: '/20'\n              },\n              {\n                Name: '/19',\n                Value: '/19'\n              },\n              {\n                Name: '/18',\n                Value: '/18'\n              },\n              {\n                Name: '/17',\n                Value: '/17'\n              },\n              {\n                Name: '/16',\n                Value: '/16'\n              }\n            ]\n          },\n          \n        ],\n        tab: \"Details\",\n        hasBreakBefore: true  \n      },\n      {\n        label: 'Support',\n        inputFieldType: 'tabTitle'\n      },\n      {\n        label: \"Related Tickets\",\n        dataField: \"Tickets\",\n        inputFieldType: \"map-list\",\n        inputSource: tickets,\n        inputID: \"id\",\n        inputValue: \"TicketNum\",\n        relatedCollection: \"Tickets\",\n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Ticket Number\",\n        relatedInputFields: [\n          {\n            label: \"Ticket\",\n            dataField: \"TicketNum\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Type\",\n            dataField: \"Type\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: \"Service\",\n                Value: \"Service\"\n              },\n              {\n                Name: \"Billing\",\n                Value: \"Billing\"\n              },\n              {\n                Name: \"Disconnect\",\n                Value: \"Disconnect\"\n              }\n            ],\n          },\n          {\n            label: \"Status\",\n            dataField: \"Status\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: 'Submitted',\n                Value: 'Submitted'\n              },\n              {\n                Name: 'In Process',\n                Value: 'In Process'\n              },\n              {\n                Name: 'Completed',\n                Value: 'Completed'\n              },\n              {\n                Name: 'Closed',\n                Value: 'Closed'\n              }\n            ]\n          }\n        ],\n        tab: \"Support\"\n      },\n      {\n        label: 'Billing',\n        inputFieldType: 'tabTitle'\n      },\n      { \n        label: \"Related Account\", \n        dataField: \"AccountNum\",\n        visible: true, \n        inputFieldType: \"related-select\", \n        inputSource: accounts, \n        inputID: \"id\", \n        inputValue: \"AccountNum\",\n        relatedCollection: \"Accounts\", \n        relatedDataField: \"AccountID\",\n        relatedInputLabel: \"Account Number\",\n        relatedInputFields: [\n          {\n            label: 'Account Number',\n            dataField: 'AccountNum',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Account',\n        tab: 'Billing',\n      },\n      { \n        label: \"Sub Account\", \n        dataField: \"SubAccountNum\", \n        inputFieldType: \"text\", \n        tab: \"Billing\", \n      },\n      { \n        label: \"Group Number\", \n        dataField: \"GroupNum\", \n        inputFieldType: \"text\", \n        tab: \"Billing\", \n      },\n      { \n        label: \"Last Bill Amount\", \n        dataField: \"LastBillAmount\", \n        inputFieldType: \"currency\", \n        tab: \"Billing\", \n      },\n      { \n        label: \"Bills\", \n        dataField: \"Bills\", \n        inputFieldType: \"map-list\", \n        relatedCollection: \"Bills\", \n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Bill\",\n        relatedInputFields: [\n          {\n            label: 'Date', \n            dataField: 'Date', \n            inputFieldType: 'datepicker'\n          }, \n          {\n            label: 'Base Cost', \n            dataField: 'Cost', \n            inputFieldType: 'currency'\n          }, \n          {\n            label: 'Total Cost',\n            dataField: 'TotalCost',\n            inputFieldType: 'currency'\n          },\n          {\n            label: 'Disputed', \n            dataField: 'DisputedCost', \n            inputFieldType: 'currency'\n          }\n        ], \n        tab: \"Billing\",\n      },\n      {\n        label: 'Notes',\n        inputFieldType: 'tabTitle'\n      },\n      { \n        label: \"Notes\", \n        dataField: \"Notes\", \n        inputFieldType: \"map-list\", \n        relatedCollection: \"Notes\", \n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Note\",\n        relatedInputFields: [\n          {\n            label: 'Date', \n            dataField: 'Date',  \n            inputFieldType: 'datepicker'\n          }, \n          {\n            label: 'Note', \n            dataField: 'NoteBody', \n            inputFieldType: 'text-area'\n          }, \n        ], \n        tab: \"Notes\", \n      },\n      \n    ]\n    const ticketDetailFields = [\n    \n      { \n        label: \"Ticket Number\", \n        dataField: \"TicketNum\", \n        inputFieldType: \"text\", \n        tab: \"Essentials\",\n        isHeader: true \n      },\n      { \n        label: \"Service Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: locations, /** SET BY HANDLEINITIALFIELDMAPPING FN */\n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          },\n        ],\n        relatedDataType: \"Location\",\n        tab: \"Essentials\",\n      },\n      { \n        label: \"Service Location ID\", \n        dataField: \"LocationID\", \n        visible: false, \n        inputSource: locations, \n        inputID: \"ID\", \n        inputValue: \"id\", \n        tab: \"Essentials\" \n      },\n      { \n        label: \"Related Account\", \n        dataField: \"AccountNum\",\n        visible: true, \n        inputFieldType: \"related-select\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"AccountNum\",\n        relatedCollection: \"Accounts\", \n        relatedDataField: \"AccountID\",\n        relatedInputLabel: \"Account Number\",\n        relatedInputFields: [\n          {\n            label: 'Account Number',\n            dataField: 'AccountNum',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Account',\n        tab: 'Essentials',\n      },\n      { \n        label: \"Related Account ID\", \n        dataField: \"AccountID\", \n        visible: false, \n        inputSource: accounts, \n        inputID: \"ID\", \n        inputValue: \"id\", \n        tab: \"Essentials\" \n      },\n\n      { \n        label: \"Related Service\", \n        dataField: \"ServiceAssetID\", \n        inputFieldType: \"related-select\", \n        inputSource: services, \n        inputID: \"id\", \n        inputValue: \"AssetID\", \n        relatedCollection: \"Services\",\n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Related Asset\",\n        relatedInputFields: [\n          {\n            label: 'Asset ID',\n            dataField: 'AssetID',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Service',\n        tab: \"Essentials\",  \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"Essentials\"\n      },\n      { \n        label: \"Date Submitted\", \n        dataField: \"DateSubmitted\", \n        inputFieldType: \"datepicker\", \n        tab: \"Essentials\"\n      },\n      { \n        label: \"Type\", \n        dataField: \"Type\", \n        inputFieldType: \"select\",\n        inputID: 'Name',\n        inputValue: 'Value', \n        inputSource: [\n          { \n            Name: \"Service\",\n            Value: \"Service\" \n          },\n          { \n            Name: \"Billing\",\n            Value: \"Billing\" \n          },\n          { \n            Name: \"Disconnect\",\n            Value: \"Disconnect\" \n          }\n        ], \n        tab: \"Essentials\",\n      },\n      { \n        label: \"Status\", \n        dataField: \"Status\", \n        inputFieldType: \"select\",\n        inputID: 'Name', \n        inputValue: 'Value', \n        inputSource: [\n          { \n            Name: \"Submitted\",\n            Value: \"Submitted\" \n          },\n          { \n            Name: \"In Process\",\n            Value: \"In Process\" \n          },\n          { \n            Name: \"Completed\",\n            Value: \"Completed\" \n          },\n          { \n            Name: \"Closed\",\n            Value: \"Closed\" \n          }\n        ],  \n        tab: \"Essentials\",\n\n      },\n      { \n        label: \"Details\", \n        dataField: \"Details\", \n        inputFieldType: \"text-area\", \n        tab: \"Essentials\" \n      },\n      { \n        label: \"Notes\", \n        dataField: \"NoteID\", \n        inputFieldType: \"map-list\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"TicketID\", \n        relatedCollection: \"Notes\",\n        relatedDataField: \"NoteID\",\n        relatedInputLabel: \"Notes\",\n        relatedInputFields: [\n          {\n            label: 'Date',\n            dataField: 'Date',\n            inputFieldType: 'datepicker'\n          },\n          {\n            label: 'Note',\n            dataField: 'Note',\n            inputFieldType: 'textarea'\n          }\n        ], \n        relatedDataType: 'Note',\n        tab: \"Notes\",  \n      },\n      \n    ]\n    const accountDetailFields = [\n    \n      { \n        label: \"Account Number\", \n        dataField: \"AccountNum\", \n        inputFieldType: \"text\",\n        isHeader: true, \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\",\n        inputSource: vendorList,  \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\"\n      },\n      { \n        label: \"Date Billing Started\", \n        dataField: \"BillingStartDate\", \n        inputFieldType: \"datepicker\", \n        tab: \"DETAILS\"\n      },\n      { \n        label: \"Type\", \n        dataField: \"Type\", \n        inputFieldType: \"text\", \n        tab: \"DETAILS\" \n      },\n      { \n        label: \"Related Services\", \n        dataField: \"Services\", \n        inputFieldType: \"map-list\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"AssetID\", \n        relatedCollection: \"Services\",\n        relatedDataField: \"AccountID\",\n        relatedInputLabel: \"Related Asset\",\n        relatedInputFields: [\n          {\n            label: 'Asset ID',\n            dataField: 'AssetID',\n            inputFieldType: 'text'\n          },\n          {\n            label: 'Service Location',\n            dataField: 'LocationName',\n            inputFieldType: 'text'\n          },\n          {\n            label: 'Group',\n            dataField: 'GroupNum',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Service',\n        tab: \"BASIC INFO\",  \n        tabLabel: 'BASIC INFO',\n        hasBreakBefore: true\n      },\n      { \n        label: \"Bills\", \n        dataField: \"Bills\", \n        inputFieldType: \"map-list\", \n        relatedCollection: \"Bills\", \n        relatedDataField: \"AccountID\",\n        relatedInputFields: [\n          {\n            label: 'Date', \n            dataField: 'Date', \n            inputFieldType: 'datepicker'\n          }, \n          {\n            label: 'Sub Account', \n            dataField: 'SubAccountNum', \n            inputFieldType: 'text'\n          },\n          {\n            label: 'Asset ID', \n            dataField: 'AssetID', \n            inputFieldType: 'text'\n          },\n          {\n            label: 'Cost', \n            dataField: 'Cost', \n            inputFieldType: 'currency'\n          },                     \n        ], \n        tab: \"BILLING\",\n        tabLabel: \"BILLING\",\n      },\n      \n    ]\n    const orderDetailFields = [\n      {\n        label: 'Essentials',\n        inputFieldType: 'tabTitle'\n      },\n      { \n        label: \"Service Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: locations, /** SET BY HANDLEINITIALFIELDMAPPING FN */\n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          }\n        ],\n        relatedDataType: \"Location\",\n        tab: \"Essentials\"  \n      },\n      { \n        label: \"Order Number\", \n        dataField: \"OrderNum\", \n        inputFieldType: \"text\",\n        isHeader: true, \n        tab: \"Essentials\", \n      },\n      { \n        label: \"Date Ordered\", \n        dataField: \"OrderDate\", \n        inputFieldType: \"datepicker\", \n        tab: \"Essentials\", \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"Essentials\" \n      },\n      { \n        label: \"Service Name\", \n        dataField: \"VendorServiceName\", \n        inputFieldType: \"text\", \n        tab: \"Essentials\", \n      },\n      {\n        label: \"Order Type\",\n        dataField: \"Type\",\n        visible: false,\n        inputField: \"select\",\n        inputID: \"Name\",\n        inputValue: \"Value\",\n        inputSource: [\n          {\n            Name: 'New',\n            Value: 'New'\n          },\n          {\n            Name: 'Change',\n            Value: 'Change'\n          },\n          {\n            Name: 'Disconnect',\n            Value: 'Disconnect'\n          }\n        ],\n        tab: \"Essentials\"\n      },\n      { \n        label: \"Monthly Cost\", \n        dataField: \"MRC\", \n        inputFieldType: \"currency\", \n        tab: \"Essentials\" \n      },\n      { \n        label: \"Status\", \n        dataField: \"Status\", \n        inputFieldType: \"select\", \n        inputID: \"id\", \n        inputValue: \"Name\", \n        inputSource: [\n          {\n            Name: \"Ordered\",\n            Value: \"Ordered\"\n          },\n          {\n            Name: \"Completed\",\n            Value: \"Completed\"\n          },\n          {\n            Name: \"Cancelled\",\n            Value: \"Cancelled\"\n          }\n        ], \n        tab: \"Essentials\" \n      },\n      { \n        label: \"Bandwidth\", \n        dataField: \"Bandwidth\", \n        inputFieldType: \"text\", \n        tab: \"Details\" \n      },\n      { \n        label: \"Related Service\", \n        dataField: \"AssetID\", \n        inputFieldType: \"related-select\", \n        inputSource: services, \n        inputID: \"id\", \n        inputValue: \"AssetID\", \n        relatedCollection: \"Services\",\n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Related Asset\",\n        relatedInputFields: [\n          {\n            label: 'Asset ID',\n            dataField: 'AssetID',\n            inputFieldType: 'text'\n          }, \n          {\n            label: 'Location',\n            dataField: 'LocationName',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Service',\n        tab: \"Details\",  \n      },\n      { \n        label: \"Details\", \n        dataField: \"Details\", \n        inputFieldType: \"text-area\", \n        tab: \"Details\" \n      },\n      {\n        label: \"Events\",\n        dataField: \"Events\",\n        inputFieldType: \"map-list\",\n        inputSource: events,\n        inputID: \"id\",\n        inputValue: \"EventName\",\n        relatedCollection: \"Events\",\n        relatedDataField: \"OrderID\",\n        relatedInputLabel: \"Event\",\n        relatedInputFields: [\n          {\n            label: \"Event\",\n            dataField: \"EventName\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Type\",\n            dataField: \"Type\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: \"TTU\",\n                Value: \"TTU\"\n              },\n              {\n                Name: \"LAN Migration\",\n                Value: \"LAN Migration\"\n              },\n              {\n                Name: \"MACD Completion\",\n                Value: \"MACD Completion\"\n              },\n              {\n                Name: \"Activation\",\n                Value: \"Activation\"\n              },\n              {\n                Name: \"Billing Start\",\n                Value: \"Billing Start\"\n              }\n            ],\n          },\n          {\n            label: \"Date\",\n            dataField: \"Date\",\n            inputFieldType: \"datepicker\",\n          }\n        ],\n        tab: \"Details\"\n      },\n      {\n        label: \"Related Tickets\",\n        dataField: \"Tickets\",\n        inputFieldType: \"map-list\",\n        inputSource: tickets,\n        inputID: \"id\",\n        inputValue: \"TicketNum\",\n        relatedCollection: \"Tickets\",\n        relatedDataField: \"TicketID\",\n        relatedInputLabel: \"Ticket Number\",\n        relatedInputFields: [\n          {\n            label: \"Ticket\",\n            dataField: \"TicketNum\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Type\",\n            dataField: \"Type\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: \"Service\",\n                Value: \"Service\"\n              },\n              {\n                Name: \"Billing\",\n                Value: \"Billing\"\n              },\n              {\n                Name: \"Disconnect\",\n                Value: \"Disconnect\"\n              }\n            ],\n          },\n          {\n            label: \"Status\",\n            dataField: \"Status\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: 'Submitted',\n                Value: 'Submitted'\n              },\n              {\n                Name: 'In Process',\n                Value: 'In Process'\n              },\n              {\n                Name: 'Completed',\n                Value: 'Completed'\n              },\n              {\n                Name: 'Closed',\n                Value: 'Closed'\n              }\n            ]\n          }\n        ],\n        tab: \"Support\"\n      },\n      { \n        label: \"Notes\", \n        dataField: \"Notes\", \n        inputFieldType: \"map-list\", \n        relatedCollection: \"Notes\", \n        relatedDataField: \"OrderID\",\n        relatedInputLabel: \"Note\",\n        relatedInputFields: [\n          {\n            label: 'Date', \n            dataField: 'Date',  \n            inputFieldType: 'datepicker'\n          }, \n          {\n            label: 'Note', \n            dataField: 'NoteBody', \n            inputFieldType: 'text-area'\n          }, \n        ], \n        tab: \"Notes\", \n      },\n      {\n        label: \"Revenue\",\n        dataField: \"Revenue\",\n        inputFieldType: \"array-map-list\",\n        relatedInputFields: [\n          {\n            label: \"Cycle\",\n            dataField: \"CycleMonth\",\n            inputFieldType: \"datepicker\"\n          },\n          {\n            label: \"Order #\",\n            dataField: \"OrderNum\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Type\",\n            dataField: \"Type\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: \"IN\",\n                Value: \"IN\"\n              },\n              {\n                Name: \"OUT\",\n                Value: \"OUT\"\n              }\n            ],\n          },\n          {\n            label: \"MRC\",\n            dataField: \"MRC\",\n            inputFieldType: \"currency\",\n          },\n          {\n            label: \"Revenue\",\n            dataField: \"RevenueAmount\",\n            inputFieldType: \"currency\",\n          }\n        ],\n        tab: \"Revenue\",\n        permission: \"Admin\"\n      },\n    ]\n    const billsDetailFields = [\n      { \n        label: \"Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: \"\", /** SET BY HANDLEINITIALFIELDMAPPING FN */\n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          }\n        ],\n        relatedDataType: \"Location\",\n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\"  \n      },\n      { \n        label: \"Account Number\", \n        dataField: \"AccountNum\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Account ID\", \n        dataField: \"AccountID\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\" \n      },\n      {\n        label: \"Asset ID\",\n        dataField: \"AssetID\",\n        inputField: \"text\",\n        tab: \"BASIC INFO\"\n      },\n      { \n        label: \"Amount Billed\", \n        dataField: \"Cost\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Total Billed\", \n        dataField: \"TotalCost\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Disputed Amount\", \n        dataField: \"DisputedCost\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Company Name\", \n        visible: false,\n        dataField: \"CompanyName\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Company ID\", \n        visible: false,\n        dataField: \"CompanyID\", \n        inputFieldType: \"text\",  \n        tab: \"BASIC INFO\" \n      },\n  \n    ]\n    const locationDetailFields = [\n      {\n        label: 'Location Name',\n        dataField: 'Name',\n        inputFieldType: 'text',\n        tab: 'Essentials',\n        isHeader: true\n      },\n      {\n        label: 'Address',\n        dataField: 'SearchAddress',\n        inputFieldType: 'ac-places'\n      },\n      {\n        label: 'Address 1',\n        dataField: 'Address1',\n        inputFieldType: 'text',\n        tab: 'Essentials',\n      },\n      {\n        label: 'Address 2',\n        dataField: 'Address2',\n        inputFieldType: 'text',\n        tab: 'Essentials'\n      },\n      {\n        label: 'City',\n        dataField: 'City',\n        inputFieldType: 'text',\n        tab: 'Essentials'\n      },\n      {\n        label: 'State',\n        dataField: 'State',\n        inputFieldType: 'select',\n        inputSource: stateList,\n        inputValue: \"code\",\n        tab: 'Essentials'\n      },\n      {\n        label: \"Province/Region\",\n        dataField: \"Region\",\n        inputFieldType: \"text\",\n        tab: 'Essentials'\n      },\n      {\n        label: \"Zip\",\n        dataField: \"Zip\",\n        inputFieldType: \"text\",\n        tab: 'Essentials'\n      },\n      {\n        label: \"Country\",\n        dataField: \"Country\",\n        inputFieldType: \"text\",\n        tab: \"Essentials\"\n      },\n      {\n        label: 'Full Address',\n        dataField: 'FullAddress',\n        inputFieldType: 'concat',\n        visible: false,\n        tab: 'Essentials'\n      },\n      {\n        label: 'Related Services',\n        dataField: 'RelatedLocationID',\n        inputFieldType: 'related-array-map',\n        inputSource: services,\n        relatedCollection: 'Services',\n        helperCollection: 'RELATED_KEY',\n        columns: [\n          {\n            label: 'Vendor',\n            dataField: 'Vendor',\n          },\n          {\n            label: 'Asset',\n            dataField: 'AssetID'\n          },\n        ],\n        tab: 'Services'\n      }\n    ]\n    const notesDetailFields = [\n      {\n        label: 'Date',\n        dataField: 'Date',\n        inputFieldType: 'datepicker',\n        tab: 'NOTES',\n        tabLabel: 'NOTES'\n      },\n      {\n        label: 'Note',\n        dataField: 'NoteBody',\n        inputFieldType: 'text-area',\n        tab: 'NOTES',\n        tablLabel: 'NOTES'\n      },\n      {\n        label: 'Related',\n        dataField: 'Related',\n        inputFieldType: 'text'\n      }\n    ]\n    const eventsDetailFields = [\n      {\n        label: 'Date',\n        dataField: 'Date',\n        inputFieldType: 'datepicker',\n        tab: 'EVENTS',\n        tabLabel: 'EVENTS'\n      },\n      {\n        label: 'Title',\n        dataField: 'Title',\n        inputFieldType: 'text',\n        tab: 'EVENTS',\n        tablLabel: 'EVENTS'\n      },\n      {\n        label: 'Details',\n        dataField: 'Details',\n        inputFieldType: 'text-area',\n        tab: 'EVENTS',\n        tabLabel: 'EVENTS'\n      },\n      {\n        label: 'Related',\n        dataField: 'Related',\n        inputFieldType: 'text',\n        tab: 'EVENTS',\n        tabLabel: 'EVENTS'\n      }\n    ]\n    const contractDetailFields = [\n      {\n        label: 'Contract Name',\n        dataField: 'Name',\n        inputFieldType: 'text',\n        tab: 'Essentials',\n        isHeader: true\n      },\n      {\n        label: 'Vendor',\n        dataField: 'Vendor',\n        inputFieldType: 'select',\n        inputSource: vendorList,\n        inputID: \"Name\", \n        inputValue: \"Value\",\n        tab: 'Essentials',\n      },\n      {\n        label: 'Date Signed',\n        dataField: 'Date',\n        inputFieldType: 'datepicker',\n        tab: 'Essentials',\n      },\n      {\n        label: 'Term',\n        dataField: 'Term',\n        inputFieldType: 'select',\n        inputSource: [\n          {\n            Name: 'Month to Month',\n            Value: 'Month to Month'\n          },\n          {\n            Name: '12',\n            Value: '12'\n          },\n          {\n            Name: '24',\n            Value: '24'\n          },\n          {\n            Name: '36',\n            Value: '36'\n          },\n          {\n            Name: '48',\n            Value: '48'\n          },\n          {\n            Name: '60',\n            Value: '60'\n          }\n        ],\n        inputID: \"Name\", \n        inputValue: \"Value\",\n        tab: 'Essentials',\n      },\n      {\n        label: 'File',\n        dataField: 'FileURL',\n        inputFieldType: 'file-field',\n        tab: 'Essentials',\n      }\n    ]\n  const userDetailFields = [\n    {\n      label: 'Email Address',\n      dataField: 'Email',\n      inputFieldType: 'text',\n      tab: \"Essentials\",\n    },\n    {\n      label: 'First Name',\n      dataField: 'FirstName',\n      inputFieldType: 'text',\n      tab: \"Essentials\",\n    },\n    {\n      label: 'Last Name',\n      dataField: 'LastName',\n      inputFieldType: 'text',\n      tab: \"Essentials\",\n    },\n    {\n      label: 'Type',\n      dataField: \"Type\",\n      inputFieldType: 'select',\n      inputSource: [\n        {\n          Name: 'User',\n          Value: 'User'\n        },\n        {\n          Name: 'Agent',\n          Value: 'Agent'\n        }\n      ],\n      inputID: \"Name\",\n      inputValue: \"Value\",\n      tab: \"Essentials\",\n    },\n  ]\n  const userProfileFields = [\n    {\n      label: 'Email Address',\n      dataField: 'Email',\n      inputFieldType: 'text',\n      tab: 'Essentials'\n    },\n    {\n      label: 'Change Password',\n      dataField: 'Password',\n      inputFieldType: 'button',\n      tab: 'Essentials'\n    },\n    {\n      label: 'Recent Changes',\n      dataField: '',\n      inputFieldType: 'recent-changes-list',\n      tab: 'Essentials'\n    },\n    {\n      label: 'Tags',\n      dataField: 'Tags',\n      inputFieldType: 'array-map-list',\n      relatedInputFields: [\n        {\n          label: 'Tag',\n          dataField: 'Tag',\n          inputFieldType: 'text'\n        }\n      ],\n      tab: 'Essentials'\n    }\n  ]\n  const contactDetailFields = [\n    {\n      label: 'First Name',\n      dataField: 'FirstName',\n      inputFieldType: 'text',\n      tab: 'Essentials',\n    },\n    {\n      label: 'Last Name',\n      dataField: 'LastName',\n      inputFieldType: 'text',\n      tab: 'Essentials',\n    },\n    {\n      label: 'Company Name',\n      dataField: 'CompanyName',\n      inputFieldType: 'text',\n      tab: 'Essentials',\n    },\n    {\n      label: 'Title/Position',\n      dataField: 'Title',\n      inputFieldType: 'text',\n      tab: 'Essentials',\n    },\n    {\n      label: 'Phone',\n      dataField: 'Phone',\n      inputFieldType: 'text',\n      tab: 'Essentials',\n    },\n    {\n      label: 'Email',\n      dataField: 'Email',\n      inputFieldType: 'text',\n      tab: 'Essentials',\n    },\n  ]\n\n  \n  const eventDetailFields = [\n    {\n      label: 'Event',\n      dataField: 'EventName',\n      inputFieldType: 'text',\n      tab: 'Essentials',\n    },\n    {\n      label: 'Date',\n      dataField: 'Date',\n      inputFieldType: 'datepicker',\n      tab: 'Essentials',\n    },\n    {\n      label: \"Type\",\n      dataField: \"Type\",\n      inputFieldType: \"select\",\n      inputID: 'Name',\n      inputValue: 'Value',\n      inputSource: [\n        {\n          Name: \"TTU\",\n          Value: \"TTU\"\n        },\n        {\n          Name: \"LAN Migration\",\n          Value: \"LAN Migration\"\n        },\n        {\n          Name: \"MACD Completion\",\n          Value: \"MACD Completion\"\n        },\n        {\n          Name: \"Activation\",\n          Value: \"Activation\"\n        },\n        {\n          Name: \"Billing Start\",\n          Value: \"Billing Start\"\n        }\n      ],\n      tab: \"Essentials\"\n    },\n    \n  ]\n\n\n\n\n\nreturn (\n    <Provider value={{ \n      serviceGridColumns, \n      serviceMobileGridColumns,\n      serviceGroupByFields,\n      locationGridColumns,\n      locationMobileGridColumns,\n      locationGroupByFields,\n      locationDetailFields,\n      ticketGridColumns, \n      ticketGroupByFields,\n      ticketMobileGridColumns,\n      orderGridColumns, \n      orderGroupByFields,\n      orderMobileGridColumns,\n      accountGridColumns, \n      accountGroupByFields,\n      accountMobileGridColumns,\n      userGridColumns,\n      userDetailFields, \n      userProfileFields,\n      contractGridColumns,\n      contractMobileGridColumns,\n      contractDetailFields,\n      contractGroupByFields,\n      serviceDetailFields,\n      ticketDetailFields,\n      accountDetailFields,\n      orderDetailFields,\n      billsDetailFields,\n      contactDetailFields,\n      eventDetailFields,\n      fetchCore,\n      core,\n      setCore}}>\n      {props.children}\n    </Provider>\n  )\n}\n","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\nimport {stateContext} from './stateContext';\nimport { auth } from './firebase';\n\nconst AuthContext = createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({children}) {\n\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  const userContext = useContext(stateContext)\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password)\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password)\n  }\n\n  const unsubscribe = async() => {\n    onAuthStateChanged(auth, user => {\n       \n      setCurrentUser(user)\n      userContext.setCurrentUser(user && user.email)\n      setLoading(false)\n    })\n  }\n\n  useEffect(() => {\n    unsubscribe()\n    \n  },[])\n\n  const logOutUser = () => {\n    setCurrentUser()\n  }\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logOutUser\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n    {children}\n    </AuthContext.Provider>\n  )\n}","import React, {useContext, useRef, useState} from 'react'\nimport {Link, useNavigate} from 'react-router-dom'\n\nimport {useAuth} from '../Contexts/AuthContext'\n\nconst Register = (props) => {\n  \n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const confirmPasswordRef = useRef()\n\n  const {signup} = useAuth()\n  const navigate = useNavigate()\n  const [signupError, setSignupError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [modalState, setModalState] = useState(true)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== confirmPasswordRef.current.value) {\n      return setSignupError('Passwords do not match')\n    }\n    try {\n      setSignupError('')\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n    } catch {\n      setSignupError('Failed to create an account')\n    }\n    setLoading(false)\n    navigate('/login')\n    handleModalClose()\n  }\n\n  const handleModalClose = () => {\n    setModalState(false)\n  }\n\n  return (\n    \n    <div className={modalState === true ? \"modal is-active\" : \"modal\"}>\n    <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <div className=\"modal-card-head\">Register</div>\n        <div className=\"modal-card-body\">\n          <form>\n            <label>Email</label>\n            <input className=\"input\" type=\"email\" ref={emailRef} />\n            <label>Password</label>\n            <input className=\"input\" type=\"password\" ref={passwordRef}/>\n            <label>Confirm Password</label>\n            <input className=\"input\" type=\"password\" ref={confirmPasswordRef} />\n          </form>\n        <div className=\"block\">\n          <div className=\"notification is-danger is-hidden\">{signupError}</div>\n        </div>\n        <div className=\"modal-card-foot\">\n          \n          <button className={loading !== true ? \"button is-rounded is-link is-link level-item\" : \"button is-loading\"} \n          type=\"submit\" disabled={loading} onClick={handleSubmit}\n          >\n            Register\n          </button>\n          \n          <button className=\"button is-rounded\" onClick={()=>navigate('/login')}>Login</button>\n        </div>\n        <button className=\"modal-close is-large\" aria-label=\"close\" onClick={handleModalClose}></button>  \n        </div>\n      </div>\n    </div>\n    \n  )\n}\n\nexport default Register","import React, { useState } from 'react'\nimport Register from './Register'\n\nconst Hello = () => {\n  \n  const [modalState, setModalState] = useState(false)\n  const handleModalState = () => {\n    setModalState(!modalState)\n  }\n  \n  return (\n    <div className=\"hero is-medium\">\n      <div className=\"hero-body\">\n        {modalState === true ? <Register modalState={modalState} /> : \"\"}\n        <div className=\"title has-text-weight-bold\"> Telecom is hard... </div>\n        <div className=\"subtitle has-text-weight-light\">\n          Managing it shouldn't be!\n      </div>\n        <div className=\"notification is-light is-parent is-hidden\">\n          <div className=\"content is-medium\">\n            <span className=\"has-text-weight-semibold is-uppercase has-text-black\">Think of this as your telecom passport</span>\n            <div className=\"content is-small has-text-black\">\n              <a>Join our quest</a> to bring a single source of truth to Telecom Asset, Billing and Service management where leveraging existing service and billing data will drive more informed purchasing decisions and roadmap adoption.\n      </div>\n          </div>\n        </div>\n      </div>\n    </div>\n          \n  )\n}\nexport default Hello","import React from 'react'\nimport { FaAngleUp, FaAngleDown } from 'react-icons/fa'\n\nexport const Dropdown = ({isActive, params, children}) => {\n    return (\n        <div className={isActive && isActive === true ? `dropdown is-active ${params}` : `dropdown`}>\n            {children}\n        </div>\n    )\n}\n\nexport const DropdownTrigger = ({children}) => {\n    return (\n        <div className='dropdown-trigger'>{children}</div>\n    )\n}\n\nexport const DropdownButton = ({params, label, toggle, onClick, isActive}) => {\n    return (\n        <button \n            className={`button ${params}`} \n            aria-haspopup=\"true\" \n            aria-controls=\"dropdown-menu\"\n            onClick={onClick}\n            onBlur={onClick}\n        >\n        <span className='icon-text'>\n            <span className='has-text-weight-semibold'>{label}</span>\n            <span className='icon'>\n                <FaAngleDown />\n            </span>\n            </span>\n        </button>\n    )\n}\n\nexport const DropdownMenu = ({children}) => {\n    return (\n        <div className='dropdown-menu' id='dropdown-menu' role='menu'>\n            <div className='dropdown-content'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport const DropdownContent = ({children}) => {\n    return (\n        <div className='dropdown-content'>\n            {children}\n        </div>\n    )\n}\n\nexport const DropdownItem = ({children}) => {\n    return (\n        {children}\n    )\n}","import React from 'react'\n\nexport const Form = ({children}) => {\n    return (\n        <form>{children}</form>\n    )\n}\n\nexport const Field = ({params, children}) => {\n    return (\n        <div className={`field ${params}`}>\n            {children}\n        </div>\n    )\n}\n\nexport const FieldBody = ({children}) => {\n    return (\n        <div className=\"field-body\">\n            {children}\n        </div>\n    )\n}\n\nexport const FieldLabel = ({params, label}) => {\n    return (\n        <div className={`field-label ${params}`}>\n            <label className='label'>\n                {label}\n            </label>\n        </div>\n    )\n}\n\nexport const FieldSet = ({params, children}) => {\n    return (\n        <fieldset>{children}</fieldset>\n    )\n}\n\nexport const FieldSetLegend = ({label}) => {\n    return (\n        <legend>\n            {label}\n        </legend>\n    )\n}\n\nexport const FieldHelp = ({isActive, params, field, help}) => {\n    <p className={`help ${params}`}>\n        {\n            isActive.on === true &\n            isActive.field === field ? \n            help : \"\"\n        }\n    </p>\n}\n\nexport const FormControl = ({params, children}) => {\n    return (\n        <p className={`control ${params}`}>\n            {children}\n        </p>\n    )\n}\n\nexport const InputText = ({params, controls, type, placeHolder, handleChange, value}) => {\n    return (\n        <input \n            className={`input ${params}`} \n            type={type && type} \n            placeHolder={placeHolder && placeHolder} \n            onChange={(e) => handleChange(e)}\n        />\n    )\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { FaAngleUp, FaAngleDown } from 'react-icons/fa'\nimport {\n  Dropdown, \n  DropdownTrigger, \n  DropdownButton, \n  DropdownMenu, \n  DropdownContent,\n  DropdownMenuItem\n} from './DropdownMenu'\n\nimport {FormControl, Field} from '../Forms/Form'\n\nconst CompanyDropDown = ({\n  currentCompany, \n  companies, \n  isActive, \n  handleClick, \n  handleToggle\n}) => {\n  const navigate = useNavigate()\n  return(\n    <>\n    <Field params='has-addons'>\n    <FormControl params='is-expanded'>\n        <Dropdown \n          isActive={isActive}\n        >\n          <DropdownTrigger>\n            <DropdownButton \n              label={currentCompany}\n              onClick={handleToggle}\n              isActive={isActive}\n              params='is-rounded shaded'\n            />\n          </DropdownTrigger>\n          <DropdownMenu>\n            <DropdownContent>\n                {companies && companies.map(company =>\n                  <a\n                    className={currentCompany === company.Name ? \"dropdown-item is-active\" : \"dropdown-item\"}\n                    onClick={() => handleClick({ id: company.id, name: company.Name })}\n                    key={company.id}\n                  >\n                    {company.Name}\n                  </a>\n                )}\n            </DropdownContent>\n          </DropdownMenu>\n        </Dropdown>\n    </FormControl>\n    </Field>\n    \n    {/**---------*/}\n  \n      <div className={`is-hidden`} >\n        <div className=\"dropdown-trigger \">\n          \n          <div className=\"input\" onClick={handleToggle}>\n            <span className=\"pr-1\">\n              <strong>{currentCompany}</strong>\n            </span>\n            <span className=\"icon\">\n\n              <FaAngleUp onClick={handleToggle} style={{ marginTop: 'auto' }} className={isActive === true ? \"icon\" : \"is-hidden\"} />\n              <FaAngleDown onClick={handleToggle} style={{ marginTop: 'auto' }} className={isActive === false ? \"icon\" : \"is-hidden\"} />\n            </span>\n          </div>\n          \n        </div>\n\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            <button className=\"dropdown-item\" onClick={() => history.push(\"/addcompany\")}>Add a company</button>\n            <hr className=\"dropdown-divider\" />\n            {companies && companies.map(company =>\n              <a\n                className={currentCompany === company.Name ? \"dropdown-item is-active\" : \"dropdown-item\"}\n                onClick={() => handleClick({ id: company.id, name: company.Name })}\n                key={company.id}\n              >\n                {company.Name}\n              </a>\n            )}\n          </div>\n        </div>\n\n      </div>\n    \n    </>\n    \n    \n  )\n}\nexport default CompanyDropDown","import React, { useState, useEffect, useContext, useRef } from 'react'\n\nimport {useNavigate} from 'react-router-dom'\n\nimport {stateContext} from '../../Contexts/stateContext'\n\nimport { db } from '../../Contexts/firebase'\n\n\nimport CompanyDropDown from '../../Components/DropDowns/CompanyDropDown'\n\n\nconst CompanyList = () => {\n\n  const navigate = useNavigate()\n\n  const userContext = useContext(stateContext)\n\n  const { \n    setCurrentCompany,\n    setCurrentCompanyID,\n    setDataLoading } = userContext\n\n  const { \n    dataLoading,\n    currentUser,\n    userType,\n    companies, \n    currentCompany, \n    currentCompanyID } = userContext.userSession\n  \n  const [selectedCompany, setSelectedCompany] = useState({\n    id: \"\",\n    Name: \"\"\n  })\n  const [active, setActive] = useState(false)\n  \n  const activeCompanyID = useRef(\"\")\n  const activeCompanyName = useRef(\"\")\n\n  const isUserLoggedIn = currentUser != undefined ? currentUser : \"\"\n  const isUserAdmin = isUserLoggedIn && userType === \"Admin\" ? true : false\n  \n  useEffect(() => {\n    \n  }, [isUserLoggedIn]) \n\n  useEffect(() => {\n    \n    userContext.setDataLoading(false)\n  }, [dataLoading])\n\n  const reRender = () => {\n    dataLoading != false ? fetchCompaniesRefresh() : \"\"\n  }\n\n  const handleChange = ({id, name}) => {\n    userContext.setDataLoading(true)\n    activeCompanyID.current = id\n    activeCompanyName.current = name\n    setCurrentCompanyID(id)\n    setCurrentCompany(name)\n    setDataLoading(false)\n    setActive(!active)\n  }\n\n  const fetchCompanies = async() => {\n    \n    isUserAdmin != true ?\n      companiesRef = await db.collection(\"Companies\").where(\"Users\", \"array-contains\", currentUser).get() : \n      companiesRef = await db.collection(\"Companies\").get()\n\n    const companies = companiesRef.docs.map(doc => ({id: doc.id, ...doc.data()}))\n    \n    setCurrentCompanyID(companies[0].id)\n    setCurrentCompany(companies[0].Name)\n    setDataLoading(false)\n    setUserCompanies(companies)\n\n  }\n\n  const fetchCompaniesRefresh = async() => {\n    isUserAdmin === true ? \n      companiesRef = await db.collection(\"Companies\").get() :\n      companiesRef = await db.collection(\"Companies\").where(\"Users\", \"array-contains\", currentUser).get() \n\n      const snapshot = companiesRef.docs.map(doc => ({id: doc.id, ...doc.data()}))\n\n    setDataLoading(false)\n    setUserCompanies(companies)\n    setLoading(false)\n\n  }\n\n  const toggleDropdown = () => {\n    setActive(!active)\n  }\n\n  const handleAddCompany = () => {\n    navigate('/addcompany')\n  }\n  \n  return (\n\n    <>\n      {\n        userType === \"Admin\" ? \n        <div >\n\n                  <CompanyDropDown \n                    isActive={active}\n                    handleClick={handleChange}\n                    handleToggle={()=> toggleDropdown()}\n                    companies={companies}\n                    currentCompany={currentCompany}\n                  />\n        \n        </div>\n        : <span className=\"title has-text-black\">{currentCompany}</span>\n      }\n      {companies === null ? <button className=\"button is-rounded is-link\" onClick={() => navigate('/addcompany')}>Add a Company Name</button> : null}\n    </>\n  )\n}\n\nexport default CompanyList\n","import React from 'react'\n\nconst Columns = ({options, children}) => {\n  return(\n    <div className={`columns ${options}`}>{children}</div>\n  )\n}\n\nexport default Columns\n","import React from 'react'\n\nconst Column = ({options, size, isVisible, children}) => {\n  return(\n    <div className={isVisible != false ? `column ${options} ${size}` : `column is-hidden`}>{children}</div>\n  )\n}\nexport default Column","import React from 'react'\n\nconst Loading = ({active, children}) => {\n  return(\n    <>\n      <div className={active != false ? \"modal is-active\" : \"modal\"}>\n        <div className=\"loading\">\n        </div>\n      </div>\n     {children}\n      \n    </>\n  )\n}\nexport default Loading","import React, { useState, useEffect } from 'react'\n\nexport const useSortHook = () => {\n\n  const [sortedArr, setSortedArr] = useState()\n  const [arr, setArr] = useState([])\n\n  useEffect(() => {\n    const {sortBy, data} = arr\n    const sortingArr = sortArr(sortBy, data)\n    setSortedArr(sortingArr)\n  },[arr])\n\n  const sortArr = (sortBy, arr) => { \n    const sortRef = arr && arr.sort((a, b) => (a[sortBy] > b[sortBy]) ? 1 : -1)\n    \n    setSortedArr(sortRef)\n  }\n  \n\n  return { sortedArr, setArr }\n\n}\n\n","import React from 'react'\n\nconst Hint = ({isVisible, children}) => {\n  return(\n    <div className={isVisible != false ? \" is-family-sans-serif is-size-7 has-text-weight-light pl-4\" : \"is-hidden\"}>\n      {children}\n    </div>\n  )\n}\nexport default Hint","import React from 'react'\nimport Drawer from '@mui/material/Drawer'\n\nimport Columns from '../Layout/Columns'\nimport Column from '../Layout/Column'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst SideDrawer = (props) => {\n  \n  return(\n\n    <Drawer anchor={props.direction} open={props.checked} onClose={props.handleClose}>\n\n      <div className=\"drawer-paper-full\">\n        \n        <Columns options=\"is-mobile is-vcentered\">\n          <Column size=\"is-narrow\">\n            <div className=\"icon is-large\">\n              <FaArrowLeft className=\"icon pl-1 mx-2 my-2\" onClick={() => props.handleClose()}/> \n            </div>\n          </Column>\n          <Column>\n            <span className=\"title\"><div className=\"donotwrap\">{props.title}</div></span>\n          </Column>\n        </Columns>\n        \n        <div> \n          {props.children}\n        </div>\n\n      </div>\n    </Drawer>\n  )\n}\nexport default SideDrawer","    export const fieldsCompanies = [\n            {\n                'label': 'Name',\n                'type': 'text',\n                'key': 'Name',\n                'value': '',\n                'params': {\n                        'header': true,\n                        'visible': true,\n                        'tab': 'Essentials'\n                    }\n            },\n            {\n                'label': 'Phone',\n                'type': 'telephone',\n                'key': 'Phone',\n                'value': '',\n            },\n            {\n                'label': 'Users',\n                'type': 'ref',\n                'key': 'Users',\n                'ref': {\n                    'collection': 'Users',\n                    'key': 'Companies',\n                    'value': 'id',\n                    'type': 'query',\n                    'fields': [\n                        'Email', \n                        'FirstName', \n                        'LastName'\n                    ]\n                },\n                'params': {\n                    'header': false,\n                    'visible': true,\n                    'tab': 'Users'\n                }\n            },\n            {\n                'label': 'Locations',\n                'type': 'ref',\n                'key': 'Locations',\n                'ref': {\n                    'collection': 'Locations',\n                    'key': 'CompanyID',\n                    'value': '',\n                    'type': 'query',\n                    'fields': [\n                        'Name',\n                        'Address1'\n                    ]\n                },\n                'params': {\n                    'header': false,\n                    'visible': true,\n                    'tab': 'Locations'\n                }\n            }\n        ]\n\n    export const fieldsServices = [\n        {\n            label: 'Service Location',\n            type: 'ref',\n            key: 'LocationName',\n            ref: {\n                collection: 'Locations',\n                type: 'link',\n                fields: [\n                    'Name',\n                    'Address1'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                groupable: true,\n                tab: 'Details'\n            }\n        },\n        {\n            label: 'Vendor',\n            type: 'ref',\n            key: 'Vendor',\n            ref: {\n                collection: 'Core',\n                key: 'vendorList',\n                type: 'select',\n            },\n            params: {\n                header: false,\n                visible: true,\n                groupable: true,\n                tab: 'Essentials'\n            }\n        },\n        {\n            label: 'Type',\n            type: 'ref',\n            key: 'Type',\n            ref: {\n                collection: 'Core',\n                key: 'typeList',\n                type: 'select',\n            },\n            params: {\n                header: false,\n                visible: true,\n                groupable: true,\n                tab: 'Essentials'\n            }\n        },\n        {\n            label: 'Service Name',\n            type: 'text',\n            key: 'VendorServiceName',\n            params: {\n                    header: true,\n                    visible: true,\n                    tab: 'Essentials'\n                }\n        },\n        {\n            label: 'Access Type',\n            type: 'ref',\n            key: 'AccessType',\n            ref: {\n                collection: 'Core',\n                key: 'accessList',\n                type: 'select',\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Essentials'\n            }\n        },\n        {\n            label: 'Asset ID',\n            type: 'text',\n            key: 'AssetID',\n            params: {\n                    header: true,\n                    visible: true,\n                    tab: 'Essentials'\n                }\n        },\n        {\n            label: 'Bandwidth',\n            type: 'text',\n            key: 'Bandwidth',\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Essentials'\n            }\n        },\n        {\n            label: 'MRC',\n            type: 'currency',\n            key: 'MRC',\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Essentials'\n            }\n        },\n        {\n            label: 'Status',\n            type: 'ref',\n            key: 'Status',\n            ref: {\n                key: 'id',\n                type: 'local-select',\n                options: [\n                    'Active',\n                    'Disconnected',\n                    'Pending'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Essentials'\n            }\n        },\n        {\n            label: 'Location',\n            type: 'ref',\n            key: 'Location',\n            ref: {\n                collection: 'Locations',\n                key: 'ServiceID',\n                type: 'query',\n                fields: [\n                    'Name',\n                    'Address1'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Details'\n            }\n        },\n        {\n            label: 'Start Date',\n            type: 'datepicker',\n            key: 'StartDate',\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Details'\n            }\n        },\n        {\n            label: 'Last Mile',\n            type: 'ref',\n            key: 'LastMile',\n            ref: {\n                collection: 'Core',\n                type: 'select',\n                key: 'vendorList',\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Details'\n            }\n        },\n        {\n            label: 'LEC Circuit ID',\n            type: 'text',\n            key: 'LECCircuitID',\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Details'\n            }\n        },\n        {\n            label: 'Demarc Info',\n            type: 'textarea',\n            key: 'DemarcInfo',\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Details'\n            }\n        },\n        {\n            label: 'IP Details',\n            type: 'ref',\n            key: 'IPDetails',\n            ref: {\n                key: 'id',\n                type: 'local-array',\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Essentials'\n            }\n        },\n        {\n            label: 'Account',\n            type: 'ref',\n            key: 'Account',\n            ref: {\n                collection: 'Accounts',\n                key: 'ServiceID',\n                type: 'query',\n                fields: [\n                    'AccountNum',\n                    'Vendor'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Billing'\n            }\n        },\n        {\n            label: 'Sub Account',\n            type: 'text',\n            key: 'SubAccountNum',\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Billing'\n            }\n        },\n        {\n            label: 'Group Number',\n            type: 'text',\n            key: 'GroupNum',\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Billing'\n            }\n        },\n        {\n            label: 'Tickets',\n            type: 'ref',\n            key: 'Tickets',\n            ref: {\n                collection: 'Tickets',\n                key: 'ServiceID',\n                type: 'query',\n                fields: [\n                    'TicketNum',\n                    'Status'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Related'\n            }\n        },\n        {\n            label: 'Notes',\n            type: 'ref',\n            key: 'Notes',\n            ref: {\n                collection: 'Notes',\n                key: 'ServiceID',\n                type: 'query',\n                fields: [\n                    'Date',\n                    'Note'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Related'\n            }\n        },\n        {\n            label: 'Attachments',\n            type: 'ref',\n            key: 'Attachments',\n            ref: {\n                collection: 'Attachments',\n                key: 'ServiceID',\n                type: 'query',\n                fields: [\n                    'Date',\n                    'Name'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Related'\n            }\n        },\n        {\n            label: 'Events',\n            type: 'ref',\n            key: 'Events',\n            ref: {\n                collection: 'Events',\n                key: 'ServiceID',\n                type: 'query',\n                fields: [\n                    'Date',\n                    'EventName'\n                ]\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Related'\n            }\n        },\n        {\n            label: 'Tags',\n            type: 'ref',\n            key: 'Tags',\n            ref: {\n                key: 'id',\n                type: 'local-array',\n            },\n            params: {\n                header: false,\n                visible: true,\n                tab: 'Essentials'\n            }\n        }\n    ]\n    export const fieldsUsers = [\n        {\n            _sys: {\n                _tags: [\n                    'Active',\n                    'Suspended',\n                    'Pending',\n                    'Incorrect'\n                ],\n                _modules: [\n                        {\n                            key: 'Orders',\n                            headers: [\n                                {\n                                    key: 'OrderNum',\n                                    label: 'OrderNum',\n                                    visible: true,\n                                    _index: 1\n                                },\n                                {\n                                    key: 'Vendor',\n                                    label: 'Vendor',\n                                    visible: true,\n                                    _index: 2\n                                }\n                            ],\n                        },\n                        {\n                            key: 'Services',\n                            headers: [\n                                {\n                                    key: 'AssetID',\n                                    label: 'Asset ID',\n                                    visible: true,\n                                    _index: 1\n                                },\n                                {\n                                    key: 'VendorServiceName',\n                                    label: 'Service',\n                                    visible: true,\n                                    _index: 2\n                                },\n                                {\n                                    key: 'Vendor',\n                                    label: 'Vendor',\n                                    visible: true,\n                                    _index: 3\n                                },\n                                {\n                                    key: 'Type',\n                                    label: 'Type',\n                                    visible: false,\n                                    _index: 4\n                                },\n                                {\n                                    key: 'LocationName',\n                                    label: 'Location',\n                                    visible: false,\n                                    _index: 5\n                                }\n                            ]\n                        },\n                        {\n                            key: 'Locations',\n                            headers: [\n                                {\n                                    key: 'Name',\n                                    label: 'Name',\n                                    visible: true,\n                                    _index: 1\n                                },\n                                {\n                                    key: 'Address1',\n                                    label: 'Address1',\n                                    visible: true,\n                                    _index: 2\n                                },\n                                {\n                                    key: 'Address2',\n                                    label: 'Address2',\n                                    visible: true,\n                                    _index: 3\n                                },\n                                {\n                                    key: 'City',\n                                    label: 'City',\n                                    visible: true,\n                                    _index: 4\n                                },\n                                {\n                                    key: 'State',\n                                    label: 'State',\n                                    visible: true,\n                                    _index: 5\n                                },\n                                {\n                                    key: 'Zip',\n                                    label: 'Zip',\n                                    visible: true,\n                                    _index: 6\n                                }\n                            ]\n                        },\n                        {\n                            key: 'Tickets',\n                            headers: [\n                                {\n                                    key: 'TicketNum',\n                                    label: 'Ticket',\n                                    visible: true,\n                                    _index: 1\n                                },\n                                {\n                                    key: 'Vendor',\n                                    label: 'Vendor',\n                                    visible: true,\n                                    _index: 2\n                                },\n                                {\n                                    key: 'Status',\n                                    label: 'Status',\n                                    visible: true,\n                                    _index: 3\n                                }\n                            ],\n                        },\n                        {\n                            key: 'Users',\n                            headers: [\n                                {\n                                    key: 'Email',\n                                    label: 'Email',\n                                    visible: true,\n                                    _index: 1\n                                },\n                                {\n                                    key: 'FirstName',\n                                    label: 'First Name',\n                                    visible: true,\n                                    _index: 2\n                                },\n                                {\n                                    key: 'LastName',\n                                    label: 'Last Name',\n                                    visible: true,\n                                    _index: 3\n                                }\n                            ],\n                        },\n                        {\n                            key: 'Contacts',\n                            headers: [\n                                {\n                                    key: 'OrderNum',\n                                    label: 'OrderNum',\n                                    visible: true,\n                                    _index: 1\n                                },\n                                {\n                                    key: 'Vendor',\n                                    label: 'Vendor',\n                                    visible: true,\n                                    _index: 2\n                                }\n                            ],\n                        }\n                    ],   \n                },\n            }\n        ]","import React, { useState, useEffect, useContext } from 'react'\nimport {stateContext} from '../Contexts/stateContext'\n\nexport function useRefreshDataHook() {\n  const userContext = useContext(stateContext)\n  const {refreshServices,\n    refreshOrders,\n    refreshTickets,\n    refreshLocations,\n    refreshAccounts,\n    refreshBills,\n    refreshUsers,\n    refreshContracts,\n    refreshNotes\n  } = userContext\n  const {currentModule} = userContext.userSession\n\n   function refreshModule(currentModule) {\n    switch (currentModule) {\n      case \"Services\": \n        return (\n          refreshServices() \n        )\n      case \"Accounts\":\n        return (\n          refreshAccounts()\n        )\n      case \"Orders\":\n        return (\n          refreshOrders()\n        )\n      case \"Tickets\":\n        return (\n          refreshTickets()\n        )\n      case \"Locations\":\n        return (\n          refreshLocations()\n        )\n      case \"Contracts\":\n        return (\n          refreshContracts()\n        )\n      case \"Bills\":\n        return (\n          refreshBills()\n        )\n      case \"Notes\": \n        return (\n          refreshNotes()\n        )\n      case \"Users\":\n        return (\n          refreshUsers()\n        )\n    }\n  }\n  return {refreshModule}\n}\n","import React, { useMemo } from 'react'\nimport Columns from './Layout/Columns'\nimport Column from './Layout/Column'\n\n\nconst DrawerPage = ({title, children}) => {\n\n  return(\n    <> \n        <Columns options=\"is-mobile is-vcentered\">\n          <Column size=\"is-narrow\">\n          </Column>\n          <Column>\n            <span className=\"title\"><div className=\"donotwrap\">{title}</div></span>\n          </Column>\n        </Columns>\n        \n          \n      <div>\n        {children} \n      </div>\n    </>\n  )\n}\nexport default DrawerPage","import React from 'react'\nimport Drawer from '@mui/material/Drawer'\n\nconst DrawerComponent = ({\n    title, \n    checked, \n    handleClose,   \n    direction,\n    hideBtns,\n    handleSubmit,\n    children \n  }) => {\n\n  return(\n\n    <Drawer anchor={direction} open={checked} onClose={handleClose}>\n\n      <div className=\"drawerPaper\">\n        \n        <div className=\"mb-2\">\n\n          <div className=\"title\">{title && title}</div>\n\n        </div>\n        \n        <div className={hideBtns === true ? \"is-hidden\" : \"mb-2\"}>\n        \n          <button className=\"button is-rounded is-link\" type=\"submit\" onClick={handleSubmit}>Save</button>\n          <button className=\"button is-rounded ml-2\" onClick={handleClose}>Close</button>\n        \n        </div>\n        {children}\n        <div className={hideBtns === true ? \"is-hidden\" : \"drawer-footer-menu mb-2\"}>\n        \n          <button className=\"button is-rounded is-link\" type=\"submit\" onClick={handleSubmit}>Save</button>\n          <button className=\"button is-rounded ml-2\" onClick={handleClose}>Close</button>\n        \n        </div>\n      </div>\n      \n    </Drawer>\n  )\n}\nexport default DrawerComponent","import React from 'react'\n\nconst MapListTable = ({\n  data,\n  colRef,\n  headerFields,\n  handleClick,\n  handleDelete\n}) => {\n  return(\n    <>\n      <table className=\"table is-hoverable is-bordered is-fullwidth\">\n        <thead className=\"is-size-6\">\n          <tr>\n\n            {headerFields && headerFields.map(col =>\n\n              <th style={{ width: \"20%\" }} key={col.keyProp}>\n\n                {col.label && col.label}\n\n              </th>\n\n            )}\n\n          </tr>\n\n        </thead>\n        <tbody className=\"is-size-6\">\n\n          {data && data != undefined ? \n            data.map((item, index) =>\n          \n            <tr key={item.id}>\n              \n              {headerFields && headerFields.map(col =>\n                <>\n\n                  <td\n                    className=\"py-2\"\n                    style={{ width: \"20%\" }}\n                    key={item[col.label]}\n                    name={col.relatedCollection}\n                    value={item[col.dataField]}\n                  >\n\n                    {\n                      item[col.dataField] === undefined ? \"--\" :\n                        <a onClick={(e) => handleClick({ key: index, colRef: colRef, id: item.id })}>\n                          {col.inputFieldType === 'currency' ? \"$\" : \"\"} {item[col.dataField]}\n                        </a>\n                    }\n\n                  </td>\n\n                </>\n              )}\n              {\n                handleDelete != undefined ? \n                  <td>\n                    <button className=\"delete is-small\" onClick={()=>handleDelete(index, data, headerFields)}>\n                      x\n                    </button>\n                  </td> :\n              \"\"}\n            </tr>\n          ) : \"\"}\n\n        </tbody>\n      </table>\n    </>\n  )\n}\nexport default MapListTable","import React from 'react'\n\nconst RelatedMapTable = ({\n  data,\n  colRef,\n  helperColRef,\n  headerFields,\n  handleClick,\n  handleDelete\n}) => {\n  return(\n    <>\n      <table className=\"table is-hoverable is-fullwidth\">\n        <thead className=\"is-size-6\">\n          <tr>\n\n            {headerFields && headerFields.map(col =>\n\n              <th style={{ width: \"30%\" }} key={col.keyProp}>\n\n                {col.label && col.label}\n\n              </th>\n            )}\n          </tr>\n\n        </thead>\n        <tbody className=\"relatedTableMapList\">\n\n          {data && data != undefined ? data.map((item, index) =>\n          \n            <tr key={item.id}>\n              \n              {headerFields && headerFields.map(col =>\n                <>\n\n                  <td\n                    className=\"py-2\"\n                    style={{ width: \"20%\" }}\n                    key={item[col.label]}\n                    name={col.relatedCollection}\n                    value={item[col.dataField]}\n                  >\n                    {item[col.dataField] === undefined ? \"--\" :\n                    <a onClick={(e) => handleClick({ key: index, colRef: colRef, id: item.id })}>\n                      {col.inputFieldType === 'currency' ? \"$\" : \"\"} {item[col.dataField]}\n                    </a>\n                    }\n                  </td>\n\n                </>\n              )}\n              {handleDelete != undefined ? <td><button className=\"delete is-small\" onClick={()=>handleDelete(index, data, headerFields)}>x</button></td> :\n              \"\"}\n            </tr>\n          ) : \"\"}\n\n        </tbody>\n      </table>\n    </>\n  )\n}\nexport default RelatedMapTable","import React from 'react'\n\nconst TagCloud = ({data, handleTagDelete}) => {\n\n  return(\n    <div className=\"field is-grouped is-grouped-multiline\">\n        <div className=\"control\">\n          <div className=\"tags\">\n            {!data ? null : data.map(tag => \n              \n                <span className=\"tag is-rounded\">\n                  {tag}\n                  <button className=\"delete is-hidden\" onClick={()=>handleTagDelete()}></button>\n                </span>\n              \n            )}\n          </div>\n        </div>\n    </div>\n  )\n}\nexport default TagCloud","import React from 'react'\n\nconst LabeledTextField = (props) => {\n  return(\n    <div className=\"input text-field is-hidden-tablet\">\n      <div className=\"text-field-label has-text-link\">{props.label}</div>\n      <div className=\"text-field-input\">\n        <input className=\"input is-static has-text-weight-semi-bold\" placeholder={props.label} value={props.value} readOnly/>\n      </div>\n    </div>\n  )\n}\nexport default LabeledTextField","import React from 'react'\n\nconst LabeledTextRelatedField = (props) => {\n  return(\n    <div className=\"input text-field is-hidden-tablet\">\n      <div className=\"text-field-label has-text-link\">{props.label}</div>\n      <div className=\"text-field-input\">\n        <p className=\"has-text-weight-semi-bold\" placeholder={props.label}>\n          {props.value}\n        </p>\n      </div>\n    </div>\n  )\n}\nexport default LabeledTextRelatedField","import React from 'react'\n\nexport const CardHeader = ({isVisible, bgColor, txtColor, children}) => {\n    return (\n        <header className={\n            isVisible != true ? \n                'is-hidden' : \n                `card-footer ${bgColor && bgColor} ${txtColor && txtColor}`\n            }\n        >\n            {children}\n        </header>\n    )\n}\n\n\nexport const CardHeaderTitle = ({isCentered, children}) => {\n    return (\n        <p className = {\n                isCentered === true ? \n                    'card-header-title is-centered' : \n                    'card-header-title'\n            }\n        >\n            {children}\n        </p>\n    )\n}\n\n\nexport const CardFooter = ({isVisible, bgColor, txtColor, children}) => {\n    return (\n        <footer className = {\n                isVisible != true ? \n                    'is-hidden' : \n                    `card-footer ${bgColor && bgColor} ${txtColor && txtColor}`\n            }\n        >\n            {children}\n        </footer>\n    )\n}\n\n\nexport const CardFooterItem = ({children}) => {\n    return (\n        {children}\n    )\n}\n\n\nexport const Card = ({noShadow, children}) => {\n    return (\n        <div className={noShadow === true ? 'card is-shadowless' : 'card'}>\n            {children}\n        </div>\n    )\n}\n\n\nexport const CardContent = ({children}) => {\n    return (\n        <div className='card-content'>\n            {children}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { FaFileContract } from 'react-icons/fa'\nimport MapListTable from '../Tables/MapListTable'\nimport RelatedMapTable from '../Tables/RelatedMapTable'\nimport TagCloud from '../Tags/TagCloud'\nimport Columns from './Columns'\nimport Column from './Column'\nimport LabeledTextField from '../Fields/LabeledTextField'\nimport LabeledTextRelatedField from '../Fields/LabeledTextRelatedField'\nimport {\n  Card, \n  CardHeader, \n  CardHeaderTitle, \n  CardContent\n} from '../Layout/Card'\n\nconst PageField = ({\n    loading,\n    field, \n    fieldData,  \n    relatedDataMap, \n    handleClick,\n    handleRelatedDrawer,\n    handleArrayMapDrawer,\n    handleDocRelations,\n    handleArrayMapDelete \n  }) => {\n  const navigate = useNavigate()\n  \n  return(\n    <>\n    {field && [field].map(item => {\n      switch (item.inputFieldType) {\n\n          case \"text\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> : \n              <>\n              <div className=\"is-hidden-mobile\"> \n                <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                    {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? \n                      data[item.dataField] : \"--\"  )} \n                  </Column>\n                </Columns>\n              </div>\n              <LabeledTextField \n                label={field.label}\n                value={[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\"  )}\n              />\n            </>\n            }\n            </>  \n            )\n\n          case \"related-array-map\":\n            return (\n              <Card noShadow={false}>\n                <CardHeader>\n                  <CardHeaderTitle>\n                    {item.label}\n                  </CardHeaderTitle>\n                </CardHeader>\n                <CardContent>\n                <a onClick={() => handleDocRelations(field)}>Link Related </a>\n                <RelatedMapTable \n                        headerFields={item.columns}\n                        data={item.inputSource}\n                        colRef={item.relatedCollection}\n                        helperCollection={item.helperCollection}\n                        handleClick={(e) => handleRelatedDrawer(e)}\n                        handleDelete={(e, arr)=>handleArrayMapDelete(e, arr)}\n                  /> \n                </CardContent>\n              </Card>\n            )\n\n          case \"text-area\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n              <>\n              <div className=\"is-hidden-mobile\">\n                <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                    <div className=\"textareafield\">\n                      {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\")}\n                    </div>\n                  </Column>\n                </Columns>\n              </div>\n              <LabeledTextField \n                label={field.label}\n                value={[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\"  )}\n              />\n              </>\n              }\n              </> \n            )\n          case \"currency\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n              <>\n              <div className=\"is-hidden-mobile\">\n                <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                    $ {[fieldData].map(data => data[item.dataField] && data[item.dataField] != \"\" ? data[item.dataField] : \"--\"  )}\n                  </Column>\n                </Columns>\n              </div>\n              <LabeledTextField \n                label={field.label}\n                value={`$ ${[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\"  )}`}\n              />\n              </>\n              }\n              </>\n            )\n          case \"related-select\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n              <>\n              <div className=\"is-hidden-mobile\">\n                <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                    {\n                      fieldData && item.relatedDataType === \"Location\" ?\n                        item.inputSource != \"\" ? \n                          item.inputSource.filter(f => f.id === fieldData[item.relatedDataField]).map(location =>  \n                      \n                            <table>\n                              <thead>\n                                <tr>\n                                <th>{location.Name}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {location != undefined ? \n                                  <div className=\"is-size-6\" key={location.id}>\n                                    {`\n                                      ${location.Address1 || \"\"} \n                                      ${location.Address2 || \"\"} \n                                      ${location.City || \"\"}, \n                                      ${location.State || \"\"} \n                                      ${location.Zip || \"\"}\n                                    `}\n                                  </div> \n                                : \"Full Address not entered\"}\n                              </tbody>\n                            </table>\n                      ) : null : \n                        fieldData && item.relatedDataType === \"Account\" ? \n                          <a onClick={(e)=> handleClick({colRef: \"Accounts\", id: fieldData[item.relatedDataField]})}> \n                            {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\")} \n                          </a> \n                      : \n                        fieldData && item.relatedDataType === \"Service\" ? \n                          <a onClick={(e)=> handleClick({colRef: \"Services\", id: fieldData[item.relatedDataField]})}> \n                            {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\")} \n                          </a> \n                      : \n                      fieldData && item.relatedDataType === \"Order\" ? \n                      <a onClick={(e)=> handleClick({colRef: \"Orders\", id: fieldData[item.relatedDataField]})}> \n                        {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\")} \n                      </a> \n                      : null\n                    }\n                  </Column>\n                </Columns>\n                </div>\n                <LabeledTextRelatedField \n                  label={field.label}\n                  value={\n                    fieldData && item.relatedDataType === \"Location\" ?\n                      item.inputSource != \"\" ? \n                        item.inputSource.filter(f => f.id === fieldData[item.relatedDataField]).map(location =>  \n                          location != undefined ? \n                            <p className=\"donotwrapfield is-hidden-tablet\" key={location.id}>\n                              {location.Name} -\n                                {`\n                                  ${location.Address1 || \"\"} \n                                  ${location.Address2 || \"\"} \n                                  ${location.City || \"\"}, \n                                  ${location.State || \"\"} \n                                  ${location.Zip || \"\"}\n                                `}\n                            </p> : \"Full Address not entered\"\n                          ) : null : \n                      fieldData && item.relatedDataType === \"Account\" ? \n                        <a onClick={(e)=> handleClick({colRef: \"Accounts\", id: fieldData[item.relatedDataField]})}> \n                          {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\")} \n                        </a> \n                    : \n                      fieldData && item.relatedDataType === \"Service\" ? \n                        <a onClick={(e)=> handleClick({colRef: \"Services\", id: fieldData[item.relatedDataField]})}> \n                          {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\")} \n                        </a> \n                    : \n                      fieldData && item.relatedDataType === \"Order\" ? \n                      <a onClick={(e)=> handleClick({colRef: \"Orders\", id: fieldData[item.inputID]})}> \n                        {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\")} \n                      </a> \n                    : null\n                  }\n                />\n              </>\n              }\n              </>\n            )\n            \n          case \"map-list\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n              <>\n                <Columns options=\"is-mobile is-centered is-multiline\">\n                  <Column size=\"is-12\">\n                    <div key={field.label}>\n                      {field.label} \n                      <a \n                        className=\"link has-text-weight-normal is-size-7 pl-2\" \n                        onClick={() => handleRelatedDrawer(field)}\n                      >\n                        (add)\n                      </a>\n                    </div>\n                  </Column>\n                  <Column size=\"is-12\">\n                    <MapListTable \n                      headerFields={item.relatedInputFields}\n                      data={relatedDataMap}\n                      colRef={item.relatedCollection}\n                      handleClick={(e)=>handleClick(e)}\n                    />  \n                  </Column>\n                </Columns>\n              </>\n              }\n              </>\n            )\n\n            case \"array-map-list\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n              <>\n                <Columns options=\"is-mobile is-multiline\">\n                  <Column size=\"is-12\">\n                    <div key={field.label}>\n                      {field.label} \n                      <a \n                        className=\"link has-text-weight-normal is-size-7 pl-2\" \n                        onClick={() => handleArrayMapDrawer(field)}\n                      >\n                        (add)\n                      </a>\n                    </div>\n                  </Column>\n                  <Column size=\"is-12\">\n                    <MapListTable \n                      headerFields={item.relatedInputFields}\n                      data={fieldData[item.dataField]}\n                      colRef={item.relatedCollection}\n                      handleClick={(e) => handleArrayMapDrawer(e)}\n                      handleDelete={(e, arr)=>handleArrayMapDelete(e, arr)}\n                    /> \n                  </Column>\n                </Columns>\n              </>\n              }\n              </>\n            )\n          \n          case \"status\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n              <>\n              <div className='is-hidden-mobile'>\n                <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                    \n                  {[fieldData].map(data => data[item.dataField] != \"\" || undefined ? (\n                  <div key={data[item.label]} className={\n                    data[item.dataField] === 'Active' ? \"button is-success\" :\n                    data[item.dataField] === 'Disconnected' ? \"button is-danger\" : \n                    data[item.dataField] === 'Pending Activation' || 'Pending Disconnect' ? \"button is-warning\" : \"\"}>{data[item.dataField]}\n                  </div>\n                  ) : \"--\"  )}\n                  \n                  </Column>\n                </Columns>\n                </div>\n                <LabeledTextField \n                  label={field.label}\n                  value={[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\"  )}\n                />\n              </>\n              }\n              </>\n            )\n          \n          case \"tags\":\n            return (\n              <>\n              {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n              <> \n              <div className='is-hidden-mobile'>\n                <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                    \n                  {\n                    [fieldData].map(data => data[item.dataField] != \"\" || undefined ? \n                      <TagCloud data={data[item.dataField]} /> \n                    : \"--\"  )\n                  }\n                  \n                  </Column>\n                </Columns> \n                </div>\n                <LabeledTextField \n                  label={field.label}\n                  value={[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\"  )}\n                />\n              </>\n              }\n              </>\n            )\n\n            case \"file-field\":\n              return (\n                <>\n                {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n                <>\n                  <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                  {\n                    [fieldData].map(data =>  \n                      <>\n                        <a href={data[item.dataField]} target=\"_blank\">\n                          <FaFileContract className=\"icon is-medium\" />\n                        </a>\n                      </>\n                    )\n                  }\n                  </Column>\n                </Columns> \n                </>\n                }\n                </>\n              )\n\n              \n\n          default:\n              return (\n                <>\n                {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n                <>\n                <div className='is-hidden-mobile'>\n                <Columns options=\"is-mobile\">\n                  <Column size=\"is-4-mobile is-3-tablet is-3-desktop is-2-fullhd\">\n                    <div key={field.label}>{field.label}</div>\n                  </Column>\n                  <Column size=\"1 is-narrow\">:</Column>\n                  <Column size=\"7\">\n                  {\n                    [fieldData].map(data => \n                      data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\"  \n                    )\n                  } \n                  </Column>\n                </Columns>\n                </div>\n                <LabeledTextField \n                  label={field.label}\n                  value={[fieldData].map(data => data[item.dataField] != \"\" || undefined ? data[item.dataField] : \"--\"  )}\n                />\n                </>\n                }\n                </>\n              )\n            }\n        })\n      } \n    </>\n  )\n}\n\nexport default PageField","import React from 'react'\n\n\nconst MappedList = ({\n  data,\n  colRef,\n  headers,\n  handleClick,\n  handleDelete\n}) => {\n  return(\n    <>\n        {headers && headers.map(header => \n            \n            <div className='list'>\n                <>\n                {data && data != undefined ? \n                    data.map((item, index) =>\n                        {headers && headers.map(h =>\n                            <div className='list-item'>\n                                {item?.[h] || \"--\"}\n                            </div>\n                        )} \n                    ) : ''}\n                </>\n            </div>\n        )}\n        </>)\n    }\nexport default MappedList","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { FaFileContract } from 'react-icons/fa'\nimport MapListTable from '../Tables/MapListTable'\nimport MappedList from '../Fields/MappedList'\nimport RelatedMapTable from '../Tables/RelatedMapTable'\nimport TagCloud from '../Tags/TagCloud'\nimport Columns from './Columns'\nimport Column from './Column'\nimport RelatedSelectField from '../Fields/RelatedSelectField'\nimport LabeledTextField from '../Fields/LabeledTextField'\nimport LabeledTextRelatedField from '../Fields/LabeledTextRelatedField'\nimport { stateContext } from '../../Contexts/stateContext'\nimport {\n  Card, \n  CardHeader, \n  CardHeaderTitle, \n  CardContent\n} from '../Layout/Card'\n\nconst PageField2 = ({\n    loading,\n    field, \n    fieldData,  \n    relatedDataMap, \n    handleClick,\n    handleRelatedDrawer,\n    handleArrayMapDrawer,\n    handleDocRelations,\n    handleArrayMapDelete \n  }) => {\n    const userContext = useContext(stateContext)\n    const coreModules = userContext.userSession\n    const fetchContext = (module) => {\n        return coreModules[module]\n    }\n    \n  return(\n    <>\n        {field && [field].map(item => {\n            switch (item.type) {\n                case \"text\":\n                    return (\n                        <>\n                            {loading === true ? <input className=\"input is-rounded is-small\" disabled /> : \n                                <>\n                                    <dt>{field.label}</dt>\n                                    <dd>{[fieldData].map(data => data[item.key] != \"\" || undefined ? data[item.key] : \"--\"  )}</dd>\n                                </>\n                            }\n                        </>  \n                    )\n\n            case \"textarea\":\n                return (\n                    <>\n                        {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n                            <> \n                                <dt>{field.label}</dt>\n                                <dd>{[fieldData].map(data => data[item.key] != \"\" || undefined ? data[item.key] : \"--\"  )}</dd>\n                            </>\n                        }\n                    </> \n                )\n\n            case \"currency\":\n                return (\n                    <>\n                        {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n                            <>\n                                <dt>{field.label}</dt>\n                                <dd>$ {[fieldData].map(data => data[item.key] != \"\" || undefined ? data[item.key] : \"--\"  )}</dd>\n                            </>\n                        }\n                    </>\n                )\n\n                case \"datepicker\":\n                    return (\n                        <>\n                            {loading === true ? <input className=\"input is-rounded is-small\" disabled /> : \n                                <>\n                                    <dt>{field.label}</dt>\n                                    <dd>{[fieldData].map(data => data[item.key] != \"\" || undefined ? data[item.key] : \"--\"  )}</dd>\n                                </>\n                            }\n                        </>  \n                    )\n\n                    case \"datalist\":\n                    return (\n                        <>\n                            {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n                                <>\n                                <label>{field.label}</label>\n                                        <MappedList \n                                            headers={item?.ref?.fields}\n                                            data={fieldData[item?.key]}\n                                            colRef={fetchContext(item.collection)}\n                                            handleClick={(e) => handleArrayMapDrawer(e)}\n                                            handleDelete={(e, arr)=>handleArrayMapDelete(e, arr)}\n                                        />     \n                                </>\n                            }\n                        </>\n                    )\n\n                case \"related-select\":\n                    return (\n                        <>\n                            {loading === true ? <input className=\"input is-rounded is-small\" disabled /> :\n                                <>\n                                    <dt>{field.label}</dt>   \n                                        {item?.ref?.fields.map(r => \n                                            fetchContext(item.collection)?.filter(f => \n                                                f.id === fieldData[item.key])?.map(d =>\n                                                    <dd>{d[r]}</dd>\n                                                )\n                                            )\n                                        }\n                                </>\n                            }\n                        </>\n                    )\n            }\n        })\n    }\n    </>\n  )\n}\n\nexport default PageField2","import React from 'react'\n\nconst TabBar = ({children}) => {\n  return(\n    <>\n      <div className=\"tabs\">\n        <ul>\n          {children}\n        </ul>\n      </div>\n    </>\n  )\n}\nexport default TabBar","import React from 'react'\n\nconst Tab = ({data, handleClick, active, children}) => {\n\n  const arrGroup = (arr, el) => arr && arr.reduce((acc, item) => {\n    let key = item[el]\n    !acc[key] ? acc[key] = [] :\n    acc[key].push(item)\n    return acc\n  },{})\n  const dataArr = data != undefined ? data.filter(f => f.tab != undefined) : \"\"\n  const groupedArr = data != undefined ? arrGroup(dataArr, 'tab') : \"\"\n  const tabs = Object.keys(groupedArr)\n  \n  return(\n    <>\n      {\n        tabs.filter(f => f != undefined).map(tab => \n          <li className={active == tab ? \"is-active\" : \"\"}>\n            <a className=\"tab\" onClick={()=>handleClick(tab)}>\n              {tab}\n            </a>\n          </li>\n        )\n      }          \n    </>\n  )\n}\nexport default Tab","import React from 'react'\n\nconst ConfirmationModal = (props) => {\n  return(\n    <div className=\"modal is-active is-relative\">\n      <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <div className=\"modal-card-head\">\n            <div className=\"modal-card-title\">\n              {props.header}\n            </div>\n          </div>\n        <div className=\"modal-card-body\">\n          {props.children}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ConfirmationModal","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { FaTrashAlt } from 'react-icons/fa'\n\nimport { db } from '../../Contexts/firebase'\nimport ConfirmationModal from '../ConfirmationModal'\n\nconst DeleteButton = ({ colRef, docRef, size, isIcon }) => {\n\n  const navigate = useNavigate()\n\n  const [toggleConfirmation, setToggleConfirmation] = useState(false)\n  const [confirmed, setConfirmed ] = useState(false)\n  const [deleteSuccess, setDeleteSuccess] = useState()\n  const [deleteError, setDeleteError] = useState()\n\n  const handleClick = async() => {\n    \n    try {\n\n    const res = await db.collection(colRef).doc(docRef).delete()\n    console.log(res)\n    setDeleteSuccess(\"Successfully Deleted Record\")\n    autoClose()\n\n    } catch {\n\n      setDeleteError(\"Error Deleting Record\")\n\n    }\n    \n  }\n\n  const autoClose = () => {\n\n    setTimeout(() => { \n      navigate('/dashboard') \n    }, 1500 )\n\n  }\n\n  const handleConfirmation = () => {\n    \n    setToggleConfirmation(!toggleConfirmation)\n      \n  }\n\n  return(\n    <>\n      {\n        isIcon && isIcon != true ?\n          <button \n            className={`button is-danger is-rounded mx-1 ${size}`} \n            onClick={() => { handleConfirmation()}}>\n            Delete\n          </button> \n        :\n          <FaTrashAlt \n            className=\"icon is-danger is-medium\" \n            onClick={() => { handleConfirmation()}}\n          />\n      }\n      \n      {toggleConfirmation != false ? \n      \n      <ConfirmationModal header=\"Confirm Delete\">\n        {deleteSuccess && <div className=\"notification is-success\">{deleteSuccess}</div>}\n        {deleteError && <div className=\"notification is-danger\">{deleteError}</div>}\n        <button className=\"button is-rounded is-danger mr-3\" onClick={() => {handleClick()}}>\n          Delete\n        </button> \n        <button className=\"button is-rounded\" onClick={()=> {handleConfirmation()}}>\n          Cancel\n        </button>\n      </ConfirmationModal>\n\n      : \"\"}\n    </>\n  )\n}\nexport default DeleteButton","import React from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { FaChevronCircleDown } from \"react-icons/fa\"\nimport { FaChevronCircleUp } from \"react-icons/fa\"\nimport DeleteButton from '../Buttons/DeleteButton'\n\n\nconst RelatedFieldDropDown = ({isActive, handleToggle, views, activeView, handleView, value, title, handleEditDrawer}) => {\n  const navigate = useNavigate()\n  const {isModule, id} = useParams()\n\n  return(\n    <>\n    \n    <div className=\"box is-rounded mx-2 is-12\">\n      \n      <nav className=\"level\">\n      <div className=\"content\"><span className=\"is-size-6\">{title}</span><br/>\n      <span className=\"is-size-4 title\">{value}</span></div>\n      <div className={isActive === true ? `dropdown is-active` : `dropdown`}>\n        <div className=\"dropdown-trigger\" >\n          <div className=\"pl-1\" onClick={handleToggle}>\n            \n            <span className=\"pr-1\">\n              {activeView && activeView}\n            </span>\n            <span className=\"icon pl-1\">\n\n              <FaChevronCircleUp onClick={handleToggle} style={{ marginTop: 'auto' }} className={isActive === true ? \"icon is-small\" : \"is-hidden\"} />\n              <FaChevronCircleDown onClick={handleToggle} style={{ marginTop: 'auto' }} className={isActive === false ? \"icon is-small\" : \"is-hidden\"} />\n\n            </span>\n          </div>\n        </div>\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            \n            {views.map(view =>\n\n              <a className=\"dropdown-item\" onClick={() => handleView(view)}>{view}</a>\n\n            )}\n            <hr className=\"dropdown-divider\" />\n            \n          </div>\n        </div>\n      </div>\n    </nav>\n    </div>\n</>\n  )\n}\nexport default RelatedFieldDropDown","import React from 'react'\nimport Hint from './Hint'\n\nconst SelectField = ({title, value, handleChange, name, hide, hint, handleAddValue, showAddLink, field, children}) => {\n\n  return(\n      <div className=\"field\">\n      <label className=\"label\">\n        {title && title} \n        { showAddLink === true ? \n          <a className=\"link is-size-7 pl-1\" onClick={()=>handleAddValue(field)}>(add)</a> \n        : \"\" }\n      </label> \n        <div className=\"control\">\n        <div className={hide != true ? \"select is-rounded is-fullwidth \" : \"is-hidden\"}>\n          <select type=\"select\" name={name && name} defaultValue={value && value} onChange={handleChange} >\n            {children}\n          </select>\n        </div>\n        {hint && <Hint> {hint}</Hint>}\n      </div>\n    </div>\n  )\n}\n\nexport default SelectField","import React from 'react'\nimport Hint from './Hint'\nimport { FaDollarSign } from 'react-icons/fa';\n\nconst TextBox = (props) => {\n  const {title, value, type, name, fieldChanged, hint, addOn} = props\n  return(\n      <div className=\"field\">\n      <label className=\"label\">{title}</label>\n        <div className={addOn != undefined ? \"control has-icons-left\" : \"control\"}>\n          {addOn === \"currency\" ? <i className=\"icon is-left\"><FaDollarSign /></i> : \"\"}\n          <input type={type != undefined ? type : \"text\"} className=\"input is-rounded \" name={name} value={value} onChange={e=>fieldChanged(e)} />  \n        </div>\n        {hint && <Hint>{hint}</Hint>}\n      </div>\n  )\n}\nexport default TextBox","import React, { useState } from 'react'\nimport Hint from './Hint'\n\nconst TextArea = (props) => {\n  const {title, value, name, fieldChanged, hint} = props\n  return(\n    <div className=\"field\">\n      <label className=\"label\">{title}</label>\n        <div className=\"control\">\n          <textarea type=\"textarea\" className=\"textarea is-rounded\" name={name} value={value} onChange={e=>fieldChanged(e)} />  \n        </div>\n        {hint && <Hint>{hint}</Hint>}\n      </div>\n  )\n}\nexport default TextArea","import React, { useState } from 'react'\nimport Hint from './Hint'\n\nconst TextInput = ({inputFieldName, inputFieldRef, inputFieldValue, inputFieldLabel, inputFieldChange, hint, type, readonly}) => {\n\n  const [toggleVisible, setToggleVisible] = useState(false)\n\n  const handleChange = () => {\n   inputFieldChange != undefined ? inputFieldChange() : \"\"\n  }\n\n  const hintStyle = {\n    borderBottom: \"1px dotted #000\",\n    textDecoration: \"none\",\n    color: \"black\"}\n\n  return(\n      <div className=\"field\">\n      <label className=\"label\">{inputFieldLabel}</label>\n        <div className=\"control\">\n          <input className=\"input is-rounded\" type={type != undefined ? type : \"text\"} ref={inputFieldRef} defaultValue={inputFieldValue} onChange={handleChange} readOnly={readonly} />  \n        </div>\n        {hint && <Hint>{hint}</Hint>}\n      </div>\n  )\n}\nexport default TextInput","import React, {useState, useEffect} from 'react'\n\nconst Modal = ({title, modalState, children, handleSubmit, autoClose}) => {\n\n  const [toggleModalState, setToggleModalState] = useState(modalState)\n\n  useEffect(()=>{\n    setToggleModalState(modalState)\n  },[modalState])\n\n  return(\n    <div className={toggleModalState === true ? \"modal is-active\" : \"modal\"}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <div className=\"modal-card-head\">\n        <div className=\"modal-card-title\">\n          {title}\n          </div>\n        </div>\n        <div className=\"modal-card-body\">\n          {children}\n        </div>\n        <div className=\"modal-card-foot\">\n          <button className=\"button is-rounded is-link level-item\" onClick={handleSubmit}>\n            Save\n          </button>\n        </div>\n        <button className=\"modal-close is-large\" aria-label=\"close\" onClick={()=> autoClose(\"\")}></button>\n        </div>\n      </div>\n  )\n}\n\nexport default Modal","import React, {useEffect, useState, useRef, useContext} from 'react'\nimport {useNavigate} from 'react-router-dom'\n\nimport {db} from '../../Contexts/firebase'\nimport {stateContext} from '../../Contexts/stateContext'\n\nimport TextInput from '../../Components/Forms/TextInput'\nimport StateDropDown from '../../Components/Forms/StateDropDown'\nimport Modal from '../../Components/Modal'\n\nconst AddLocation = ({resetAddRelatedValue, handleUpdated}) => {\n\n  const userContext = useContext(stateContext)\n  const { setLocations, refreshLocations } = userContext\n  const { currentCompanyID, currentCompany } = userContext.userSession\n  \n  const [modalState, setModalState] = useState(true)\n  const [addLocationError, setAddLocationError] = useState(\"\")\n  const [success, setSuccess] = useState(false)\n  const [triggerClose, setTriggerClose] = useState()\n  \n  const locationName = useRef(\"\")\n\n  const handleSubmit = async(e) => {\n    const data = {\n      Name: locationName.current.value,\n      CompanyID: currentCompanyID,\n      CompanyName: currentCompany\n    }  \n    console.log(data)\n    const res = await db.collection(\"Locations\").doc().set(data)\n    refreshLocations()\n    handleUpdated()\n    handleModalClose()\n  }\n\n  const handleModalClose = () => {\n    resetAddRelatedValue()\n    setModalState(false)\n  }\n  \n\n  return (\n      <Modal title=\"Add Location\" handleSubmit={handleSubmit} modalState={modalState} >\n          <form>\n\n            <TextInput \n              inputFieldLabel=\"Location Name\"\n              inputFieldRef={locationName}\n              inputFieldValue={\"\"}\n            />\n            \n          </form>\n        <div className=\"block\">\n          <div className=\"notification is-danger is-hidden\">{addLocationError}</div>\n         {success === true ?  <div className=\"notification is-success\">Location Added</div> : \"\"}\n        </div>\n      </Modal>\n  )\n}\nexport default AddLocation","import React from 'react'\nimport { faUpload } from 'react-icons/fa'\n\nconst FileUploadField = ({handleFileChange}) => {\n  return(\n    <div className=\"file is-boxed\">\n      <label className=\"file-label\">\n      <input \n        className=\"file-input\" \n        type=\"file\" \n        name=\"resume\" \n        onChange={(e) => handleFileChange(e)} \n      />\n          <span className=\"file-cta\">\n            <span className=\"file-icon\">\n              <i className=\"faUpload\"></i>\n            </span>\n          <span className=\"file-label\">Choose a file...</span>\n          </span>\n      </label>\n    </div>\n  )\n}\nexport default FileUploadField","import React from 'react'\nimport SelectField from './SelectField'\nimport TextBox from './TextBox'\nimport TextArea from './TextArea'\nimport AddLocationModal from '../../Pages/Locations/AddLocationModal'\nimport FileUploadField from './FileUploadField'\n\nconst PageInputFields = ({ \n    pageFields, \n    active,\n    activeValue,\n    tab, \n    handleChange, \n    handleRelatedSelectChange,\n    handleAddRelatedValue,\n    handleFileChange,\n    addRelatedValue,\n    resetAddRelatedValue, \n    handleUpdated,\n    currentCompany,\n    currentCompanyID, \n    \n  }) => {\n      console.log(activeValue)\n  return(\n    <>\n    \n      {pageFields && pageFields.map(field => {\n\n        switch (field.inputFieldType || field.fieldType) {\n\n          case \"related-select\":\n            return (\n              <>\n                {console.log('pageInput array:',[field.inputSource])}\n                <SelectField\n                  type=\"select\"\n                  title={field.label}\n                  name={field.dataField}\n                  value={active && active[field.dataField]}\n                  handleChange={(e) => handleRelatedSelectChange(e, { name: field.dataField, relatedName: field.relatedDataField })}\n                  field={field}\n                  handleAddValue={(e) => handleAddRelatedValue(e)}\n                  showAddLink={true}\n                >\n                  \n                  <option></option>\n                  \n                  {field.inputSource && field.inputSource.map(i =>\n\n                    <option id={i[field.inputID]} name={i[field.dataField]} key={i[field.inputID]}>\n                      {i[field.inputValue]}\n                    </option>\n\n                  )}\n                </SelectField>\n\n                {addRelatedValue === \"Locations\" ?\n\n                  <AddLocationModal\n                    handleUpdated={handleUpdated}\n                    resetAddRelatedValue={() => resetAddRelatedValue()}\n                    currentCompany={currentCompany}\n                    currentCompanyID={currentCompanyID}\n                    nameRef={field.inputValue}\n                  /> \n\n                : \"\"}\n\n              </>\n            )\n\n          case \"select\":\n            return (\n\n              <SelectField \n                type=\"select\" \n                title={field.label} \n                name={field.dataField} \n                value={active && active[field.dataField]} \n                handleChange={(e) => handleChange(e)} \n              >\n\n                <option></option>\n\n                {field.inputSource && field.inputSource.map(i =>\n\n                  <option name={i[field.dataField]} key={i[field.inputID]}>\n                    {i[field.inputValue]}\n                  </option>\n\n                )}\n\n              </SelectField>\n\n            )\n\n          case \"text\":\n            return (\n\n              <TextBox \n                title={field.label} \n                name={field.dataField} \n                value={active && active[field.dataField]} \n                fieldChanged={handleChange} \n              />\n\n            )\n\n          case \"currency\":\n            return (\n\n              <TextBox \n                title={field.label} \n                addOn=\"currency\" \n                name={field.dataField} \n                value={active && active[field.dataField]} \n                fieldChanged={handleChange} \n              />\n\n            )\n\n          case \"text-area\":\n            return (\n\n              <TextArea \n                title={field.label} \n                name={field.dataField} \n                value={active && active[field.dataField]} \n                fieldChanged={handleChange} \n              />\n\n            )\n\n          case \"datepicker\":\n            return (\n              <TextBox\n                id=\"datetime-local\"\n                title={field.label}\n                type=\"date\"\n                name={field.dataField}\n                className=\"input is-rounded is-small\"\n                value={active && active[field.dataField]}\n                fieldChanged={(e) => handleChange(e)}\n              />\n            )\n\n            case \"status\":\n            return (\n\n              <SelectField \n                type=\"select\" \n                title={field.label} \n                name={field.dataField} \n                value={active && active[field.dataField]} \n                handleChange={(e) => handleChange(e)} \n              >\n\n                <option></option>\n\n                {field.inputSource && field.inputSource.map(i =>\n\n                  <option name={i[field.dataField]} key={i[field.inputID]}>\n                    {i[field.inputValue]}\n                  </option>\n\n                )}\n\n              </SelectField>\n\n            )\n\n          case \"file-field\":\n            return (\n              <>\n\n                <FileUploadField handleFileChange={handleFileChange} />\n\n              </>\n            )\n          case \"ac-places\":\n            return (\n              <>\n\n                <TextBox \n                  title={field.label}\n                  handleChange={(e)=>handleACChange(e)} \n                  value={active && active[field.dataField]} \n                />\n\n              </>\n            )\n\n        }\n      }\n      )}\n    </>  \n  )\n}\nexport default React.memo(PageInputFields)","import React, { useContext } from 'react'\nimport { stateContext } from '../../Contexts/stateContext'\nimport SelectField from '../../Components/Forms/SelectField'\nimport TextBox from '../../Components/Forms/TextBox'\nimport TextArea from '../../Components/Forms/TextArea'\n\nconst RelatedPageInputFields = ({ \n    \n    relatedFields,\n    handleChange, \n    handleRelatedSelectChange,\n    handleUpdated,\n    activeData,\n    relatedData  \n  }) => {\n\n    const userContext = useContext(stateContext)\n    const {locations, orders, users, notes, tickets, services} = userContext.userSession\n      console.log(relatedFields)\n  \n\n  return(\n    <>\n    \n      {relatedFields && relatedFields.map(related => {\n        switch (related.inputFieldType) {\n\n          case \"related-select\":\n            return (\n              <>\n                \n                <SelectField\n                  type=\"select\"\n                  title={related.label}\n                  name={related.dataField, <a className=\"link is-size-7 pl-1\" onClick={() => handleAddValue(related)}>(add)</a>}\n                  value={activeData && activeData[related.dataField]}\n                  handleChange={(e) => handleRelatedSelectChange(e, { name: related.dataField, relatedName: related.relatedDataField })}\n                  field={related}\n                  handleAddValue={(e) => handleAddRelatedValue(e)}\n                  showAddLink={true}\n                >\n                  \n                  <option></option>\n\n                  {related.inputSource && related.inputSource.map(i =>\n\n                    <option id={i[related.inputID]} name={i[related.dataField]} key={i[related.inputID]}>\n                      {i[related.inputValue]}\n                    </option>\n\n                  )}\n                </SelectField>\n\n              </>\n            )\n          \n          case \"select\":\n            return (\n\n              <SelectField \n                type=\"select\" \n                title={related.label} \n                name={related.dataField} \n                value={activeData && activeData[related.dataField]} \n                handleChange={(e) => handleRelatedSelectChange(e, { name: related.dataField, relatedName: related.relatedDataField })} \n              >\n\n                <option></option>\n\n                {related.inputSource && related.inputSource.map(i =>\n\n                  <option name={i[related.dataField]} key={i[related.inputID]}>\n                    {i[related.inputValue]}\n                  </option>\n\n                )}\n\n              </SelectField>\n\n            )\n\n\n          case \"text\":\n            return (\n              <>\n                <TextBox title={related.label} name={related.dataField} fieldChanged={handleChange} />\n              </>\n            )\n\n          case \"currency\":\n            return (\n\n              <TextBox title={related.label} addOn=\"currency\" name={related.dataField} fieldChanged={handleChange} />\n\n            )\n\n          case \"text-area\":\n            return (\n\n              <TextArea title={related.label} name={related.dataField} fieldChanged={handleChange} />\n\n            )\n\n          case \"datepicker\":\n            return (\n              <TextBox\n                id=\"datetime-local\"\n                title={related.label}\n                type=\"date\"\n                name={related.dataField}\n                className=\"input is-rounded is-small\"\n                value={related && relatedData[related.dataField]}\n                fieldChanged={(e)=>handleChange(e)}\n              />\n            )\n        }\n      }\n      )}\n    </>  \n  )\n}\nexport default RelatedPageInputFields","import React, { useState } from 'react'\r\nimport { doc, deleteDoc } from 'firebase/firestore'\r\nimport { FaTrash } from 'react-icons/fa'\r\nimport { db } from '../../Contexts/firebase'\r\nimport {useRefreshDataHook} from '../../Hooks/useRefreshDataHook'\r\n\r\nconst DeleteButtonFooter = (props) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false)\r\n  const {isModule, id, handleClose} = props\r\n  const {refreshModule} = useRefreshDataHook(isModule)\r\n\r\n  const handleClick = async() => {\r\n    try {\r\n    await deleteDoc(doc(db, isModule, id))\r\n    console.log(\"Successfully deleted document\")\r\n    refreshModule(isModule)\r\n    autoClose()\r\n    } catch {\r\n      console.log(\"Error deleting document\")\r\n    } \r\n  }\r\n\r\n  const autoClose = () => {\r\n\r\n    setTimeout(() =>  \r\n      handleClose()\r\n    , 1500 )\r\n\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div \r\n        className={toggle === true ? \r\n          \"dropdown is-up is-active is-mobile\" : \"dropdown is-up\"}\r\n        onClick={()=>setToggle(!toggle)}\r\n      >\r\n        <div className=\"dropdown-trigger navbar-item\" onClick={()=> {setToggle(!toggle)}}>\r\n        \r\n        <FaTrash className={toggle === true ? \"icon is-normal\" : \"icon is-normal is-link\"} />\r\n        \r\n        </div>\r\n\r\n        <div className={toggle === true ? \"dropdown-menu\" : \"is-hidden\"}>\r\n          <div className=\"dropdown-content\">\r\n\r\n          <div className=\"dropdown-item\">\r\n\r\n            <a className=\"button is-rounded is-danger mr-2\" onClick={()=>{handleClick()}}>\r\n              Yes Delete\r\n            </a>\r\n\r\n            <a className=\"delete is-small ml-3\" onClick={()=>{setToggle(false)}} /> \r\n\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\nexport default DeleteButtonFooter","import React, { useState, useEffect } from 'react'\r\nimport { FaBookmark, FaRegBookmark } from 'react-icons/fa'\r\nimport { db, fire } from '../../Contexts/firebase'\r\n\r\nconst AddBookmarkFooter = (props) => {\r\n\r\n  const {isModule, id, isBookmarked} = props\r\n\r\n  const {doc, updateDoc} = fire\r\n\r\n  const [ toggle, setToggle ] = useState()\r\n  \r\n  useEffect(() => {\r\n    props.isBookmarked === true ? setToggle(true) : setToggle(false)\r\n  },[isBookmarked])\r\n\r\n  const handleClick = async() => {\r\n    const docData = {\r\n      ['isBookmarked']: !isBookmarked\r\n    }\r\n    const docRef = doc(db, isModule, id)\r\n    try {\r\n      await updateDoc(docRef, docData)\r\n      console.log(\"Successfully bookmarked document\")\r\n      setToggle(!toggle)\r\n    } catch {\r\n      console.log(\"Error bookmarking document\")\r\n    } \r\n  }\r\n\r\n  const autoClose = () => {\r\n    setTimeout(() =>  \r\n      handleClose(), 1500 \r\n    )\r\n  }\r\n  \r\n  return(\r\n    <>\r\n          <div className=\"navbar-item\" onClick={()=>handleClick()}>\r\n            <FaBookmark className={toggle != true ? \"is-hidden\" : \"icon is-normal\"} />\r\n            <FaRegBookmark className={toggle === undefined || toggle === false ? \"icon is-normal\" : \"is-hidden\"} />\r\n          </div>\r\n    </>\r\n  )\r\n}\r\nexport default AddBookmarkFooter","import React, { useState } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { FaRegStickyNote, FaStickyNote } from 'react-icons/fa'\r\nimport { db } from '../../Contexts/firebase'\r\n\r\nconst AddNoteButtonFooter = () => {\r\n\r\n  const {isModule, id} = useParams()\r\n  const history = useNavigate()\r\n  const [ toggle, setToggle ] = useState(false)\r\n\r\n  const handleClick = async() => {\r\n    \r\n    try {\r\n\r\n    const res = await db.collection(isModule).doc(id).delete()\r\n    console.log(res)\r\n    \r\n    autoClose()\r\n\r\n    } catch {\r\n\r\n      console.log(\"Error Deleting Record\")\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  const autoClose = () => {\r\n\r\n    setTimeout(() => { \r\n      navigate(\"/dashboard\") \r\n    }, 1500 )\r\n\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div \r\n        className={toggle === true ? \r\n          \"dropdown is-up is-active is-mobile\" : \"dropdown is-up\"}\r\n        onClick={()=>setToggle(!toggle)}\r\n      >\r\n        <div className=\"dropdown-trigger navbar-item\" onClick={()=> {setToggle(!toggle)}}>\r\n        \r\n          <FaStickyNote className={toggle === true ? \"icon is-normal\" : \"is-hidden\"}  />\r\n          <FaRegStickyNote className={toggle === false ? \"icon is-normal\" : \"is-hidden\"} />\r\n        \r\n        </div>\r\n\r\n        <div className={toggle === true ? \"dropdown-menu \" : \"is-hidden\"}>\r\n          <div className=\"dropdown-content\">\r\n\r\n          <div className=\"dropdown-item \">\r\n\r\n            <a className=\"button is-small is-rounded is-danger mr-2\" onClick={()=>{handleClick()}}>\r\n              Yes Delete\r\n            </a>\r\n\r\n            <a className=\"button is-small is-rounded is-light\" onClick={()=>{setToggle(false)}}>\r\n              No Cancel\r\n            </a>\r\n\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\nexport default AddNoteButtonFooter","import React, { useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { FaPencilAlt } from 'react-icons/fa'\n\n\nconst EditButtonFooter = ({handleClick, isDrawerOpen}) => {\n\n  const {isModule, id} = useParams()\n  const navigate = useNavigate()\n  \n  \n\n  return(\n    <>\n      \n       <div className=\"navbar-item\" onClick={()=>handleClick(!isDrawerOpen)}>\n        \n        <FaPencilAlt className={isDrawerOpen === true ? \"icon is-normal\" : \"icon is-normal is-link\"}  />\n        \n        </div>\n\n        \n\n    </>\n  )\n}\nexport default EditButtonFooter","import React, { useState, useEffect } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { FaTags } from 'react-icons/fa'\r\nimport { db } from '../../Contexts/firebase'\r\nimport TextBox from '../Forms/TextBox'\r\n\r\nconst AddTagButtonFooter = (props) => {\r\n  const values = props.values\r\n  \r\n  \r\n  const navigate = useNavigate()\r\n  const [ toggle, setToggle ] = useState(false)\r\n  const [tags, setTags] = useState(\"\")\r\n  const [addTag, setAddTag] = useState(\"\")\r\n  const [tagValue, setTagValue] = useState(\"\")\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    setAddTag(values)\r\n    setTags(values)\r\n  },[values])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setAddTag(\"\")\r\n    }\r\n  },[props.handleUpdated])\r\n\r\n  const handleClick = async(props) => {\r\n    \r\n    try {\r\n\r\n    const res = await db.collection(props.isModule).doc(props.id).update({'Tags': [...addTag]})\r\n    \r\n    setToggle(false)\r\n    props.handleUpdated()\r\n    setTagValue(\"\")\r\n    \r\n    } catch {\r\n\r\n      console.log(\"Error Adding Tag to Record\")\r\n\r\n    }\r\n  \r\n  }\r\n\r\n  const handleDelete = async(e) => {\r\n    const updateTags = tags.splice(e, 1)\r\n    try {\r\n\r\n      const res = await db.collection(props.isModule).doc(props.id).update({'Tags': [...tags]})\r\n      \r\n      setToggle(false)\r\n      props.handleUpdated()\r\n      setTagValue(\"\")\r\n      } catch {\r\n  \r\n        console.log(\"Error Deleting Tag to Record\")\r\n  \r\n      }\r\n    \r\n    }\r\n    \r\n  \r\n\r\n  const handleChange = ({value}) => {\r\n    const newTag = value\r\n    tags != undefined ?\r\n    (\r\n      setAddTag([newTag, ...tags]),\r\n      setTagValue(value)\r\n    )\r\n    : (\r\n      setAddTag([newTag]),\r\n      setTagValue(value)\r\n      )\r\n  } \r\n\r\n  \r\n\r\n  return(\r\n    <>\r\n      <div \r\n        className={toggle === true ? \r\n          \"dropdown is-up is-right is-active is-mobile\" : \"dropdown is-up\"}\r\n        \r\n      >\r\n        <div className=\"dropdown-trigger navbar-item\" onClick={()=> setToggle(!toggle)}>\r\n        \r\n          <FaTags className=\"icon is-normal\" onClick={()=> setToggle(!toggle)} />\r\n        \r\n        </div>\r\n\r\n        <div className={toggle === true ? \"dropdown-menu \" : \"is-hidden\"}>\r\n          <div className=\"dropdown-content\">\r\n\r\n          <div className=\"dropdown-item \">\r\n            <ul>\r\n            {tags && tags != undefined ? tags.map((tag, index) => \r\n              \r\n              <li className=\"tag is-info is-light is-rounded mr-1\" key={index}>{tag && tag} <button className=\"delete is-small\" onClick={()=>handleDelete({index})}>x</button></li>\r\n            \r\n          ) : \"\"}\r\n            </ul>\r\n\r\n            <TextBox \r\n              label=\"Tag:\"\r\n              fieldChanged={(e)=>handleChange(e.target)}\r\n              value={tagValue}\r\n            />\r\n            <button type=\"submit\" className=\"button is-rounded is-link\" onClick={()=>handleClick(props)}>Add</button>\r\n\r\n\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\nexport default AddTagButtonFooter","import React, { useEffect, useState, useContext } from 'react'\nimport { db, fire, store } from '../../Contexts/firebase'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { FaPaperclip } from 'react-icons/fa'\n\nimport { stateContext } from '../../Contexts/stateContext'\n\nconst AddDocButtonFooter = () => {\n  \n  const userContext = useContext(stateContext)\n  const {setCurrentDate} = userContext\n  const {currentCompany, currentCompanyID, currentUser} = userContext.userSession\n  const {\n    collection, \n    query, \n    where, \n    getDocs, \n    getDoc, \n    addDoc, \n    updateDoc, \n    doc,\n    arrayUnion,\n    arrayRemove\n  } = fire\n  const {isModule, id} = useParams()\n  const navigate = useNavigate()\n  const [ toggle, setToggle ] = useState(false)\n  const [docs, setDocs] = useState(\"\")\n  const [newDocData, setNewDocData] = useState(\"\")\n\n  useEffect(() => {\n    fetchDocs()\n  },[])\n  \n  const fetchDocs = async(isModule, id) => {\n    const q = query(collection(db, \"Attachments\"),\n    where(`${isModule}ID`, \"==\", `${id}`))\n    const attachmentRef = await getDocs(q)\n    const attachments = attachmentRef.docs.map(doc => ({\n      id: doc.id, \n      ...doc.data()\n    }))\n    console.log('Fetched Locations')\n    setDocs(attachments)\n  }\n\n  const handleClick = async() => {\n    \n    try {\n      await addDoc(collection(db, isModule), data) \n     await db.collection(\"Attachments\").doc().set(newDocData)\n    \n    setToggle(false)\n\n    } catch {\n\n      console.log(\"Error Adding Document\")\n\n    }\n    \n  }\n\n  const handleDelete = async(docID) => {\n    \n    try {\n\n    \n    console.log(res)\n    \n    setToggle(false)\n\n    } catch {\n\n      console.log(\"Error Deleting Document\")\n\n    } finally {\n\n      fetchDocs()\n\n    }\n    \n  }\n\n  const handleFileChange = async(e) => {\n    const file = e.target.files[0]\n    const imageRef = store.ref(currentCompanyID).child(`${isModule}'-'${id}'-'${currentCompany}`)\n    await imageRef.put(file)\n    const fileURL = await imageRef.getDownloadURL()\n    try {\n\n      await db.collection(\"Attachments\").doc().set({\n        ['CompanyName']: currentCompany,\n        ['CompanyID']: currentCompanyID,\n        [`${isModule}ID`]: id,\n        ['AttachedDate']: setCurrentDate(),\n        ['AttachedBy']: currentUser,\n        ['FileURL']: fileURL\n       })\n     \n     setToggle(false)\n \n     } catch {\n \n       console.log(\"Error Adding Document\")\n \n     } finally {\n\n       fetchDocs()\n\n     }\n     \n  }\n  \n  return(\n    <>\n      <div \n        className={toggle === true ? \n          \"dropdown is-up is-right is-active is-mobile\" : \"dropdown is-up\"}\n      >\n        <div className=\"dropdown-trigger navbar-item\" onClick={()=> setToggle(!toggle)}>\n        \n          <FaPaperclip className=\"icon is-normal\" onClick={()=> setToggle(!toggle)} />\n        \n        </div>\n\n        <div className={toggle === true ? \"dropdown-menu \" : \"is-hidden\"}>\n          <div className=\"dropdown-content\">\n\n          <div className=\"dropdown-item \">\n            <ul>\n            {docs && docs != undefined ? docs.map((file, index) => \n              \n              <li className=\"tag is-info is-light is-rounded mr-1 mb-1\" key={index}><a target=\"_blank\" href={file.FileURL}>{file.AttachedDate && file.AttachedDate}</a> <button className=\"delete is-small\" onClick={()=>handleDelete(file.id)}>x</button></li>\n            \n          ) : \"\"}\n            </ul>\n<hr />\n            <div className=\"field\">\n              <div className=\"control\">\n              <div className=\"file is-small is-link\">\n                <label className=\"file-label\">\n                  <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={(e) => handleFileChange(e)} />\n                  <span className=\"file-cta\">\n                    <span className=\"file-icon\">\n                      <i className=\"faUpload\"></i>\n                    </span>\n                    <span className=\"file-label\">Choose a file...</span>\n                  </span>\n                </label>\n              </div>\n              </div>\n          </div>\n            \n\n\n          </div>\n          \n        </div>\n        </div>\n      </div>\n    \n    </>\n    \n  )\n}\nexport default AddDocButtonFooter","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport DeleteButtonFooter from './Components/Navs/DeleteButtonFooter'\nimport AddBookmarkFooter from './Components/Navs/AddBookmarkFooter'\nimport AddNoteButtonFooter from './Components/Navs/AddNoteButtonFooter'\nimport EditButtonFooter from './Components/Navs/EditButtonFooter'\nimport AddTagButtonFooter from './Components/Navs/AddTagButtonFooter'\nimport AddDocButtonFooter from './Components/Navs/AddDocButtonFooter'\n\n\n\nconst Footer = (props) => {\n\n  const {handleEditButton, isDrawerOpen, isBookmarked, tags, isModule, id, handleClose} = props\n  \n  return(\n    <>\n    <nav className=\"navbar footerblur is-fixed-bottom is-active\">\n    <div className=\"navbar-menu footer-menu\">\n    \n      <div className=\"navbar-menu is-justify-content-center is-relative footer-menu\">\n      <div className=\"navbar-item is-inline-block-touch pl-4 pr-4\">\n          <EditButtonFooter \n            handleClick={handleEditButton}\n            isDrawerOpen={isDrawerOpen}\n          />\n        </div>\n        <div className=\"navbar-item is-inline-block-touch pl-4 pr-4\">\n          <AddBookmarkFooter \n            isBookmarked={isBookmarked}\n            id={id}\n            isModule={isModule}\n            handleClose={()=>handleClose()}\n          />\n        </div>\n        <div className=\"navbar-item is-inline-block-touch pl-4 pr-4 is-hidden\">\n          <AddNoteButtonFooter />\n        </div>\n        <div className=\"navbar-item is-inline-block-touch pl-4 pr-4\">\n          <AddDocButtonFooter />\n        </div>\n        <div className=\"navbar-item is-inline-block-touch pl-4 pr-4\">\n          <AddTagButtonFooter \n            values={tags}\n            handleUpdated={props.handleUpdated}\n            isModule={isModule}\n            id={id}\n          />\n        </div>\n        <div className=\"navbar-item is-inline-block-touch pl-4 pr-4\">\n          <DeleteButtonFooter \n            isModule={isModule}\n            id={id}\n            handleClose={()=>handleClose()}\n          />\n        </div>\n      </div>\n      </div>\n    \n    </nav>\n    </>\n  )\n}\nexport default Footer","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { stateContext } from '../Contexts/stateContext'\nimport { db, fire, store } from '../Contexts/firebase'\nimport { fieldContext } from '../Contexts/fieldContext'\nimport { fieldsServices } from '../Contexts/initialFieldContext'\nimport { useRefreshDataHook } from '../Hooks/useRefreshDataHook'\nimport { useLoading } from '../Hooks/useLoading'\nimport Columns from '../Components/Layout/Columns'\nimport Column from '../Components/Layout/Column'\nimport DrawerPage from '../Components/DrawerPage'\nimport DrawerComponent from '../Components/Layout/DrawerComponent'\nimport Loading from '../Components/Loading'\nimport PageField from '../Components/Layout/PageField'\nimport PageField2 from '../Components/Layout/PageField2'\nimport TabBar from '../Components/Tabs/TabBar'\nimport Tab from '../Components/Tabs/Tab'\nimport RelatedFieldDropDown from '../Components/Tabs/DetailViewDropDown'\n\nimport PageInputFields from '../Components/Forms/PageInputFields'\nimport RelatedPageInputFields from '../Components/Forms/RelatedPageInputFields'\nimport Footer from '../Footer'\n\nconst DetailDrawer = (props) => {\n  \n  const { isModule, id, handleRelatedClick, isDetailDrawerOpen } = props && props || null\n\n  const userContext = useContext(stateContext)\n  const {\n    collection, \n    query, \n    where, \n    getDocs, \n    getDoc, \n    addDoc, \n    updateDoc, \n    setDoc,\n    doc,\n    ref,\n    uploadBytes,\n    getDownloadURL,\n    arrayUnion,\n    arrayRemove\n  } = fire\n\n  const { \n    serviceTypes, \n    accessTypes, \n    vendorList, \n    isStyle,\n    setBills,\n    setOrders,\n    setCurrentDate,\n    setLocations,\n    setAccounts,\n    setServices,\n    setUsers,\n    setNotes,\n    setCurrentModule,\n    setCurrentDocID,\n    refreshServices \n  } = userContext\n\n  const { \n    locations,\n    services, \n    orders, \n    accounts,\n    tickets,\n    contracts,\n    users,\n    bills,\n    notes,\n    currentCompany,\n    currentCompanyID,\n    currentUser,\n    currentModule,\n    currentDocID, \n  } = userContext.userSession\n\n  const {\n    serviceDetailFields,\n    orderDetailFields,\n    accountDetailFields,\n    ticketDetailFields,\n    billsDetailFields,\n    eventDetailFields,\n    locationDetailFields,\n    contractDetailFields,\n    userDetailFields,\n    core\n  } = useContext(fieldContext)\n\n  const [tab, setTab] = useState(\"Essentials\")\n  const [data, setData] = useState(\"\")\n  const [active, setActive] = useState(\"\")\n  const [activeSubtitle, setActiveSubtitle] = useState(\"\")\n  const [docIsNew, setDocIsNew] = useState()\n  \n  const [updated, setUpdated] = useState(false)\n\n  const [pageFields, setPageFields] = useState([])\n  \n  const [pageSuccess, setPageSuccess] = useState(false)\n  const [pageError, setPageError] = useState(false)\n  \n  const [isRelatedActive, setIsRelatedActive] = useState(false)\n  const [addRelatedValue, setAddRelatedValue] = useState()\n  const [relatedInputData, setRelatedInputData] = useState(\"\")\n  const [relatedSubmitData, setRelatedSubmitData] = useState(\"\")\n\n  const [isRelatedDrawerOpen, setIsRelatedDrawerOpen] = useState(false)\n  const [isArrayMapDrawerOpen, setIsArrayMapDrawerOpen] = useState(false)\n  const [isArrayMapInputData, setIsArrayMapInputData] = useState(\"\")\n  const [isArrayMapData, setIsArrayMapData] = useState(\"\")\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n  \n  const {refreshModule} = useRefreshDataHook(currentModule)\n  const [loading, toggleLoading] = useLoading(true)\n  \n  useEffect(() => {\n    \n    toggleLoading(true)\n    handlePageFields(isModule)\n    checkForNew(props.isDrawerActive, props.isNew)\n    props.isNew === false ? fetchPage(isModule, id) : \"\"\n    props.isNew === false ? fetchBills() : \"\"\n    props.isNew === false ? fetchNotes() : \"\"\n     \n  }, [])\n\n  /* useEffect(() => {\n\n    toggleLoading(true)\n    setPageFields(isModule)\n    checkForNew(props.isDrawerActive, props.isNew)\n    handlePageFields(isModule)\n    props.isNew === false ? fetchPage(isModule, id) : \"\"\n    props.isNew === false ? fetchBills() : \"\"\n    props.isNew === false ? fetchNotes() : \"\"\n    \n  }, [isModule]) */\n\n  useEffect(() => {\n    \n    handlePageFields(isModule)\n    props.isNew === false ? fetchPage(isModule, id) : \"\"\n    props.isNew === false ? fetchBills() : \"\"\n    props.isNew === false ? fetchNotes() : \"\"\n    handleSetHeader()\n    setUpdated(false)\n    handleInitialFields()\n    handleFinishedLoading()\n    \n  },[loading])\n\n  useEffect(() => {\n    updated != false ? handleUpdated() : \"\"\n  },[updated])\n  \n  const [coreFields] = core?.filter(f=> f.id === isModule).map(c => c.fields)\nconsole.log('coreFields', coreFields)\n/** Map-List - Side Effect to inherit related data  */\n\n  useEffect(() => {\n    console.log(relatedInputData)\n    relatedInputData.pageFields && relatedInputData.pageFields ? \n    handleInheritedData(relatedInputData) : \"\"\n\n  },[relatedInputData])\n\n/** Set Page Fields based on initialFields */\n  const handlePageFields = (isModule) => {\n    \n    switch (isModule) {\n      case \"Services\": \n        return (\n          setPageFields(serviceDetailFields) \n        )\n      case \"Accounts\":\n        return (\n          setPageFields(accountDetailFields)\n        )\n      case \"Orders\":\n        return (\n          setPageFields(orderDetailFields)\n        )\n      case \"Tickets\":\n        return (\n          setPageFields(ticketDetailFields)\n        )\n      case \"Locations\":\n        return (\n          setPageFields(locationDetailFields)\n        )\n      case \"Contracts\":\n        return (\n          setPageFields(contractDetailFields)\n        )\n      case \"Bills\":\n        return (\n          setPageFields(billsDetailFields)\n        )\n      case \"Notes\": \n        return (\n          setPageFields(notesDetailFields)\n        )\n      case \"Users\":\n        return (\n          setPageFields(userDetailFields)\n        )\n      case \"Events\":\n        return (\n          setPageFields(eventDetailFields)\n        )\n    }\n  }\n\n  const checkForNew = (isDrawerActive, isNew) => {\n    isDrawerActive === true ? setIsDrawerOpen(true) : \"\"\n    isNew === true ? setDocIsNew(true) : \"\"\n\n  }\n\n  const handleInitialFields = () => {\n    \n    setData({\n      ...data, \n      ['CreatedDate']: setCurrentDate(),\n      ['CreatedBy']: currentUser,\n      ['CompanyID']: currentCompanyID, \n      ['CompanyName']: currentCompany\n    }) \n\n  }\n\n  const handleNewServiceFields = () => {\n\n    const fields = fieldsServices.map(field => {\n      switch(field.key) {\n        case 'LocationName':\n          return({\n            ...field,\n            ['value']: data.LocationName || '',\n            ['ref']: {\n                ...field.ref,\n                ...{'value': data.LocationID || ''}\n              }\n          })\n        case 'Vendor':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.Vendor || ''}\n            }\n          })\n        case 'Type':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.Type || ''}\n            }\n          }\n          )\n        case 'VendorServiceName':\n          return({\n            ...field,\n            ['value']: data.VendorServiceName || '',\n          })\n        case 'AccessType':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.AccessType || ''}\n            }\n          })\n        case 'AssetID':\n          return({\n            ...field,\n            ['value']: data.AssetID || '',\n           })\n        case 'Bandwidth':\n          return({\n            ...field,\n            ['value']: data.Bandwidth || '',\n          })\n        case 'MRC':\n          return({\n            ...field,\n            ['value']: data.MRC || '',\n          })\n        case 'Status':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.Status || ''}\n            }\n          })\n        case 'StartDate':\n          return({\n            ...field,\n            ['value']: data.StartDate || '',\n          })\n        case 'LastMile':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.LastMile || ''}\n            }\n          })\n        case 'LECCircuitID':\n          return({\n            ...field,\n            ['value']: data.LECCircuitID || '',\n          })\n        case 'DemarcInfo':\n          return({\n            ...field,\n            ['value']: data.DemarcInfo || '',\n          })\n        case 'Account':\n          return({\n            ...field,\n            ['value']: data.AccountID || '',\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.id || ''}\n            }\n          })\n        case 'SubAccountNum':\n          return({\n            ...field,\n            ['value']: data.SubAccountNum || '',\n          })\n        case 'GroupNum':\n          return({\n            ...field,\n            ['value']: data.GroupNum || '',\n          })\n        case 'Tickets':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.id || ''}\n            }\n          })\n        case 'Notes':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.id || ''}\n            }\n          })\n        case 'Attachments':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.id || ''}\n            }\n          })\n        case 'Events':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.id || ''}\n            }\n          })\n        case 'Location':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': data.id || ''}\n            }\n          })\n        case 'IPDetails':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': [...data.IPAssignments || '']}\n            }\n          })\n        case 'Tags':\n          return({\n            ...field,\n            ['ref']: {\n              ...field.ref,\n              ...{'value': [...data.Tags || '']}\n            }\n          })  \n      }\n    })\n    \n  console.log('data', data)\n  const mergeFields = [...fields]\n    setData({\n      ...data, \n      ['fields']: fields\n    }) \n  }\n\n  const handleSubmitUpdatedFields = async() => {\n    const docData = {\n      ...data\n    }\n\n    const docRef = doc(db, isModule, id)\n\n      try {\n        \n        await updateDoc(docRef, docData)\n        \n        console.log(\"Successfully updated document\")\n        \n      } catch {\n\n        console.log(\"Error updating document\")\n\n      } \n\n  }\n\n\n\n  const handleFinishedLoading = () => {\n\n    setTimeout(() => {\n      toggleLoading(false)\n    }, 2500)\n\n  }\n\n  const handleSetHeader = () => {\n\n    const subtitle = pageFields.filter(f => f.isHeader === true).map(field => setActiveSubtitle(field.dataField))\n\n  }\n\n  const handleUpdated = () => {\n    toggleLoading(true)\n    refreshModule(isModule)\n    setUpdated(false)\n    handleFinishedLoading()\n  }\n\n/** Map inputSource arrays for initialFields \n  const handleInitialFieldMapping = (field, value, arr) => {\n\n    const indexRef = arr.findIndex(i => i.dataField === field)\n    arr[indexRef] = {...arr[indexRef], inputSource: value}\n  \n  }\n\n  */\n\n/** Fetch Document from Firebase */  \n  console.log(data)\nconst fetchPage = async(isModule, id) => {\n      \n  const docRef = doc(db, isModule, id)\n  const docSnap = await getDoc(docRef) \n  console.log(docSnap)\n  const docData = docSnap.data()\n  const docID = docSnap.id\n  setActive({id: docID, ...docData})\n  setData(docData)\n  \n}\n\n  const fetchBills = async() => {\n\n    const q = query(collection(db, \"Bills\"), where(\"ServiceID\", \"==\", props.id))\n    const billsRef = await getDocs(q)\n    const bills = await billsRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setBills(bills)\n\n  } \n\n  const fetchOrders = async() => {\n\n    const q = query(collection(db, \"Orders\"), where(\"ServiceID\", \"==\", props.id))\n    const ordersRef = await getDocs(q)\n    const orders = await ordersRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setOrders(orders)\n\n  } \n  \n  const fetchNotes = async() => {\n\n    const q = query(collection(db, \"Notes\"), where(\"ServiceID\", \"==\", props.id))\n    const notesRef = await getDocs(q)\n    const notes = await notesRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setNotes(notes)\n\n  } \n\n  const handleFileChange = async(e) => {\n\n    const file = e.target.files[0]\n    \n    const imageRef = ref(store, `${currentCompany}/${currentCompanyID} - ${data.Name && data.Name }`)\n    await uploadBytes(imageRef, file)\n    const fileURL = await getDownloadURL(imageRef)\n     setData({\n       ...data,\n       ['FileURL']: fileURL\n      })\n\n  }  \n\n  const handleSubmit = () => {\n      \n      docIsNew === true ? \n      handleSubmitNew(data) : \n      handleSubmitUpdated(data)\n        \n  }\n\n  const handleSubmitNew = async(data) => {\n    \n    try {\n\n      await addDoc(collection(db, isModule), data) \n      console.log(\"Changes Saved!\")\n      setTimeout(() => {setPageSuccess(false)}, 1000)\n\n    } catch {\n\n      console.log(\"Error saving\")\n      setTimeout(() => {setPageError(false)}, 1000)\n\n    } \n    \n    setUpdated(true)\n    setIsDrawerOpen(!isDrawerOpen)\n\n  }\n\n  const handleSubmitUpdated = async() => { \n\n    const docData = {\n      ...data, \n      ['LastUpdated']: setCurrentDate(), \n      ['LastUpdateBy']: currentUser\n    }\n\n    const docRef = doc(db, isModule, id)\n\n      try {\n        \n        await updateDoc(docRef, docData)\n        \n        console.log(\"Successfully updated document\")\n        \n      } catch {\n\n        console.log(\"Error updating document\")\n\n      } \n\n      setDocIsNew(false) \n      setUpdated(true)\n      setIsDrawerOpen(false)\n      setIsArrayMapDrawerOpen(false)\n\n  }\n\n  const handleRelatedSubmit = async() => {\n    const colRef = relatedInputData.collection\n    const docData = {...relatedSubmitData}\n    \n\n    try {\n\n      await addDoc(collection(db, relatedInputData.collection), docData)\n      console.log(`Successfully saved new ${relatedInputData.label}`)\n\n    } catch {\n\n      console.log(`Error saving new ${relatedInputData.label}`)\n      \n    }  \n\n      setIsRelatedDrawerOpen(!isRelatedDrawerOpen)\n      refreshModule(relatedInputData.collection)\n      setUpdated(true) \n\n  }\n\nconst handleToggle = () => {\n\n  setIsDrawerOpen(!isDrawerOpen)\n\n}\n\nconst handleChange = (e) => {\n  e.preventDefault()\n  const {name, value} = e.target\n  console.log(name, value)\n  setActive({...active, [name]: value})\n  setData({...data, [name]: value})\n\n}\n\nconst handleRelatedSelectChange = (e, relatedDataField) => {\n\n  e.preventDefault()\n  const selectedValue = e.target.options[e.target.selectedIndex].text\n  const id = e.target.options[e.target.selectedIndex].id\n  const {name, relatedName} = relatedDataField\n  const {value} = e.target\n  \n  console.log({[relatedName]: id, [name]: value})\n  setActive({...active, [relatedName]: id, [name]: value})\n  setData({...data, [relatedName]: id, [name]: value})\n\n}\n\nconst handleClick = (e) => {\n  handleRelatedClick(e)\n}\n\nconst handleArrayMapDrawer = (field) => {\n  \n  setIsArrayMapInputData({  \n    pageFields: field.relatedInputFields, \n    dataField: field.dataField,\n    label: field.label,\n    key: field.key\n  })\n\nsetIsArrayMapDrawerOpen(true)\n  \n}\n\nconst handleArrayMapChange = (e) => {\n\n  e.preventDefault()\n  const {name, value} = e.target\n  const mapFieldName = isArrayMapInputData.dataField\n  setIsArrayMapData({...isArrayMapData, [name]: value})\n\n}\n\nconst handleArrayMapDelete = (e, arr, field) => {\n  \n  setIsArrayMapInputData({  \n    pageFields: field.relatedInputFields, \n    dataField: field.dataField,\n    label: field.label\n  })\n\n  const deleteRef = data[field.dataField].splice(e, 1)\n\n    try {\n        handleSubmitUpdated()\n      } catch {\n        console.log(\"Error Deleting Item\")\n      }\n\n}\n\nconst handleArrayMapSubmit = async() => {\n  \n  console.log('isArrayMapData', isArrayMapData, 'data:', data)\n  const docData = data[isArrayMapInputData.dataField] != undefined ? {\n    ...data, \n    [isArrayMapInputData.dataField]: [\n      {...isArrayMapData},\n      ...data[isArrayMapInputData.dataField]\n    ],\n    ['LastUpdated']: setCurrentDate(), \n    ['LastUpdateBy']: currentUser\n  } : {\n    ...data, \n    [isArrayMapInputData.dataField]: [\n      {...isArrayMapData}\n    ],\n    ['LastUpdated']: setCurrentDate(), \n    ['LastUpdateBy']: currentUser\n  }\n  try {\n    console.log(\"Submitting Array Data:\", data)\n    const docRef = doc(db, isModule, id)\n    await updateDoc(docRef, docData)\n  } catch {\n    console.log(\"Error Submitting Array Data\")\n  }\n  setIsArrayMapData()\n  setIsArrayMapDrawerOpen(false)\n  setUpdated(true)\n}\n\nconst handleRelatedDrawer = (field) => {\n\n  setRelatedInputData({ \n    ...relatedInputData,\n    collection: field.relatedCollection, \n    pageFields: field.relatedInputFields, \n    label: field.label\n  })\n\n  setRelatedSubmitData({\n    [ 'CompanyID' ]: currentCompanyID,\n    [ 'CompanyName' ]: currentCompany,\n    [ 'CreatedDate' ]: setCurrentDate(),\n    [ 'CreatedBy' ]: currentUser,\n    [field.relatedDataField]: props.id,\n  })\n\nsetIsRelatedDrawerOpen(true)\n  \n}\n\nconst handleRelatedInputChange = (e) => {\n  \n  const { name, value } = e.target\n  setRelatedSubmitData({\n    ...relatedSubmitData,\n      [name]: value,\n    })\n\n}\n\nconst handleInheritedData = (e) => {\n\n  const {pageFields} = e \n  const relatedFields = pageFields.filter(f => \n    f.value != undefined).map(rel => ({\n      [rel.dataField]:\n      active[rel.value]\n    })\n  )\n  \n  const merged = Object.assign({}, ...relatedFields, relatedSubmitData)\n\n  setRelatedSubmitData({...relatedSubmitData, ...merged})\n\n  }\n\n  const handleDocRelations = async(field) => {\n    \n    console.log('data', data, 'active', active)\n    try {\n\n      await addDoc(collection(db, field.helperCollection), {\n        [field.dataField]: active.id || \"\",\n        [field.relatedCollection]: [\n          doc(db, `${field.relatedCollection}/XigoVEm5Z0SgkjOlLv8t`)\n        ]\n      })\n\n      console.log(`Successfully saved new related data`)\n\n    } catch {\n\n      console.log(`Error saving new related data`)\n      \n    }  \n  }\n\nreturn (\n\n    <Loading active={loading}>\n\n    <DrawerPage>\n      {userContext && userContext.userSession != undefined ? \n        <> \n          <TabBar>\n            <Tab \n              data={pageFields}\n              active={tab}\n              handleClick={(e)=>setTab(e)}\n            />\n          </TabBar>\n\n          <div className=\"box is-rounded\" style={{minHeight: '50vh'}}>\n\n            <article className=\"hero title is-small\"> \n              <span className=\"subtitle is-5\">{isModule}</span>\n              <span className=\"title is-3\">\n                {[active].map(item => item[activeSubtitle] && item[activeSubtitle])}\n              </span>\n            </article>\n              <div className=\"block\">\n                {/** Refactor as ViewPageFields Component */}\n                {active && coreFields.map(field => \n                  <>\n                    {[active].map(docItem => \n                      \n                      <div className={field.visible != false & field?.params?.tab === tab ? \"\" : \"is-hidden\" }> \n                      <hr className={field.hasBreakBefore === true ? \"\" : \"is-hidden\"} />\n                      \n                        <Columns options=\"is-mobile\">\n                          <Column size=\"pl-3 pr-3\">\n                            <PageField2 \n                              loading={loading}\n                              field={field}\n                              fieldData={docItem}\n                              relatedDataMap={\n                                field.inputSource && field.inputSource.filter(item => \n                                item[field.relatedDataField] === docItem.id).map(i => ({...i}))\n                              }\n                              toggleViewDrawer={()=>handleToggle()}\n                              isViewRelatedActive={isRelatedActive}\n                              handleClick={(e)=>handleClick(e)}\n                              handleArrayMapDelete={(e, arr)=>handleArrayMapDelete(e, arr, field)}\n                              handleArrayMapDrawer={(field) => handleArrayMapDrawer(field)}\n                              handleRelatedDrawer={(field) => handleRelatedDrawer(field)}\n                              handleDocRelations={(field) => handleDocRelations(field)}\n                            />\n                          </Column>\n                        </Columns>\n                        \n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n\n              <DrawerComponent \n                title=\"Edit\"\n                checked={isDrawerOpen}\n                handleClose={()=>setIsDrawerOpen(!isDrawerOpen)} \n                direction=\"right\"\n                handleSubmit={()=> handleSubmit()}\n              >\n\n                <PageInputFields \n                  checked={isDrawerOpen}\n                  handleClose={()=>setIsDrawerOpen(!isDrawerOpen)}\n                  handleChange={(e)=> handleChange(e)}\n                  handleRelatedSelectChange={(e, related)=> handleRelatedSelectChange(e, related)}\n                  handleFileChange={(e)=> handleFileChange(e)}\n                  pageFields={pageFields}\n                  active={active}\n                  addRelatedValue={addRelatedValue}\n                  handleAddRelatedValue={(e)=>handleRelatedDrawer(e)}\n                  resetAddRelatedValue={()=>setAddRelatedValue(\"\")}\n                  handleUpdated={()=>setUpdated(!updated)}\n                  currentCompany={currentCompany}\n                  currentCompanyID={currentCompanyID}\n                />\n              </DrawerComponent>\n\n              <DrawerComponent \n                title=\"Add New\"\n                checked={isArrayMapDrawerOpen}\n                handleClose={()=>setIsArrayMapDrawerOpen(!isArrayMapDrawerOpen)} \n                direction=\"right\"\n                handleSubmit={()=> handleArrayMapSubmit()}\n              >\n                <PageInputFields \n                  \n                  handleClose={()=>setIsArrayMapDrawerOpen(!isArrayMapDrawerOpen)}\n                  handleChange={(e)=> handleArrayMapChange(e)}\n                  handleRelatedSelectChange={(e, related)=> handleRelatedSelectChange(e, related)}\n                  handleFileChange={(e)=> handleFileChange(e)}\n                  pageFields={isArrayMapInputData.pageFields}\n                  active={active[isArrayMapInputData.dataField]}\n                  activeValue={isArrayMapInputData.key}\n                  addRelatedValue={addRelatedValue}\n                  handleAddRelatedValue={(e)=>handleRelatedDrawer(e)}\n                  resetAddRelatedValue={()=>setAddRelatedValue(\"\")}\n                  handleUpdated={()=>setUpdated(!updated)}\n                  currentCompany={currentCompany}\n                  currentCompanyID={currentCompanyID}\n                />\n              </DrawerComponent>\n              <DrawerComponent\n                title=\"Add New\"\n                checked={isRelatedDrawerOpen}\n                direction=\"right\"\n                handleClose={()=>setIsRelatedDrawerOpen(!isRelatedDrawerOpen)}\n                handleSubmit={()=>handleRelatedSubmit()}\n              >\n                <RelatedPageInputFields \n                  relatedFields={relatedInputData.pageFields}\n                  handleChange={(e)=>handleRelatedInputChange(e)}\n                  handleRelatedField={(e)=> handleRelatedField(e)}\n                  handleRelatedSelectChange={(e, related)=> handleRelatedSelectChange(e, related)}\n                  handleUpdated={()=>setUpdated(!updated)}\n                  activeData={active}\n                  relatedData={relatedInputData}\n                /> \n              </DrawerComponent>\n\n          </div>\n          <Columns>\n              {/** Refactor this as LastUpdatedComponent Component with Hook */}\n              <Column size=\"is-narrow\">\n                <div className=\"is-size-7 ml-5\" style={{fontVariant: [ 'small-caps' ]}}>\n                  last updated: {active.LastUpdated || ''}\n                </div>\n              </Column>\n              <Column size=\"is-narrow\">\n                <div className=\"is-size-7 ml-5\" style={{fontVariant: [ 'small-caps' ]}}>\n                  updated by: {active.LastUpdateBy || ''} {data.fields != undefined ? 'document version 2.01' : 'document version 1.0'}\n                </div>\n                </Column>\n             \n            </Columns>\n        </> : \n          <div className=\"notification warning\"> No record to display </div>\n      }    \n    </DrawerPage>\n    <Footer \n      handleEditButton={(e)=> setIsDrawerOpen(e)}\n      isDrawerOpen={isDrawerOpen}\n      handleClose={()=>props.setIsDetailDrawerOpen()}\n      isBookmarked={active.isBookmarked}\n      tags={active.Tags}\n      handleUpdated={fetchPage}\n      isModule={props.isModule}\n      id={props.id}\n    />\n    </Loading>\n    \n  )\n}\nexport default DetailDrawer","import React, { useState, useCallback } from 'react'\n\nexport function useLoading(initialValue) {\n  const [loading, setLoading] = useState(initialValue || true)\n  const toggleLoading = (value) => setLoading(value)\n  \n  return [loading, toggleLoading]\n}","import React, { useState, useContext } from 'react'\nimport {stateContext} from '../Contexts/stateContext'\nimport SideDrawer from '../Components/Drawers/SideDrawer'\nimport DetailDrawer from '../Pages/DetailDrawer'\n\nexport function useDrawer() {\n  \n  const [drawers, setDrawers] = useState([])\n  //console.log('Hook:', drawers)\n  const handleClose = (index) => {\n    drawers.splice(index, 1)\n  }\n\n  return {drawers, setDrawers}\n}\n\nconst RenderDrawer = (props) => {\n  const userContext = useContext(stateContext)\n  const {currentModule, currentDocID} = userContext.userSession\n\n    const {drawers, handleAddDrawer, handleClose} = props\n    //console.log('drawer:', drawers, 'currentModule', currentModule)\n    return (\n      drawers.map((drawer, index) => \n        <SideDrawer \n          direction=\"right\" \n          checked={drawer.open && drawer.open} \n          handleClose={() => handleClose(index)}\n          title={drawer.currentCompany && drawer.currentCompany}\n        >\n          <DetailDrawer\n            currentCompanyID={drawer.currentCompanyID}\n            id={currentDocID}\n            isModule={drawer.isModule}\n            handleRelatedClick={(e)=>handleAddDrawer(e)}\n            isNew={false}\n            id={drawer.docID}\n            drawers={drawers}\n            setIsDetailDrawerOpen={\"\"}\n            isDetailDrawerOpen={drawer.open}\n            resetIsNew={\"\"}\n          />\n        </SideDrawer>\n      )\n    )\n  }\n  \nexport default RenderDrawer","import React from 'react'\n\nexport const Table = (props) => {\n  return(\n    <table className={props && `table ${props.params}`}>\n      {props.children}\n    </table>\n  )\n}\n\nexport const TableHead = (props) => {\n  return(\n    <thead className={props && props.params} style={props.style}>\n      {props.children}\n    </thead>\n  )\n}\n\nexport const TableHeadItem = (props) => {\n  return(\n    <th className={props && props.params} style={props.style}>\n      {props.children}\n    </th>\n  )\n}\n\nexport const TableRow = (props) => {\n  return(\n    <tr className={props && props.params} onClick={props.handleRowClick}>\n      {props.children}\n    </tr>\n  )\n}\n\nexport const TableBody = (props) => {\n  return(\n    <tbody className={props && props.params}>\n      {props.children}\n    </tbody>\n  )\n}\n\nexport const TableData = (props) => {\n  return(\n    <td className={props && props.params} style={props.style} onClick={props.handleDataClick}>\n      {props.children}\n    </td>\n  )\n}\n\n","import React, {useState} from 'react'\nimport { useSortHook } from '../../Hooks/useSortHook'\nimport {Table, TableHead, TableHeadItem, TableRow, TableBody, TableData} from '../Tables/Table'\n\nconst GridGroup = ({ data, \n                     isGrid, \n                     headerFields,\n                     mobileHeaderFields,\n                     handleClick,\n                     groupBy\n                     }) => {\n\n  const { sortedArr, setArr } = useSortHook() \n\n  const [gridData, setGridData] = useState()\n\n  const handleSort = (sortBy, colRef) => {\n    setArr({sortBy: sortBy, data: colRef})\n    \n    console.log(sortedArr)\n  }\n\n  const arrGroup = (arr, el) => arr && arr.reduce((acc, item) => {\n    let key = item[el]\n    !acc[key] ? acc[key] = [] :\n    acc[key].push(item)\n    return acc\n  },{})\n\n  const groupedArr = data != undefined ? arrGroup(data, groupBy) : \"\"\n  const groupedKeys = Object.keys(groupedArr)\n  \n\n  return(\n  \n    <> \n      \n\n      <div className=''>\n          {groupBy != \"ALL\" & groupBy != \"Tags\" ? groupedKeys.map((group) => \n            <div className=\"box is-rounded\">\n                <div className=\"columns is-mobile\">     {/**Header */}\n                  <div className=\"column is-narrow\">\n                    <div className=\"is-size-6\">{isGrid && isGrid}</div>\n                    <div className=\"title\">\n                      <strong>{group || \"Not Assigned\"}</strong>\n                    </div>\n                    \n                  </div>\n              </div>\n              \n              <div className=\"table-container \">\n                <Table params=\"table is-hoverable is-fullwidth is-centered\">\n                  <TableHead params=\"is-size-6\">\n\n                  {/**Full Window Header - Not Tags - Not ALL */} \n\n                    <TableRow params=\"is-hidden-touch\">\n                      {group != undefined ? headerFields && headerFields.filter(f => f.visible && f.visible != false).map(col => \n                        <TableHeadItem \n                          params={col.headerName === groupBy ? \"is-hidden\": \"\"} \n                          style={{width: '15%', textAlign: \"left\"}} \n                          key={col.keyProp}\n                        >\n                          {\n                            col.mobile != true ? \n                            <span> \n                              <a onClick={()=> handleSort(col.docField, data)}>\n                                {col.headerName && col.headerName}\n                              </a> \n                            </span> : \n                            <a onClick={()=> handleSort(col.docField, data)}>\n                              {col.headerName && col.headerName} \n                            </a> \n                          }\n                        </TableHeadItem>\n                      ) : \"Not Assigned\"}\n                    </TableRow> \n\n                  {/**Mobile Window Header - Not Tags - Not ALL */} \n\n                    <TableRow params=\"py-7 is-hidden-desktop\">\n                      {group != undefined ? mobileHeaderFields && mobileHeaderFields.map(col => \n                        <TableHeadItem \n                          params={col.headerName === groupBy ? \"is-hidden\": \"\"} \n                          style={{textAlign: \"left\"}} \n                          key={col.keyProp}\n                        >\n                          {\n                            col.mobile != true ? \n                            <a onClick={()=> handleSort(col.docField, data)}>\n                              {col.headerName && col.headerName}\n                            </a> : \n                            <a onClick={()=> handleSort(col.docField, data)}>\n                              {col.headerName && col.headerName}\n                            </a>\n                          }\n                        </TableHeadItem>\n                      ) : \"\"}\n                    </TableRow>\n                  </TableHead>\n\n                {/**Full Window List - Not Tags - Not ALL */} \n\n                <TableBody params=\"is-size-6 is-hidden-touch\">\n                  {data && data != undefined ? data.filter(f=> f[groupBy] === group).map(item => \n                    <TableRow \n                      params='py-7'\n                      handleRowClick={()=>handleClick(item.id)} \n                      key={item.id}\n                    > \n                      {group != undefined ? headerFields && headerFields.filter(f => f.visible && f.visible != false).map(col => \n                        <TableData \n                          params={col.headerName === groupBy ? \"is-hidden\" : \"donotwrapcell px-4 py-4\"} \n                          key={item[col.headerName]} \n                        >\n                          {item[col.docField] && col.type === \"currency\" ? `$ ${item[col.docField]}` : item[col.docField]} \n                        </TableData>\n                      ) : \"\"}\n                    </TableRow>\n                  ) : \"\" }\n              </TableBody> \n\n              {/**Mobile Window List - Not Tags - Not ALL */}   \n\n              <TableBody params=\"is-size-7 is-hidden-desktop\">\n                  {data && data != undefined ? data.filter(f => f[groupBy] === group).map(item => \n                    <TableRow \n                      params=\"py-7\"\n                      handleRowClick={()=>handleClick(item.id)} \n                      key={item.id}\n                    > \n                      {group != undefined ? mobileHeaderFields && mobileHeaderFields.map(col => \n                        <TableData \n                          params={col.headerName === groupBy ? \"is-hidden\" : \"donotwrapcell py-3\"} \n                          key={item[col.headerName]} \n                        >\n                          {item[col.docField] && col.type === \"currency\" ? `$ ${item[col.docField]}` : item[col.docField]}\n                        </TableData>\n                      ) : \"\"}\n                    </TableRow>\n                  ) : \"\"}\n              </TableBody>   \n            </Table>\n            </div>\n          </div>\n            \n            \n          \n            ) : groupBy == \"Tags\" ? groupedKeys.map((group) => (\n\n              <div className=\"box is-rounded\">\n                <div className=\"columns is-mobile\">     \n                  <div className=\"column is-narrow\">\n                    <div className=\"is-size-6\">{isGrid && isGrid}</div>\n                      <div className=\"title\">\n                        <strong>{group || \"No Tags Assigned\"}</strong>\n                      </div>\n                  </div>\n                </div>\n                <div className=\"table-container \">\n                <Table params=\"table is-hoverable is-fullwidth is-centered\">\n                  <TableHead params=\"is-size-6\">\n\n                    {/**Full Window Header - TAGS - Not ALL */} \n\n                  <TableRow params=\"py-7 is-hidden-touch\">\n                    {headerFields && group === \"Tags\" ? headerFields.map(col => \n                      <TableHead \n                        params={col.headerName === groupBy ? \"is-hidden\": \"\"} \n                        style={{width: '15%', textAlign: \"left\"}} \n                        key={col.keyProp}\n                      >\n                        {\n                          col.mobile != true ? \n                          <span> \n                            <a onClick={()=> handleSort(col.docField, data)}>\n                              {col.headerName && col.headerName}\n                            </a> \n                          </span> : \n                            <a onClick={()=> handleSort(col.docField, data)}>\n                              {col.headerName && col.headerName} \n                            </a> \n                        }\n                      </TableHead>\n                    ) : \"\"}\n                  </TableRow>\n\n                  {/**Mobile Window Header - TAGS - Not ALL */} \n                  \n                  <TableRow params=\"py-7 is-hidden-desktop\">\n                    {mobileHeaderFields && mobileHeaderFields.map(col => \n                      <TableHead \n                        className={col.headerName === groupBy ? \"is-hidden\": \"\"} \n                        style={{textAlign: \"left\"}} \n                        key={col.keyProp}\n                      >\n                        {\n                          col.mobile != true ? \n                          <a onClick={()=> handleSort(col.docField, data)}>{col.headerName && col.headerName}</a> : \n                          <a onClick={()=> handleSort(col.docField, data)}>{col.headerName && col.headerName}</a>\n                        }\n                      </TableHead>\n                    )}\n                  </TableRow>\n                </TableHead>\n\n                {/**Full Window List - TAGS - Not ALL */} \n\n                <TableBody params=\"is-size-7 is-hidden-touch\">\n                \n                  {data && data != undefined ? data.filter(f => f.Tags && f.Tags.includes(group)).map(item => \n                    <TableRow \n                      params='py-7'\n                      handleRowClick={()=>handleClick(item.id)} \n                      key={item.id}\n                    > \n                      {headerFields && headerFields.map(col => \n                        <TableData \n                          params={col.headerName === groupBy ? \"is-hidden\" : \"donotwrapcell px-4 py-4\"} \n                          key={item[col.headerName]} \n                        >\n                          {item[col.docField] && col.type === \"currency\" ? `$ ${item[col.docField]}` : item[col.docField]} \n                        </TableData>\n                      )}\n                    </TableRow>\n                  ) : \"\" }\n              </TableBody>\n\n              {/**Mobile Window List - TAGS - Not ALL */}    \n\n              <TableBody params=\"is-size-7 is-hidden-desktop\">\n                \n                  {data && data != undefined ? data.filter(f => f.Tags && f.Tags.includes(group)).map(item => \n                    <TableRow \n                      params='py-7'\n                      handleRowClick={()=>handleClick(item.id)} \n                      key={item.id}\n                    > \n                      {mobileHeaderFields && mobileHeaderFields.map(col => \n                        <TableData \n                          params={col.headerName === groupBy ? \"is-hidden\" : \"donotwrapcell py-3\"} \n                          key={item[col.headerName]} \n                        >\n                          {item[col.docField] && col.type === \"currency\" ? `$ ${item[col.docField]}` : item[col.docField]}  \n                        </TableData>\n                      )}\n                    </TableRow>\n                  ) : \"\"}\n              </TableBody>   \n            </Table>\n            </div>\n          </div>\n\n            )) : (\n              \n              <div className=\"box is-rounded\">\n              <div className=\"columns is-mobile\">     {/**Header */}\n                <div className=\"column is-narrow\">\n                  <div className=\"title\">\n                    <strong>{isGrid && isGrid}</strong>\n                  </div>\n                  \n                </div>\n            </div>\n            <div className=\"table-container \">\n            <Table params=\"table is-hoverable is-fullwidth is-centered\">\n                <TableHead params=\"is-size-6\">\n                  {/**Full Window Header - ALL */} \n                  <TableRow params=\"py-7 is-hidden-mobile\">\n                    {headerFields && headerFields.map(col => \n                      <TableHeadItem \n                        params={col.headerName === groupBy ? \"is-hidden\": \"\"} \n                        style={{width: '15%', textAlign: \"left\"}} \n                        key={col.keyProp}\n                      >\n                        {\n                          col.mobile != true ? \n                          <a onClick={()=> handleSort(col.docField, data)}>{col.headerName && col.headerName}</a> : \n                          <a onClick={()=> handleSort(col.docField, data)}>{col.headerName && col.headerName}</a>\n                        }\n                      </TableHeadItem>\n                    )}\n                  </TableRow>\n\n                  {/**Mobile Window Header - ALL */} \n\n                  <TableRow params=\"py-7 is-hidden-tablet\">\n                    {mobileHeaderFields && mobileHeaderFields.map(col => \n                      <TableHeadItem \n                        params={col.headerName === groupBy ? \"is-hidden\": \"\"} \n                        style={{textAlign: \"left\"}} \n                        key={col.keyProp}\n                      >\n                        {\n                          col.mobile != true ? \n                          <a onClick={()=> handleSort(col.docField, data)}>{col.headerName && col.headerName}</a> : \n                          <a onClick={()=> handleSort(col.docField, data)}>{col.headerName && col.headerName}</a>\n                        }\n\n                      </TableHeadItem>\n                    )}\n                  </TableRow>\n                </TableHead>\n\n                {/**Full Window List - ALL */} \n\n                <TableBody params=\"is-6 is-hidden-mobile\">\n                  {data && data != undefined ? data.map(item => \n                    <TableRow handleRowClick={()=>handleClick(item.id)} key={item.id}> \n                      {headerFields && headerFields.map(col => \n                        <TableData \n                          params=\"donotwrapcell py-5\"\n                          key={item[col.headerName]} \n                        >\n                          {item[col.docField] && col.type === \"currency\" ? `$ ${item[col.docField]}` : item[col.docField]} \n                          \n                        </TableData>\n                      )}\n                    </TableRow>\n                  ) : \"\" }\n              </TableBody>   \n              {/**Mobile Window List - ALL */} \n              <TableBody params=\"is-size-6 is-hidden-tablet\">\n                \n                  {data && data != undefined ? data.map(item => \n                    <TableRow \n                      params='py-5'\n                      handleRowClick={()=>handleClick(item.id)} \n                      key={item.id}\n                    > \n                      {mobileHeaderFields && mobileHeaderFields.map(col => \n                        <TableData \n                          params=\"donotwrapcell py-3\" \n                          key={item[col.headerName]} \n                        >\n                          {item[col.docField] && col.type === \"currency\" ? `$ ${item[col.docField]}` : item[col.docField]} \n                          \n                        </TableData>\n                      )}\n                    </TableRow>\n                  ) : \"\"}\n              </TableBody>   \n            </Table>\n            </div>\n          </div>\n            )\n        }\n      </div>\n     \n  </>\n    \n  )\n}\n\nexport default GridGroup","import React from 'react'\r\n\r\nconst SelectView = ({onChange, value, params, children}) => {\r\n  \r\n \r\n  return(\r\n      <div className=\"field\">\r\n        <div className=\"control\">\r\n        <div className={`select ${params}`}>\r\n          <select type=\"select\" onChange={onChange} defaultValue={value}>\r\n          {children}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectView","import React, {useState, useEffect, useContext, useRef} from 'react'\nimport { useNavigate, Link } from 'react-router-dom'\nimport Drawer from '@mui/material/Drawer';\nimport Paper from '@mui/material/Paper';\n\nimport { stateContext } from '../../Contexts/stateContext'\nimport { fieldContext } from '../../Contexts/fieldContext'\n\nimport { useSortHook } from '../../Hooks/useSortHook'\nimport {useGroupBy, handleIsGroupReducer} from '../../Hooks/useGroupBy'\nimport {useFilterArray} from '../../Components/Tables/useFilterArray'\nimport RenderDrawer, {useDrawer} from '../../Hooks/useDrawer'\n\nimport GridGroup2 from '../../Components/Grids/GridGroup2'\nimport GridTable from '../../Components/Grids/GridTable'\nimport Grid from '../../Components/Grids/Grid'\n\nimport CostBySite from '../../Components/Graphs/CostBySite'\n\nimport SelectView from '../../Components/Grids/SelectView'\nimport Columns from '../../Components/Layout/Columns'\nimport Column from '../../Components/Layout/Column'\nimport SideDrawer from '../../Components/Drawers/SideDrawer'\nimport DetailDrawer from '../DetailDrawer'\n\n\nconst DashboardGrids = ({visible}) => {\n\n  const userContext = useContext(stateContext)\n  const navigate = useNavigate()\n\n  const { isStyle, \n          fetchLocations,\n          fetchServices,\n          fetchTickets,\n          fetchOrders,\n          fetchAccounts,\n          fetchBills,\n          fetchUsers,\n          data,\n          setData,\n          fetchContracts,\n          setLocations,\n          setServices,\n          setTickets,\n          setOrders,\n          setAccounts,\n          setUsers,\n          setBills,\n          setContracts,\n          setDataLoading,\n          setCurrentModule,\n          setCurrentDocID,\n          setCurrentGrid, } = userContext\n\n  const { dataLoading,\n          currentUser,\n          currentCompany,\n          currentCompanyID,\n          locations,\n          services,\n          tickets,\n          orders,\n          accounts,\n          bills,\n          users,\n          userDefaults,\n          contracts,\n          currentGrid,\n          currentModule,\n          currentDocID } = userContext.userSession\n  const {\n    serviceGridColumns,\n    serviceGroupByFields,\n    serviceMobileGridColumns,\n    locationGridColumns,\n    locationGroupByFields,\n    locationMobileGridColumns,\n    ticketGridColumns,\n    ticketGroupByFields,\n    ticketMobileGridColumns,\n    orderGridColumns,\n    orderGroupByFields,\n    orderMobileGridColumns,\n    accountGridColumns,\n    accountGroupByFields,\n    accountMobileGridColumns,\n    userGridColumns,\n    userGroupByFields,\n    userDetailFields,\n    contractGridColumns,\n    contractMobileGridColumns,\n    contractGroupByFields,\n    fetchCore,\n    core,\n    setCore\n  } = useContext(fieldContext)\n\n  const searchRef = useRef(\"\")\n \n  const [grid, setGrid] = useState(currentGrid != undefined ? currentGrid : userDefaults?.Grid || \"SERVICES\" )\n  \n  const [groupByOptions, setGroupByOptions] = useState(serviceGroupByFields)\n\n  const [groupBy, setGroupBy] = useState(userDefaults?.groupBy || \"ALL\")  \n\n  const [recent, setRecent] = useState()\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n  const [isRefreshDrawer, setIsRefreshDrawer] = useState(false)\n  const [isNewDocDrawerOpen, setIsNewDocDrawerOpen] = useState(false)\n  const [isNewDoc, setIsNewDoc] = useState(false)\n  const [isCurrentDocID, setIsCurrentDocID] = useState()\n  const [isModule, setIsModule] = useState()\n  \n  const [testing, setTesting] = useState([])\n  const { sortedArr, sortArr } = useSortHook() \n  const {drawers, setDrawers} = useDrawer()\n\n  /**\n   * console.log('isNew:', 'grid:', grid, 'isNewDoc:', isNewDoc, 'isModule:', isModule, 'isCurrentDocID:', isCurrentDocID)\n   * */\n\n  useEffect(() => {\n   fetchCore()\n  },[])\nconsole.log(core)\n  useEffect(() => {\n    \n  },[isDrawerOpen])\n\n  useEffect(() => {\n    grid === 'SERVICES' ? setGroupByOptions(serviceGroupByFields) : \n    grid === 'TICKETS' ? setGroupByOptions(ticketGroupByFields) :\n    grid === 'ORDERS' ? setGroupByOptions(orderGroupByFields) :\n    grid === 'ACCOUNTS' ? setGroupByOptions(accountGroupByFields) :\n    grid === 'LOCATIONS' ? setGroupByOptions(locationGroupByFields) :\n    grid === 'CONTRACTS' ? setGroupByOptions(contractGroupByFields) :\n    setGroupByOptions(serviceGroupByFields)\n    recentUpdatesArr(\"SERVICES\")\n  },[grid])\n\n  const handleSorting = (sortBy, colRef) => {\n   const sortedArray = sortArr(sortBy, colRef)\n\n     setLocations(sortedArr) \n\n  }\n  \n  /** Handle Change when choosing different Grid via Selector */\n\n  const handleGridChange = (e) => {\n    const {value} = e.target\n    console.log(value)\n    setGrid(value)\n    setCurrentGrid(value)\n    \n  }\n  \n  /** Modify Grid Name to Title Case */\n\n  const modGridStr = (str) => {\n    const strLower = str.toLowerCase()\n    return str.charAt(0).toUpperCase() + strLower.slice(1)\n  }\n\n  /** Add New Document Button */\n\n  const handleAddClick = () => {\n    const isModule = modGridStr(grid)\n    setCurrentModule(isModule)\n    \n    setIsNewDocDrawerOpen(true)\n    \n  }\n\n  const handleCloseDrawer = () => {\n    setData()\n    setIsDrawerOpen(false)\n    setIsNewDocDrawerOpen(false)\n  }\n\n  \n  const recentUpdatesArr = (arr) => {\n    switch (arr) {\n      case \"SERVICES\": \n        return (\n          setRecent([...services])\n        )\n      case \"TICKETS\": \n        return (\n          setRecent([...tickets])\n        )\n      case \"ORDERS\": \n        return (\n          setRecent([...orders])\n        )\n    }\n  }\n\n  const sortByDate = (arr) => {\n    const sorter = (a, b) => {\n      return new Date(b.LastUpdated).getTime() - new Date(a.LastUpdated).getTime()\n    }\n    arr.sort(sorter)\n  }\n\n  sortByDate(recent != undefined ? recent : [])\n  const recentUpdates = recent != undefined ? recent.slice(0, 10) : \"\"\n  \n  const handleAddDrawer = (drawer) => {\n    \n    setCurrentModule(drawer.modRef)\n    setCurrentDocID(drawer.id)\n      \n    const newDrawer = {\n      open: true,\n      fields: drawer.colRef,\n      currentCompany: currentCompany,\n      isModule: drawer.modRef,\n      docID: drawer.id\n    } \n\n    const addDrawer = [...drawers]\n    addDrawer.push(newDrawer)\n    setDrawers(addDrawer)\n  }\n\n  const handleClose = (index) => {\n    const removeDrawer = [...drawers]\n    removeDrawer.splice(index, 1)\n    setDrawers(removeDrawer)\n    \n  }\n\nconst headerArr = users && [...users].filter(f => f.Email === currentUser).map(m => m._sys._modules)\n\nconsole.log('users', users, 'headerArr', headerArr)\nreturn (\n  <>\n    <div className=\"pt-4 is-flex is-justify-content-flex-end\">\n    <Columns options=\"is-mobile pr-3 pb-3 is-gapless\">\n      <Column size=\"is-narrow mr-2 mt-1 is-hidden-mobile\">View</Column>\n      <Column size=\"is-narrow mr-2\">\n        <SelectView onChange={(e)=>handleGridChange(e)} params='shaded' value={grid}>\n        <option value=\"SERVICES\">Services</option>\n        <option value=\"TICKETS\">Tickets</option>\n        <option value=\"ORDERS\">Orders</option>\n        <option value=\"ACCOUNTS\">Accounts</option>\n        <option value=\"LOCATIONS\">Locations</option>\n        <option value=\"USERS\">Users</option>\n        <option value=\"CONTRACTS\">Contracts</option>\n        \n        </SelectView>\n      </Column>\n\n      <Column size=\"is-narrow mr-2\">\n        \n        <div className=\"select \">\n        <select onChange={(e) => setGroupBy(e.target.value)} value={groupBy}>\n\n          <option value=\"ALL\">Show All</option>\n\n          {groupByOptions.map(groupOption => (\n\n            <option value={groupOption.Value}>Group by {groupOption.Label}</option>\n\n          ))}\n\n        </select>\n        \n        </div>\n\n      </Column>\n      <Column size=\"is-1\">\n        <button className=\"button is-rounded is-link\" onClick={()=>handleAddClick()}>Add</button>\n        \n      </Column>\n      \n    </Columns>\n    </div>\n    {/* {!checkForFields ? '' : \n    <div className={grid === 'SERVICES' ? \"\" : \"is-hidden\"}>\n      <GridTable\n        data={grid === \"SERVICES\" ? services : null}\n        isGrid='Services'\n        headerFields={headerArr}\n        mobileHeaderFields={serviceMobileGridColumns}\n        handleClick={(e) => handleAddDrawer({id: e, colRef: serviceGridColumns, modRef: \"Services\"})}\n        handleSort={(e)=>handleSorting(e)}\n        groupBy={groupBy}\n        currUser = {currentUser}\n      />\n    </div>   \n    } */}\n    <div className={grid === 'SERVICES' ? \"\" : \"is-hidden\"}>\n      <GridGroup2\n        data={grid === \"SERVICES\" ? services : null}\n        isGrid='Services'\n        headerFields={serviceGridColumns}\n        mobileHeaderFields={serviceMobileGridColumns}\n        handleClick={(e) => handleAddDrawer({id: e, colRef: serviceGridColumns, modRef: \"Services\"})}\n        handleSort={(e)=>handleSorting(e)}\n        groupBy={groupBy}\n      />\n    </div>\n    <div className={grid === 'TICKETS' ? \"\" : \"is-hidden\"}>\n      <GridGroup2\n        data={grid === \"TICKETS\" ? tickets : null}\n        isGrid='Tickets'\n        headerFields={ticketGridColumns}\n        mobileHeaderFields={ticketMobileGridColumns} \n        handleClick={(e) => handleAddDrawer({id: e, colRef: ticketGridColumns, modRef: \"Tickets\"})}\n        handleSort={(e)=>handleSorting(e)}\n        groupBy={groupBy}\n      />\n    </div>\n    <div className={grid === 'ORDERS' ? \"\" : \"is-hidden\"}>\n      <GridGroup2\n        data={grid === \"ORDERS\" ? orders : null}\n        isGrid='Orders'\n        headerFields={orderGridColumns}\n        mobileHeaderFields={orderMobileGridColumns}\n        handleClick={(e) => handleAddDrawer({id: e, colRef: orderGridColumns, modRef: \"Orders\"})}\n        handleSort={(e)=>handleSorting(e)}\n        groupBy={groupBy || \"ALL\"}\n      />\n    </div>\n    <div className={grid === 'ACCOUNTS' ? \"\" : \"is-hidden\"}>\n      <GridGroup2\n        data={grid === \"ACCOUNTS\" ? accounts : null}\n        isGrid='Accounts'\n        headerFields={accountGridColumns}\n        mobileHeaderFields={accountMobileGridColumns}\n        handleClick={(e) => handleAddDrawer({id: e, colRef: accountGridColumns, modRef: \"Accounts\"})}\n        handleSort={(e)=>handleSorting(e)}\n        groupBy={groupBy}\n      />\n    </div>\n    <div className={grid === 'LOCATIONS' ? \"\" : \"is-hidden\"}>\n      <GridGroup2\n        data={grid === \"LOCATIONS\" ? locations : null}\n        isGrid='Locations'\n        headerFields={locationGridColumns}\n        mobileHeaderFields={locationMobileGridColumns}\n        handleClick={(e) => handleAddDrawer({id: e, colRef: locationGridColumns, modRef: \"Locations\"})}\n        handleSort={(sortBy, colRef)=>handleSorting(sortBy, colRef)}\n        groupBy={groupBy}\n      />\n    </div>\n    <div className={grid === 'CONTRACTS' ? \"\" : \"is-hidden\"}>\n      <GridGroup2\n        data={grid === \"CONTRACTS\" ? contracts : null}\n        isGrid='Contracts'\n        headerFields={contractGridColumns}\n        mobileHeaderFields={contractMobileGridColumns}\n        handleClick={(e) => handleAddDrawer({id: e, colRef: contractGridColumns, modRef: \"Contracts\"})}\n        handleSort={(sortBy, colRef)=>handleSorting(sortBy, colRef)}\n        groupBy={groupBy}\n      />\n    </div>\n    <div className={grid === 'USERS' ? \"\" : \"is-hidden\"}>\n      <GridGroup2\n        data={grid === \"USERS\" ? users : null}\n        isGrid='Users'\n        headerFields={userGridColumns}\n        mobileHeaderFields={userGridColumns}\n        handleClick={(e) => handleAddDrawer({id: e, colRef: userGridColumns, modRef: \"Users\"})}\n        handleSort={(sortBy, colRef)=>handleSorting(sortBy, colRef)}\n        groupBy={groupBy}\n      />\n    </div>\n    \n    <p/>\n\n    <SideDrawer \n      direction=\"right\" \n      checked={isDrawerOpen} \n      handleClose={() => handleCloseDrawer()}\n      title={currentCompany}\n    >\n      <DetailDrawer\n        currentCompanyID={currentCompanyID}\n        id={currentDocID}\n        isModule={currentModule}\n        handleRelatedClick={(e)=>handleRelatedClick(e)}\n        isNew={isNewDoc || false}\n        isRefreshDrawer={isRefreshDrawer}\n        isDrawerActive={isNewDoc || false}\n        setIsDetailDrawerOpen={() => setIsDrawerOpen(!isDrawerOpen)}\n        isDetailDrawerOpen={isDrawerOpen}\n        resetIsNew={()=>setIsNewDoc()}\n      />\n    </SideDrawer>\n    \n    <SideDrawer \n      direction=\"right\" \n      checked={isNewDocDrawerOpen} \n      handleClose={() => handleCloseDrawer()}\n      title={currentCompany}\n    >\n      <DetailDrawer\n        currentCompanyID={currentCompanyID}\n        id={isCurrentDocID}\n        isModule={currentModule}\n        isNew={true}\n        isDrawerActive={true}\n        setIsDetailDrawerOpen={() => setIsDrawerOpen(!isDrawerOpen)}\n        isDetailDrawerOpen={isDrawerOpen}\n        resetIsNew={()=>setIsNewDoc()}\n      />\n    </SideDrawer>\n\n    <RenderDrawer \n      drawers={drawers} \n      handleAddDrawer={(e)=>handleAddDrawer({id: e.id, modRef: e.colRef})} \n      handleClose={(index)=>handleClose(index)} \n    />\n    \n        {/** Network Graph \n          <div className={grid === 'NETWORK' ? \"card\" : \"is-hidden\"}>\n            <NetworkGraphComponent \n              data={locations && locations}\n            />\n          </div>\n      */}\n    \n  \n  </>\n  \n  )\n}\n\n\nexport default DashboardGrids\n","import React, { useState, useEffect } from 'react'\n\nconst CompanyMenu = (props) => {\n  const {data, handleClick, active} = props\n  return(\n   \n      <aside className=\"menu has-text-dark menuDiv\">\n        <p className=\"menu-label pt-4 pl-4\">\n          Companies\n        </p>\n        <ul className=\"menu-list\">\n        <li>\n          <ul>\n          {data && data.map(company => \n            <li>\n            <a \n              className={company.id === active ? `is-active px-4 py-2`: \"px-4 py-2\"}\n              onClick={() => handleClick({id: company.id, Name: company.Name})}\n            >{company.Name}</a></li>\n          )}\n        </ul>\n        </li>\n        </ul>\n      </aside>\n  )\n}\nexport default CompanyMenu","import React, {useState, useEffect, useContext, useRef} from 'react'\nimport { collection, query, where, getDocs, addDoc } from 'firebase/firestore'\nimport { useAuth } from '../Contexts/AuthContext'\nimport {db} from '../Contexts/firebase'\n\nimport { useNavigate } from 'react-router-dom'\nimport Columns from '../Components/Layout/Columns'\nimport Column from '../Components/Layout/Column'\n\nexport default function Login() {\n\n  const emailRef = useRef(\"\")\n  const passwordRef = useRef(\"\")\n  const {login} = useAuth()\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n  const [modalState, setModalState] = useState(true)\n  const [loginError, setLoginError] = useState('')\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    console.log(emailRef.current.value, passwordRef.current.value)\n    if (emailRef.current.value && passwordRef.current.value === \"\") {\n      return setLoginError('Both email and password required')\n    }\n    try {\n      setLoginError('')\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      console.log('signed in')\n      const docRef = await addDoc(collection(db, 'AccessLog'), {\n        Email: emailRef.current.value,\n        Date: new Date()\n      })\n      navigate('/dashboard')\n    } catch {\n      setLoginError('Email or Password is incorrect')\n      console.log('Email or Password is incorrect')\n    }\n    setLoading(false)\n   \n  }\n\n  const handleModalClose = () => {\n    navigate(-1)\n  }\n\n  return(\n    <div className={modalState === true ? \"modal is-active\" : \"modal\"}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <div className=\"modal-card-head\">Login</div>\n        <div className=\"modal-card-body\">\n          \n          <form onSubmit={handleSubmit}>\n            <div className=\"field\">\n              <label>Email</label>\n                <div className=\"control\">\n                  <input className=\"input is-rounded\" type=\"email\" ref={emailRef} />\n                </div>\n            </div>\n            <div className=\"field\">\n              <label>Password</label>\n                <div className=\"control\">\n                  <input className=\"input is-rounded\" type=\"password\" ref={passwordRef}/>\n                </div>\n            </div>\n          \n        \n            <div className={loginError != \"\" ? \"block notification is-danger\" : \"block\"}>\n              <div>{loginError != \"\" ? loginError : \"\"}</div>\n            </div>\n        \n        <div className=\"modal-card-foot\">\n          <Columns options=\"is-mobile\">\n            <Column>\n              <button \n              type=\"submit\" \n              className={loading !== true ? \"button is-rounded is-link level-item\" : \"button is-rounded is-loading\"} \n              disabled={loading}\n              >\n                Login\n              </button>\n            </Column>\n            <Column>\n              <button className=\"button is-rounded\" onClick={()=>navigate(\"/register\")}>\n                Create account \n              </button>\n            </Column>\n          </Columns>\n          \n        \n        </div>\n        </form>\n          <button \n            className=\"modal-close is-large\" \n            aria-label=\"close\" \n            onClick={()=>handleModalClose()}\n          >\n          </button>  \n        </div>\n      </div>\n    </div>\n  )\n\n}","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { stateContext } from '../Contexts/stateContext'\nimport { getFirestore, collection, onSnapshot, query, where, getDocs } from 'firebase/firestore'\nimport { db } from '../Contexts/firebase'\n\nimport CompanyList from './Companies/CompanyList'\nimport Columns from '../Components/Layout/Columns'\nimport Column from '../Components/Layout/Column'\nimport Loading from '../Components/Loading'\n\nimport DashboardGrids from './Dashboard/DashboardGrids'\nimport CompanyMenu from '../Components/Menu/Menu'\nimport Login from './Login'\n\n\nconst Dashboard = () => {\n  \n  const userContext = useContext(stateContext)\n  const { setUserType,\n          setUserFirstName,\n          setCurrentCompany, \n          setCurrentCompanyID, \n          setCompanies, \n          setDataLoading,\n          fetchLocations,\n          fetchServices,\n          fetchTickets,\n          fetchOrders,\n          fetchAccounts,\n          fetchBills,\n          fetchEvents,\n          fetchUsers,\n          fetchContracts,\n          setLocations,\n          setServices,\n          setTickets,\n          setOrders,\n          setAccounts,\n          setUsers,\n          setUserDefaults,\n          setBills,\n          setContracts } = userContext\n\n  const { currentUser, \n          userType, \n          currentCompany, \n          companies,\n          dataLoading,\n          currentCompanyID,\n          locations,\n          services,\n          tickets,\n          orders,\n          accounts,\n          bills,\n          users,\n          contracts } = userContext.userSession\n    \n  \n\n  const isUserLoggedIn = currentUser != undefined ? currentUser : \"\"\n  const isUserAdmin = userType != undefined ? userType : \"\"\n  const isReadyForPageBuild = userType != undefined ? userType : \"\"\n  \n\n  const [ toggleCompanyList, setToggleCompanyList ] = useState(false)\n  const [ toggleDashboard, setToggleDashboard ] = useState(false)\n  const [ loading, setLoading ] = useState(false)\n  \n  \n\n  useEffect(() => {\n    fetchUser(currentUser)\n    \n  },[isUserLoggedIn])\n\n  useEffect(() => {\n    isCurrentCompany()\n    setLoading(true)\n  },[isUserAdmin])\n\n  useEffect(() => {\n    loading != false ? fetchPageData() : \"\"\n  },[loading])\n\n  useEffect(()=> {\n    fetchPageData()\n  },[currentCompany])\n\n  const fetchUser = async(email) => {\n    \n    const q = query(collection(db, \"Users\"), where(\"Email\", \"==\", email))\n    const userRef = await getDocs(q)\n    const user = userRef.docs.map(doc => ({id: doc.id, FirstName: doc.FirstName, Type: doc.Type, ...doc.data()}))\n    //console.log(user)\n    await setUserFirstName(user[0].FirstName)\n    await setUserType(user[0].Type)\n    await setUserDefaults(user[0].Defaults && user[0].Defaults)\n    \n  }\n\n  const isCurrentCompany = () => {\n    userType != \"\" & userType === \"Admin\" ?\n    currentCompany === \"\" ? fetchCompaniesAdmin() : \"\" : \n    currentCompany === \"\" ? fetchCompanies() : \"\"\n    \n  }\n\n  const fetchPageData = async() => {\n    \n      await fetchLocations(),\n      await fetchServices(),\n      await fetchTickets(),\n      await fetchOrders(),\n      await fetchAccounts(),\n      await fetchBills(),\n      await fetchEvents(),\n      await fetchUsers()\n      await fetchContracts()\n      const timer = setTimeout(() => {\n        setLoading(false)\n      }, 1500)\n      \n      return () => clearTimeout(timer)\n      \n  }\n\n  const fetchCompanies = async() => {\n    const q = query(collection(db, \"Companies\"), where(\"Users\", \"array-contains\", currentUser))\n    const companiesRef = await getDocs(q)\n     \n    const companies = await companiesRef.docs.map(doc => ({id: doc.id, ...doc.data()}))\n    \n    setCurrentCompanyID(companies[0].id)\n    setCurrentCompany(companies[0].Name)\n    setCompanies(companies)\n    \n    \n  }\n\n  const fetchCompaniesAdmin = async() => {\n\n    const q = query(collection(db, 'Companies'))\n\n    const companiesRef = await getDocs(collection(db, \"Companies\"))\n\n    const companies = await companiesRef.docs.map(doc => ({id: doc.id, ...doc.data()}))\n    \n    setCurrentCompanyID(companies[0].id)\n    setCurrentCompany(companies[0].Name)\n    setCompanies(companies)\n  }\n//console.log(companies)\n  const handleCompanyMenuClick = (e) => {\n    setLoading(true)\n    const {id, Name} = e\n    setCurrentCompany(Name)\n    setCurrentCompanyID(id)\n  }\n  \n  return (   \n    <Loading active={loading}>\n\n      {currentUser != undefined ?\n        <Columns options=\"is-12 is-mobile \">\n          <Column size=\"is-3 is-hidden-mobile\">\n          \n            <CompanyMenu \n              data={companies && companies}\n              handleClick={(e) => handleCompanyMenuClick(e)}\n              active={currentCompanyID}\n            />\n          \n          </Column>\n          <Column size=\"is-hidden\"></Column>\n        <Column>\n        <>\n          \n            <div className=\"pt-4 pl-4 is-hidden-tablet\">\n              <CompanyList /> \n            </div>\n          \n\n          <div className=\"block\">\n\n            <DashboardGrids />\n            \n          </div>\n        </>\n        </Column>\n        <Column size=\"is-hidden\"></Column>\n        </Columns>\n        :\n        <>\n\n          <Login />\n\n        </>\n        \n      }\n    </Loading>\n  )\n}\n\nexport default Dashboard","import React, {useState, useContext} from 'react'\nimport {Link, Redirect, useNavigate} from 'react-router-dom'\n\nimport {stateContext} from '../Contexts/stateContext'\nimport {useAuth} from '../Contexts/AuthContext'\nimport {auth} from '../Contexts/firebase'\n\nimport {FaSearch, FaUser, FaCog} from 'react-icons/fa'\n\nconst NavBar = () => {\n\n  const navigate = useNavigate()\n  const userContext = useContext(stateContext)\n  const {userFirstName} = userContext.userSession\n  const {currentUser, logOutUser} = useAuth()\n  \n  const [isActive, setIsActive] = useState(false)\n\n  const handleNewUserButton = () => {\n    navigate('/register')\n  }\n\n  const logOut = async() => {\n    \n    await auth.signOut()\n    logOutUser()\n    navigate('/')\n    \n  }\n\n  return (\n    <nav className=\"navbar is-black is-fixed-top \" role=\"navigation\" aria-label=\"main navigation\">\n    <div className=\"navbar-brand\">\n\n      <div className=\"navbar-item\">\n        <a onClick={()=>navigate('/')} className='has-text-white is-size-4'>\n          <strong>TELEMI</strong>\n        </a>\n        <span className=\"is-size-7 pl-1\">beta</span>\n      </div>\n    \n    <a \n      onClick={() => setIsActive(!isActive)}\n      role='button'\n      className={`navbar-burger burger ${isActive ? 'is-active' : ''}`}\n      aria-label='menu'\n      aria-expanded='false'\n      data-target='tiemsNavbar'\n    >\n      <span aria-hidden='true'></span>\n      <span aria-hidden='true'></span>\n      <span aria-hidden='true'></span>\n    </a>\n      </div>\n      <div \n        className={`navbar-menu ${isActive === true ? 'is-active' : ''}`}\n        aria-label='menu' \n        id='tiemsNavbar'\n      >\n\n      <div className=\"navbar-end\">\n        \n        {currentUser != undefined ? ( \n          <>\n            <a className=\"navbar-item\" onClick={()=> navigate(\"/search\")}>\n              <span className=\"icon is-medium\">\n                <FaSearch />\n              </span>\n            </a>\n            \n            <div className=\"navbar-item has-dropdown is-hoverable\">\n            <a className=\"navbar-link\" onClick={()=>navigate(\"/dashboard\")} ><span className=\"icon is-medium\"><FaUser /></span></a>\n            <a className=\"navbar-link\" onClick={()=>navigate(\"/settings\")} ><span className=\"icon is-medium\"><FaCog /></span></a>\n          <div className=\"navbar-dropdown\">\n          <a onClick={()=>logOut()} className=\"navbar-item\">\n            Logout \n          </a>\n          </div>\n          </div>\n          </>\n        ) : (\n          <>\n          <div className=\"navbar-item\" onClick={()=>handleNewUserButton()}>\n          <button className=\"button is-small is-rounded has-background-grey-lighter\">Create Account</button>\n          </div>\n          <a onClick={()=> navigate('/login')} className=\"navbar-item\" >\n            Login\n          </a>\n          </>\n        )}\n\n      </div>\n    </div>\n  </nav>\n    \n  )\n}\nexport default NavBar","import React, { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport Columns from './Layout/Columns'\nimport Column from './Layout/Column'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nconst Page = ({title, subtitle, handleGoBack, pageError, pageSuccess, children}) => {\n\n  const navigate = useNavigate()\n  const success = \"notification is-success is-overlay is-align-content-center\"\n\n  \n  return(\n    <div> \n      <div className=\"content pt-5 pb-5\" >\n        <Columns options=\"is-mobile is-vcentered\">\n          <Column size=\"is-narrow\">\n            <div className=\"icon is-large\"><FaArrowLeft className=\"icon pl-1 mx-2 my-2\" onClick={() => handleGoBack()}/> </div>\n          </Column>\n          <Column>\n            <span className=\"title\"><div className=\"donotwrap\">{title}</div></span>\n          </Column>\n        </Columns>\n      </div> \n          \n      <div>\n        <div className={pageSuccess && pageSuccess != false ? success : \"is-hidden\"}>\n          {pageSuccess}\n        </div>\n        <div>\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Page","import React from 'react'\n\nconst Button = ({label, options, handleSubmit}) => {\n  return(\n    <div className=\"field\">\n    <div className=\"control\">\n      <button className={`button is-rounded ${options}`} onClick={handleSubmit}>{label}</button>\n    </div>\n    </div>\n    \n  )\n}\nexport default Button","import React, {useEffect, useState, useRef, useContext} from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {fieldsCompanies} from '../../Contexts/initialFieldContext'\nimport { db, fire, store } from '../../Contexts/firebase'\nimport {stateContext} from '../../Contexts/stateContext'\n\nimport TextInput from '../../Components/Forms/TextInput'\nimport Page from '../../Components/Page'\nimport Button from '../../Components/Buttons/Button'\nimport Columns from '../../Components/Layout/Columns'\nimport Column from '../../Components/Layout/Column'\n\n\nconst AddCompany = ({open}) => {\n  const navigate = useNavigate()\n  const userContext = useContext(stateContext)\n  const { setDataLoading } = userContext\n  const { currentUser } = userContext.userSession\n  const {\n    collection, \n    query, \n    where, \n    getDocs, \n    getDoc, \n    addDoc, \n    updateDoc, \n    doc,\n    arrayUnion,\n    arrayRemove\n  } = fire\n  const [checked, setChecked] = useState(true)\n  \n  const [pageError, setPageError] = useState()\n  const [pageSuccess, setPageSuccess] = useState()\n  \n  const companyName = useRef(\"\")\n  \n  \n  const handleSubmit = async(e) => {\n    const nameField = fieldsCompanies ? fieldsCompanies.filter(f=> f.uid === 'Name').map(field => {\n      value: companyName.current.value\n    }) : ''\n    const userField = fieldsCompanies ? fieldsCompanies.filter(f=> f.uid === 'Users').map(field => {\n      value: [currentUser]\n    }) : ''\n\n    const docData = {\n      fields: [\n        ...fieldsCompanies,\n        nameField,\n        userField\n      ]\n    }  \n    console.log('name', nameField, 'data', docData)\n  }\n\n  const autoClose = () => {\n    setTimeout(() => {navigate('/dashboard')}, 1500)\n  }\n  \n\n  return (\n    \n    <Page subtitle=\"Add Company\" handleSubmit={handleSubmit} status=\"new\" handleToggleReadOnly={() => setInputReadOnly(!inputReadOnly)} pageSuccess={pageSuccess} pageError={pageError} handleGoBack={()=>history.goBack()}>\n\n      <form>\n        <TextInput\n          inputFieldLabel=\"Company Name\"\n          inputFieldRef={companyName}\n        />\n        <Columns options=\"is-mobile\">\n\n          <Column size=\"is-narrow\">\n            <Button label=\"Add\" handleSubmit={handleSubmit} options=\"is-link\" />\n          </Column>\n          <Column size=\"is-narrow\">\n            <Button label=\"Cancel\" handleSubmit={() => navigate('/dashboard')} />\n          </Column>\n\n        </Columns>\n\n      </form>\n    </Page>\n    \n  )\n}\nexport default AddCompany","import React, { useContext } from 'react'\nimport { stateContext } from './stateContext'\nimport {vendorList} from './vendorList'\nimport {stateList} from './states'\nimport {serviceType} from './serviceType'\nimport {accessType} from './accessType'\n\n\n/** Reference Object Dummy Assignments */\n  \n  let locations = []\n  let orders = []\n  let accounts = []\n  let services = []\n  let notes = []\n  let serviceStatusType = []\n  let serviceTypes = []\n  let accessTypes = []\n\n/** Grid Fields */\n    const serviceGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\", \n        filterable: true\n      },\n      {\n        docField: 'VendorServiceName', \n        headerName: 'Product', \n        key: \"2\", \n        filterable: true\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true,\n        mobile: true\n      },\n      {\n        docField: 'AssetID', \n        headerName: 'Asset ID', \n        key: \"4\", \n        filterable: false,\n        mobile: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"5\", \n        filterable: true\n      },\n      {\n        docField: 'Status', \n        headerName: 'Status', \n        key: \"6\", \n        filterable: true\n      }\n    ]\n\n    const serviceGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'Type',\n        Value: 'Type'\n      },\n      {\n        Label: 'Location',\n        Value: 'LocationName'\n      },\n      {\n        Label: 'Status',\n        Value: 'Status'\n      },\n      {\n        Label: 'Account Number',\n        Value: 'AccountNum'\n      },\n      {\n        Label: 'Tags',\n        Value: 'Tags'\n      }\n    ]\n\n    const serviceMobileGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\", \n        filterable: true\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true,\n        mobile: true\n      },\n      {\n        docField: 'AssetID', \n        headerName: 'Asset ID', \n        key: \"4\", \n        filterable: false,\n        mobile: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"5\", \n        filterable: true\n      }\n      \n    ]\n\n    const locationGridColumns = [\n      {\n        docField: 'Name',\n        headerName: 'Location Name',\n        key: \"1\",\n        filterable: false\n      },\n      {\n        docField: 'Address1',\n        headerName: 'Address 1',\n        key: \"2\",\n        filterable: false\n      },\n      { \n        docField: 'City', \n        headerName: 'City', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'State', \n        headerName: 'State', \n        key: \"5\", \n        filterable: true \n      },\n      { \n        docField: 'Zip', \n        headerName: 'Zip', \n        key: \"6\", \n        filterable: true \n      }\n    ]\n\n    const locationMobileGridColumns = [\n      {\n        docField: 'Name',\n        headerName: 'Location Name',\n        key: \"1\",\n        filterable: false\n      },\n      { \n        docField: 'City', \n        headerName: 'City', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'State', \n        headerName: 'State', \n        key: \"5\", \n        filterable: true \n      }\n    ]\n\n    const locationGroupByFields = [\n      {\n        Label: 'City',\n        Value: 'City'\n      },\n      {\n        Label: 'State',\n        Value: 'State'\n      },\n      {\n        Label: 'Zip',\n        Value: 'Zip'\n      },\n    ]\n    \n    const ticketGridColumns = [\n      {\n        docField: 'Status', \n        headerName: 'Status', \n        key: \"1\", \n        filterable: true\n      },\n      {\n        docField: 'TicketNum', \n        headerName: 'Ticket', \n        key: \"2\", \n        filterable: false\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"4\", \n        filterable: true\n      },\n      {\n        docField: 'Details', \n        headerName: 'Details', \n        key: \"5\", \n        filterable: false\n      }\n    ]\n    \n    const ticketGroupByFields = [\n      {\n        Label: 'Type',\n        Value: 'Type'\n      },\n      {\n        Label: 'Location',\n        Value: 'LocationName'\n      },\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'Status',\n        Value: 'Status'\n      }\n    ]\n\n    const ticketMobileGridColumns = [\n      {\n        docField: 'Status', \n        headerName: 'Status', \n        key: \"1\", \n        filterable: true\n      },\n      {\n        docField: 'TicketNum', \n        headerName: 'Ticket', \n        key: \"2\", \n        filterable: false\n      },\n      {\n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"3\", \n        filterable: true\n      },\n      {\n        docField: 'Type', \n        headerName: 'Type', \n        key: \"4\", \n        filterable: true\n      },\n      {\n        docField: 'Details', \n        headerName: 'Details', \n        key: \"5\", \n        filterable: false\n      }\n    ]\n\n    const orderGridColumns = [\n      {\n        docField: 'OrderDate',\n        headerName: 'Date',\n        key: \"1\",\n        filterable: true\n      },\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"2\",\n        filterable: true\n      },\n      { \n        docField: 'VendorServiceName', \n        headerName: 'Product', \n        key: \"3\", \n        filterable: true \n      },\n      { \n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'OrderNum', \n        headerName: 'Order Number', \n        key: \"5\", \n        filterable: false \n      }\n    ]\n\n    const orderGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'Status',\n        Value: 'Status',\n      },\n      {\n        Label: 'Location',\n        Value: 'LocationName'\n      }\n    ]\n\n    const orderMobileGridColumns = [\n      {\n        docField: 'OrderDate',\n        headerName: 'Date',\n        key: \"1\",\n        filterable: true\n      },\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"2\",\n        filterable: true\n      },\n      { \n        docField: 'VendorServiceName', \n        headerName: 'Product', \n        key: \"3\", \n        filterable: true \n      },\n      { \n        docField: 'LocationName', \n        headerName: 'Location', \n        key: \"4\", \n        filterable: true \n      },\n      { \n        docField: 'OrderNum', \n        headerName: 'Order Number', \n        key: \"5\", \n        filterable: false \n      }\n    ]\n\n    const accountGridColumns = [\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"1\",\n        filterable: true,\n        visible: true,\n        mobile: true\n      },\n      {\n        docField: 'AccountNum',\n        headerName: 'Account',\n        key: \"2\",\n        filterable: false,\n        visible: true,\n        mobile: false\n      },\n      {\n        docField: 'PostTaxMRC',\n        headerName: 'Cost',\n        key: \"5\",\n        filterable: false,\n        visible: true,\n        mobile: true,\n        type: \"currency\"\n      }\n    ]\n\n    const accountGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'All',\n        Value: \"\"\n      }\n    ]\n\n    const accountMobileGridColumns = [\n      {\n        docField: 'Vendor',\n        headerName: 'Vendor',\n        key: \"1\",\n        filterable: true,\n        visible: true,\n        mobile: true\n      },\n      {\n        docField: 'AccountNum',\n        headerName: 'Account',\n        key: \"2\",\n        filterable: false,\n        visible: true,\n        mobile: false\n      },\n      {\n        docField: 'PostTaxMRC',\n        headerName: 'Cost',\n        key: \"5\",\n        filterable: false,\n        visible: true,\n        mobile: true,\n        type: \"currency\"\n      }\n    ]\n\n    const userGridColumns = [\n      {\n        docField: 'FirstName', \n        headerName: 'First Name', \n        key: \"3\"\n      },\n      {\n        docField: 'LastName', \n        headerName: 'Last Name', \n        key: \"2\"\n      },\n      {\n        docField: 'Email', \n        headerName: 'Email', \n        key: \"1\"\n      }\n    ]\n\n    const contractGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\"\n      },\n      {\n        docField: 'Date', \n        headerName: 'Date', \n        key: \"2\"\n      },\n      {\n        docField: 'Term', \n        headerName: 'Term', \n        key: \"3\"\n      },\n      {\n        docField: 'Details', \n        headerName: 'Details', \n        key: \"4\"\n      }\n    ]\n\n    const contractMobileGridColumns = [\n      {\n        docField: 'Vendor', \n        headerName: 'Vendor', \n        key: \"1\"\n      },\n      {\n        docField: 'Date', \n        headerName: 'Date', \n        key: \"2\"\n      }\n    ]\n\n    const contractGroupByFields = [\n      {\n        Label: 'Vendor',\n        Value: 'Vendor'\n      },\n      {\n        Label: 'All',\n        Value: \"\"\n      }\n    ]\n    \n/** Page Fields */\n    const serviceDetailFields = [\n      {\n        label: \"Basic Info\",\n        inputFieldType: \"tabTitle\"\n      },\n      { \n        label: \"Service Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: \"\", /** SET BY HANDLEINITIALFIELDMAPPING FN */\n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          },\n        ],\n        relatedDataType: \"Location\",\n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\"  \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\" \n      },\n      { \n        label: \"Type\", \n        dataField: \"Type\", \n        inputFieldType: \"select\", \n        inputSource: serviceType, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\"\n      },\n      { \n        label: \"Service Name\", \n        dataField: \"VendorServiceName\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\" \n      },\n      { \n        label: \"Access Type\", \n        dataField: \"AccessType\", \n        inputFieldType: \"select\", \n        inputSource: accessType, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\" \n      },\n      { \n        label: \"Asset ID\", \n        dataField: \"AssetID\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\", \n        isHeader: true\n      },\n      { \n        label: \"Bandwidth\", \n        dataField: \"Bandwidth\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\" \n      },\n      { \n        label: \"Monthly Cost\", \n        dataField: \"MRC\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\" \n      },\n      { \n        label: \"Status\", \n        dataField: \"Status\", \n        inputFieldType: \"status\", \n        inputSource: [\n          { \n            Name: 'Active', \n            Value: 'Active' \n          },\n          { \n            Name: 'Disconnected', \n            Value: 'Disconnected' \n          },\n          { \n            Name: 'Pending Activation', \n            Value: 'Pending Activation' \n          },\n          { \n            Name: 'Pending Disconnect', \n            Value: 'Pending Disconnect' \n          }\n        ], \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\" \n      },\n      {\n        label: 'Details',\n        inputFieldType: 'tabTitle'\n      },\n      { \n        label: \"Service Start Date\", \n        dataField: \"StartDate\", \n        visible: true, \n        inputFieldType: \"datepicker\", \n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\" \n      },\n      { \n        label: 'Last Mile', \n        dataField: 'LastMile', \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\" \n      },\n      { \n        label: \"LEC Circuit ID\", \n        dataField: \"LECCircuitID\", \n        inputFieldType: \"text\", \n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\" \n      },\n      { \n        label: \"IPV4 Info\", \n        dataField: \"IPV4\", \n        inputFieldType: \"text-area\", \n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\" \n      },\n      { \n        label: \"IPV6 Info\", \n        dataField: \"IPV6\", \n        inputFieldType: \"text-area\", \n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\" \n      },\n      { \n        label: \"IP Assignments\", \n        dataField: \"IPAssignments\", \n        inputFieldType: \"array-map-list\",  \n        relatedInputFields: [\n          {\n            label: 'Version',\n            dataField: 'Version',\n            inputFieldType: 'select',\n            inputID: \"Name\", \n            inputValue: \"Value\", \n            inputSource: [\n              {\n                Name: 'v4',\n                Value: 'v4'\n              },\n              {\n                Name: 'v6',\n                Value: 'v6'\n              }\n            ]\n          },\n          {\n            label: 'IP Address',\n            dataField: 'IPAddress',\n            inputFieldType: 'text',\n          },\n          {\n            label: 'Range',\n            dataField: 'Range',\n            inputFieldType: 'select',\n            inputID: \"Name\", \n            inputValue: \"Value\", \n            inputSource: [\n              {\n                Name: '/30',\n                Value: '/30'\n              },\n              {\n                Name: '/29',\n                Value: '/29'\n              },\n              {\n                Name: '/28',\n                Value: '/28'\n              },\n              {\n                Name: '/27',\n                Value: '/27'\n              },\n              {\n                Name: '/26',\n                Value: '/26'\n              },\n              {\n                Name: '/25',\n                Value: '/25'\n              },\n              {\n                Name: '/24',\n                Value: '/24'\n              },\n              {\n                Name: '/23',\n                Value: '/23'\n              },\n              {\n                Name: '/22',\n                Value: '/22'\n              },\n              {\n                Name: '/21',\n                Value: '/21'\n              },\n              {\n                Name: '/20',\n                Value: '/20'\n              },\n              {\n                Name: '/19',\n                Value: '/19'\n              },\n              {\n                Name: '/18',\n                Value: '/18'\n              },\n              {\n                Name: '/17',\n                Value: '/17'\n              },\n              {\n                Name: '/16',\n                Value: '/16'\n              }\n            ]\n          },\n          \n        ],\n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\",\n        hasBreakBefore: true  \n      },\n      { \n        label: 'Demarc Information', \n        dataField: 'DemarcInfo', \n        visible: true, \n        inputFieldType: \"text-area\", \n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\" \n      },\n      { \n        label: \"Related Orders\", \n        dataField: \"OrderNum\", \n        inputFieldType: \"map-list\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"OrderNum\",\n        relatedCollection: \"Orders\", \n        relatedDataField: \"ServiceID\", \n        relatedInputLabel: \"Order Number\",\n        relatedInputFields: [\n          {\n            label: 'Date',\n            dataField: 'OrderDate',\n            inputFieldType: 'datepicker'\n          },\n          {\n            label: 'Existing',\n            dataField: 'OrderNum',\n            inputFieldType: 'related-select',\n            inputSource: \"\",\n            inputID: \"id\",\n            relatedCollection: \"Orders\", \n            relatedDataField: \"OrderID\",\n            relatedInputLabel: \"Order\",\n            relatedInputFields: [\n              {\n                label: 'Order',\n                dataField: 'OrderNum',\n                inputFieldType: 'text'\n              }\n            ], \n            relatedDataType: 'Order',\n          },\n          {\n            label: 'Order',\n            dataField: 'OrderNum',\n            inputFieldType: 'text'\n          },\n          {\n            label: 'Status',\n            dataField: 'Status',\n            inputFieldType: 'text'\n          },\n        ],\n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\",\n        hasBreakBefore: true  \n      },\n      { \n        label: \"Related Order ID\", \n        dataField: \"OrderID\", \n        visible: false, \n        inputSource: orders, \n        inputID: \"ID\", \n        inputValue: \"id\", \n        tab: \"DETAILS\",\n        tabLabel: \"DETAILS\" \n      },\n      {\n        label: 'Support',\n        inputFieldType: 'tabTitle'\n      },\n      {\n        label: \"Related Tickets\",\n        dataField: \"TicketNum\",\n        inputFieldType: \"map-list\",\n        inputSource: \"\",\n        inputID: \"id\",\n        inputValue: \"TicketNum\",\n        relatedCollection: \"Tickets\",\n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Ticket Number\",\n        relatedInputFields: [\n          {\n            label: \"Ticket\",\n            dataField: \"TicketNum\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Type\",\n            dataField: \"Type\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: \"Service\",\n                Value: \"Service\"\n              },\n              {\n                Name: \"Billing\",\n                Value: \"Billing\"\n              },\n              {\n                Name: \"Disconnect\",\n                Value: \"Disconnect\"\n              }\n            ],\n          },\n          {\n            label: \"Status\",\n            dataField: \"Status\",\n            inputFieldType: \"select\",\n            inputID: 'Name',\n            inputValue: 'Value',\n            inputSource: [\n              {\n                Name: 'Submitted',\n                Value: 'Submitted'\n              },\n              {\n                Name: 'In Process',\n                Value: 'In Process'\n              },\n              {\n                Name: 'Completed',\n                Value: 'Completed'\n              },\n              {\n                Name: 'Closed',\n                Value: 'Closed'\n              }\n            ]\n          }\n        ],\n        tab: \"SUPPORT\"\n      },\n      {\n        label: 'Billing',\n        inputFieldType: 'tabTitle'\n      },\n      { \n        label: \"Related Account\", \n        dataField: \"AccountNum\",\n        visible: true, \n        inputFieldType: \"related-select\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"AccountNum\",\n        relatedCollection: \"Accounts\", \n        relatedDataField: \"AccountID\",\n        relatedInputLabel: \"Account Number\",\n        relatedInputFields: [\n          {\n            label: 'Account Number',\n            dataField: 'AccountNum',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Account',\n        tab: 'BILLING',\n        tabLabel: 'BILLING'\n      },\n      { \n        label: \"Sub Account\", \n        dataField: \"SubAccountNum\", \n        inputFieldType: \"text\", \n        tab: \"BILLING\",\n        tabLabel: \"BILLING\" \n      },\n      { \n        label: \"Group Number\", \n        dataField: \"GroupNum\", \n        inputFieldType: \"text\", \n        tab: \"BILLING\",\n        tabLabel: \"BILLING\" \n      },\n      { \n        label: \"Last Bill Amount\", \n        dataField: \"LastBillAmount\", \n        inputFieldType: \"currency\", \n        tab: \"BILLING\",\n        tabLabel: \"BILLING\" \n      },\n      { \n        label: \"Bills\", \n        dataField: \"Bills\", \n        inputFieldType: \"map-list\", \n        relatedCollection: \"Bills\", \n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Bill\",\n        relatedInputFields: [\n          {\n            label: 'Date', \n            dataField: 'Date', \n            inputFieldType: 'datepicker'\n          }, \n          {\n            label: 'Base Cost', \n            dataField: 'Cost', \n            inputFieldType: 'currency'\n          }, \n          {\n            label: 'Total Cost',\n            dataField: 'TotalCost',\n            inputFieldType: 'currency'\n          },\n          {\n            label: 'Disputed', \n            dataField: 'DisputedCost', \n            inputFieldType: 'currency'\n          }\n        ], \n        tab: \"BILLING\",\n        tabLabel: \"BILLING\", \n      },\n      {\n        label: 'Notes',\n        inputFieldType: 'tabTitle'\n      },\n      { \n        label: \"\", \n        dataField: \"Notes\", \n        inputFieldType: \"map-list\", \n        relatedCollection: \"Notes\", \n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Note\",\n        relatedInputFields: [\n          {\n            label: 'Date', \n            dataField: 'Date', \n            inputFieldType: 'datepicker'\n          }, \n          {\n            label: 'Note', \n            dataField: 'NoteBody', \n            inputFieldType: 'text-area'\n          }, \n        ], \n        tab: \"NOTES\",\n        tabLabel: \"NOTES\", \n      },\n      \n    ]\n    const ticketDetailFields = [\n    \n      { \n        label: \"Ticket Number\", \n        dataField: \"TicketNum\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\",\n        isHeader: true \n      },\n      { \n        label: \"Service Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: \"\", /** SET BY HANDLEINITIALFIELDMAPPING FN */\n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          },\n        ],\n        relatedDataType: \"Location\",\n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\"  \n      },\n      { \n        label: \"Service Location ID\", \n        dataField: \"LocationID\", \n        visible: false, \n        inputSource: locations, \n        inputID: \"ID\", \n        inputValue: \"id\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Related Account\", \n        dataField: \"AccountNum\",\n        visible: true, \n        inputFieldType: \"related-select\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"AccountNum\",\n        relatedCollection: \"Accounts\", \n        relatedDataField: \"AccountID\",\n        relatedInputLabel: \"Account Number\",\n        relatedInputFields: [\n          {\n            label: 'Account Number',\n            dataField: 'AccountNum',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Account',\n        tab: 'BILLING',\n        tabLabel: 'BILLING'\n      },\n      { \n        label: \"Related Account ID\", \n        dataField: \"AccountID\", \n        visible: false, \n        inputSource: accounts, \n        inputID: \"ID\", \n        inputValue: \"id\", \n        tab: \"BASIC INFO\" \n      },\n\n      { \n        label: \"Related Service\", \n        dataField: \"ServiceAssetID\", \n        inputFieldType: \"related-select\", \n        inputSource: services, \n        inputID: \"id\", \n        inputValue: \"AssetID\", \n        relatedCollection: \"Services\",\n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Related Asset\",\n        relatedInputFields: [\n          {\n            label: 'Asset ID',\n            dataField: 'AssetID',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Service',\n        tab: \"DETAILS\",  \n        tabLabel: 'DETAILS'\n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\"\n      },\n      { \n        label: \"Date Submitted\", \n        dataField: \"DateSubmitted\", \n        inputFieldType: \"datepicker\", \n        tab: \"BASIC INFO\"\n      },\n      { \n        label: \"Type\", \n        dataField: \"Type\", \n        inputFieldType: \"select\",\n        inputID: 'Name',\n        inputValue: 'Value', \n        inputSource: [\n          { \n            Name: \"Service\",\n            Value: \"Service\" \n          },\n          { \n            Name: \"Billing\",\n            Value: \"Billing\" \n          },\n          { \n            Name: \"Disconnect\",\n            Value: \"Disconnect\" \n          }\n        ], \n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\" \n      },\n      { \n        label: \"Status\", \n        dataField: \"Status\", \n        inputFieldType: \"select\",\n        inputID: 'Name', \n        inputValue: 'Value', \n        inputSource: [\n          { \n            Name: \"Submitted\",\n            Value: \"Submitted\" \n          },\n          { \n            Name: \"In Process\",\n            Value: \"In Process\" \n          },\n          { \n            Name: \"Completed\",\n            Value: \"Completed\" \n          },\n          { \n            Name: \"Closed\",\n            Value: \"Closed\" \n          }\n        ],  \n        tab: \"BASIC INFO\",\n\n      },\n      { \n        label: \"Details\", \n        dataField: \"Details\", \n        inputFieldType: \"text-area\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Notes\", \n        dataField: \"NoteID\", \n        inputFieldType: \"map-list\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"TicketID\", \n        relatedCollection: \"Notes\",\n        relatedDataField: \"NoteID\",\n        relatedInputLabel: \"Notes\",\n        relatedInputFields: [\n          {\n            label: 'Date',\n            dataField: 'Date',\n            inputFieldType: 'datepicker'\n          },\n          {\n            label: 'Note',\n            dataField: 'Note',\n            inputFieldType: 'textarea'\n          }\n        ], \n        relatedDataType: 'Note',\n        tab: \"NOTES\",  \n        tabLabel: 'NOTES'\n      },\n      \n    ]\n    const accountDetailFields = [\n    \n      { \n        label: \"Account Number\", \n        dataField: \"AccountNum\", \n        inputFieldType: \"text\",\n        isHeader: true, \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\",\n        inputSource: vendorList,  \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\"\n      },\n      { \n        label: \"Date Billing Started\", \n        dataField: \"BillingStartDate\", \n        inputFieldType: \"datepicker\", \n        tab: \"DETAILS\"\n      },\n      { \n        label: \"Type\", \n        dataField: \"Type\", \n        inputFieldType: \"text\", \n        tab: \"DETAILS\" \n      },\n      { \n        label: \"Related Services\", \n        dataField: \"Services\", \n        inputFieldType: \"map-list\", \n        inputSource: \"\", \n        inputID: \"id\", \n        inputValue: \"AssetID\", \n        relatedCollection: \"Services\",\n        relatedDataField: \"AccountID\",\n        relatedInputLabel: \"Related Asset\",\n        relatedInputFields: [\n          {\n            label: 'Asset ID',\n            dataField: 'AssetID',\n            inputFieldType: 'text'\n          },\n          {\n            label: 'Service Location',\n            dataField: 'LocationName',\n            inputFieldType: 'text'\n          },\n          {\n            label: 'Group',\n            dataField: 'GroupNum',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Service',\n        tab: \"BASIC INFO\",  \n        tabLabel: 'BASIC INFO',\n        hasBreakBefore: true\n      },\n      { \n        label: \"Bills\", \n        dataField: \"Bills\", \n        inputFieldType: \"map-list\", \n        relatedCollection: \"Bills\", \n        relatedDataField: \"AccountID\",\n        relatedInputFields: [\n          {\n            label: 'Date', \n            dataField: 'Date', \n            inputFieldType: 'datepicker'\n          }, \n          {\n            label: 'Sub Account', \n            dataField: 'SubAccountNum', \n            inputFieldType: 'text'\n          },\n          {\n            label: 'Asset ID', \n            dataField: 'AssetID', \n            inputFieldType: 'text'\n          },\n          {\n            label: 'Cost', \n            dataField: 'Cost', \n            inputFieldType: 'currency'\n          },                     \n        ], \n        tab: \"BILLING\",\n        tabLabel: \"BILLING\",\n      },\n      \n    ]\n    const orderDetailFields = [\n      { \n        label: \"Service Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: \"\", /** SET BY HANDLEINITIALFIELDMAPPING FN */\n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          }\n        ],\n        relatedDataType: \"Location\",\n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\"  \n      },\n      { \n        label: \"Order Number\", \n        dataField: \"OrderNum\", \n        inputFieldType: \"text\",\n        isHeader: true, \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Date Ordered\", \n        dataField: \"OrderDate\", \n        inputFieldType: \"datepicker\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Service Name\", \n        dataField: \"VendorServiceName\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\" \n      },\n      {\n        label: \"Order Type\",\n        dataField: \"Type\",\n        visible: false,\n        inputField: \"select\",\n        inputID: \"Name\",\n        inputValue: \"Value\",\n        inputSource: [\n          {\n            Name: 'New',\n            Value: 'New'\n          },\n          {\n            Name: 'Change',\n            Value: 'Change'\n          },\n          {\n            Name: 'Disconnect',\n            Value: 'Disconnect'\n          }\n        ],\n        tab: \"BASIC INFO\"\n      },\n      { \n        label: \"Monthly Cost\", \n        dataField: \"MRC\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Status\", \n        dataField: \"Status\", \n        inputFieldType: \"select\", \n        inputID: \"id\", \n        inputValue: \"Name\", \n        inputSource: [\n          {\n            Name: \"Ordered\",\n            Value: \"Ordered\"\n          },\n          {\n            Name: \"Completed\",\n            Value: \"Completed\"\n          },\n          {\n            Name: \"Cancelled\",\n            Value: \"Cancelled\"\n          }\n        ], \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Bandwidth\", \n        dataField: \"Bandwidth\", \n        inputFieldType: \"text\", \n        tab: \"DETAILS\" \n      },\n      { \n        label: \"Related Service\", \n        dataField: \"AssetID\", \n        inputFieldType: \"related-select\", \n        inputSource: services, \n        inputID: \"id\", \n        inputValue: \"AssetID\", \n        relatedCollection: \"Services\",\n        relatedDataField: \"ServiceID\",\n        relatedInputLabel: \"Related Asset\",\n        relatedInputFields: [\n          {\n            label: 'Asset ID',\n            dataField: 'AssetID',\n            inputFieldType: 'text'\n          }, \n          {\n            label: 'Location',\n            dataField: 'LocationName',\n            inputFieldType: 'text'\n          }\n        ], \n        relatedDataType: 'Service',\n        tab: \"DETAILS\",  \n        tabLabel: 'DETAILS'\n      },\n      { \n        label: \"Details\", \n        dataField: \"Details\", \n        inputFieldType: \"array-list\", \n        tab: \"DETAILS\" \n      },\n      {\n        label: \"Notes\",\n        dataField: \"Notes\",\n        inputFieldType: \"text-area\",\n        tab: \"NOTES\"\n      }\n    ]\n    const billsDetailFields = [\n      { \n        label: \"Location\", \n        dataField: \"LocationName\", \n        inputFieldType: \"related-select\", \n        inputSource: \"\", /** SET BY HANDLEINITIALFIELDMAPPING FN */\n        inputID: \"id\", \n        inputValue: \"Name\",\n        relatedCollection: \"Locations\", \n        relatedDataField: \"LocationID\",\n        relatedInputLabel: \"Location Name\",\n        relatedInputFields: [\n          {\n            label: 'Location Name',\n            dataField: 'Name',\n            inputFieldType: 'text'\n          },\n          {\n            label: \"Address 1\",\n            dataField: \"Address1\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Address 2\",\n            dataField: \"Address2\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"City\",\n            dataField: \"City\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"State\",\n            dataField: \"State\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Province/Region\",\n            dataField: \"Region\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Zip\",\n            dataField: \"Zip\",\n            inputFieldType: \"text\"\n          },\n          {\n            label: \"Country\",\n            dataField: \"Country\",\n            inputFieldType: \"text\"\n          }\n        ],\n        relatedDataType: \"Location\",\n        tab: \"BASIC INFO\",\n        tabLabel: \"BASIC INFO\"  \n      },\n      { \n        label: \"Account Number\", \n        dataField: \"AccountNum\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Account ID\", \n        dataField: \"AccountID\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Vendor\", \n        dataField: \"Vendor\", \n        inputFieldType: \"select\", \n        inputSource: vendorList, \n        inputID: \"Name\", \n        inputValue: \"Value\", \n        tab: \"BASIC INFO\" \n      },\n      {\n        label: \"Asset ID\",\n        dataField: \"AssetID\",\n        inputField: \"text\",\n        tab: \"BASIC INFO\"\n      },\n      { \n        label: \"Amount Billed\", \n        dataField: \"Cost\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Total Billed\", \n        dataField: \"TotalCost\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Disputed Amount\", \n        dataField: \"DisputedCost\", \n        inputFieldType: \"currency\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Company Name\", \n        visible: false,\n        dataField: \"CompanyName\", \n        inputFieldType: \"text\", \n        tab: \"BASIC INFO\" \n      },\n      { \n        label: \"Company ID\", \n        visible: false,\n        dataField: \"CompanyID\", \n        inputFieldType: \"text\",  \n        tab: \"BASIC INFO\" \n      },\n  \n    ]\n    const locationDetailFields = [\n      {\n        label: 'Location Name',\n        dataField: 'Name',\n        inputFieldType: 'text',\n        tab: 'BASIC INFO',\n        isHeader: true\n      },\n      {\n        label: 'Address 1',\n        dataField: 'Address1',\n        inputFieldType: 'text',\n        tab: 'BASIC INFO',\n      },\n      {\n        label: 'Address 2',\n        dataField: 'Address2',\n        inputFieldType: 'text',\n        tab: 'BASIC INFO'\n      },\n      {\n        label: 'City',\n        dataField: 'City',\n        inputFieldType: 'text',\n        tab: 'BASIC INFO'\n      },\n      {\n        label: 'State',\n        dataField: 'State',\n        inputFieldType: 'select',\n        inputSource: stateList,\n        inputValue: \"code\",\n        tab: 'BASIC INFO'\n      },\n      {\n        label: \"Province/Region\",\n        dataField: \"Region\",\n        inputFieldType: \"text\",\n        tab: 'BASIC INFO'\n      },\n      {\n        label: \"Zip\",\n        dataField: \"Zip\",\n        inputFieldType: \"text\",\n        tab: 'BASIC INFO'\n      },\n      {\n        label: \"Country\",\n        dataField: \"Country\",\n        inputFieldType: \"text\",\n        tab: \"BASIC INFO\"\n      },\n      {\n        label: 'Full Address',\n        dataField: 'FullAddress',\n        inputFieldType: 'concat',\n        visible: false,\n        tab: 'BASIC INFO'\n      },\n    ]\n    const notesDetailFields = [\n      {\n        label: 'Note Date',\n        dataField: 'Date',\n        inputFieldType: 'datepicker',\n        tab: 'NOTES',\n        tabLabel: 'NOTES'\n      },\n      {\n        label: 'Note',\n        dataField: 'NoteBody',\n        inputFieldType: 'text-area',\n        tab: 'NOTES',\n        tablLabel: 'NOTES'\n      },\n      {\n        label: 'Attached to',\n        dataField: 'AttachedTo',\n        inputFieldType: 'text'\n      }\n    ]\n\n    const contractDetailFields = [\n      {\n        label: 'Contract Name',\n        dataField: 'Name',\n        inputFieldType: 'text',\n        tab: 'BASIC INFO',\n        tabLabel: 'BASIC INFO',\n        isHeader: true\n      },\n      {\n        label: 'Vendor',\n        dataField: 'Vendor',\n        inputFieldType: 'select',\n        inputSource: vendorList,\n        inputID: \"Name\", \n        inputValue: \"Value\",\n        tab: 'BASIC INFO',\n        tablLabel: 'BASIC INFO'\n      },\n      {\n        label: 'Date Signed',\n        dataField: 'Date',\n        inputFieldType: 'datepicker',\n        tab: 'BASIC INFO',\n        tabLabel: 'BASIC INFO'\n      },\n      {\n        label: 'Term',\n        dataField: 'Term',\n        inputFieldType: 'select',\n        inputSource: [\n          {\n            Name: 'Month to Month',\n            Value: 'Month to Month'\n          },\n          {\n            Name: '12',\n            Value: '12'\n          },\n          {\n            Name: '24',\n            Value: '24'\n          },\n          {\n            Name: '36',\n            Value: '36'\n          },\n          {\n            Name: '48',\n            Value: '48'\n          },\n          {\n            Name: '60',\n            Value: '60'\n          }\n        ],\n        inputID: \"Name\", \n        inputValue: \"Value\",\n        tab: 'BASIC INFO',\n        tabLabel: 'BASIC INFO'\n      },\n      {\n        label: 'File',\n        dataField: 'FileURL',\n        inputFieldType: 'file-field',\n        tab: 'BASIC INFO',\n        tabLabel: 'BASIC INFO'\n      }\n    ]\n  const userDetailFields = [\n    {\n      label: 'Email Address',\n      dataField: 'Email',\n      inputFieldType: 'text',\n      tab: \"BASIC INFO\",\n      tabLabel: \"BASIC INFO\"\n    },\n    {\n      label: 'First Name',\n      dataField: 'FirstName',\n      inputFieldType: 'text',\n      tab: \"BASIC INFO\",\n      tabLabel: \"BASIC INFO\"\n    },\n    {\n      label: 'Last Name',\n      dataField: 'LastName',\n      inputFieldType: 'text',\n      tab: \"BASIC INFO\",\n      tabLabel: \"BASIC INFO\"\n    },\n    {\n      label: 'Type',\n      dataField: \"Type\",\n      inputFieldType: 'select',\n      inputSource: [\n        {\n          Name: 'User',\n          Value: 'User'\n        },\n        {\n          Name: 'Agent',\n          Value: 'Agent'\n        }\n      ],\n      inputID: \"Name\",\n      inputValue: \"Value\",\n      tab: \"BASIC INFO\",\n      tabLabel: \"BASIC INFO\"\n    },\n    \n  ]\n\n  const contactDetailFields = [\n    {\n      label: 'First Name',\n      dataField: 'FirstName',\n      inputFieldType: 'text',\n      tab: 'BASIC INFO',\n      tabLabel: 'BASIC INFO'\n    },\n    {\n      label: 'Last Name',\n      dataField: 'LastName',\n      inputFieldType: 'text',\n      tab: 'BASIC INFO',\n      tabLabel: 'BASIC INFO'\n    },\n    {\n      label: 'Company Name',\n      dataField: 'CompanyName',\n      inputFieldType: 'text',\n      tab: 'BASIC INFO',\n      tabLabel: 'BASIC INFO'\n    },\n    {\n      label: 'Title/Position',\n      dataField: 'Title',\n      inputFieldType: 'text',\n      tab: 'BASIC INFO',\n      tabLabel: 'BASIC INFO'\n    },\n    {\n      label: 'Phone',\n      dataField: 'Phone',\n      inputFieldType: 'text',\n      tab: 'BASIC INFO',\n      tabLabel: 'BASIC INFO'\n    },\n    {\n      label: 'Email',\n      dataField: 'Email',\n      inputFieldType: 'text',\n      tab: 'BASIC INFO',\n      tabLabel: 'BASIC INFO'\n    },\n  ]\n\n\nexport {\n    serviceGridColumns, \n    serviceMobileGridColumns,\n    serviceGroupByFields,\n    locationGridColumns,\n    locationMobileGridColumns,\n    locationGroupByFields,\n    locationDetailFields,\n    ticketGridColumns, \n    ticketGroupByFields,\n    ticketMobileGridColumns,\n    orderGridColumns, \n    orderMobileGridColumns,\n    accountGridColumns, \n    accountGroupByFields,\n    accountMobileGridColumns,\n    userGridColumns,\n    userDetailFields, \n    contractGridColumns,\n    contractMobileGridColumns,\n    contractDetailFields,\n    contractGroupByFields,\n    serviceDetailFields,\n    ticketDetailFields,\n    accountDetailFields,\n    orderDetailFields,\n    billsDetailFields,\n    contactDetailFields\n}\n","import React from 'react'\n\nconst FieldLabel = ({size, children}) => {\n  return(\n    <div className={size}>\n      {children}\n    </div>\n  )\n}\nexport default FieldLabel","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\n\nimport { stateContext } from '../Contexts/stateContext'\nimport { db, store } from '../Contexts/firebase'\nimport {\n  serviceDetailFields,\n  orderDetailFields,\n  accountDetailFields,\n  ticketDetailFields,\n  billsDetailFields,\n  locationDetailFields,\n  contractDetailFields,\n  userDetailFields } from '../Contexts/initialFields'\nimport {stateList} from '../Contexts/states.js'\n\nimport Columns from '../Components/Layout/Columns'\nimport Column from '../Components/Layout/Column'\nimport Page from '../Components/Page'\nimport DrawerComponent from '../Components/Layout/DrawerComponent'\n\nimport Loading from '../Components/Loading'\n\nimport PageField from '../Components/Layout/PageField'\nimport FieldLabel from '../Components/Layout/FieldLabel'\nimport Field from '../Components/Layout/Field'\nimport DeleteButton from '../Components/Buttons/DeleteButton'\nimport DetailViewDropDown from '../Components/Tabs/DetailViewDropDown'\n\nimport PageInputFields from '../Components/Forms/PageInputFields'\nimport RelatedPageInputFields from '../Components/Forms/RelatedPageInputFields'\nimport MonthlyCostGraph from '../Components/Graphs/MonthlyCostGraph'\nimport Footer from '../Footer'\n\nconst DetailModule = (state) => {\n\n  const params = useParams()\n  const navigate = useNavigate()\n  \n  const { isModule } = params.isModule && params || null\n\n  const userContext = useContext(stateContext)\n\n  const { serviceTypes, \n          accessTypes, \n          vendorList, \n          isStyle,\n          setBills,\n          setOrders,\n          setCurrentDate,\n          setLocations,\n          setAccounts,\n          setServices,\n          setUsers,\n          setNotes } = userContext\n\n  const { locations,\n          services, \n          orders, \n          accounts,\n          tickets,\n          contracts,\n          users,\n          bills,\n          notes,\n          currentCompany,\n          currentUser } = userContext.userSession\n  \n  const { currentCompanyID } = params\n  const {isNew}  = state.location.state || false \n  const {isDrawerActive} = state.location.state || false\n  \n  const [data, setData] = useState(\"\")\n  const [active, setActive] = useState(\"\")\n  const [activeSubtitle, setActiveSubtitle] = useState(\"\")\n  const [docIsNew, setDocIsNew] = useState()\n  const [loading, setLoading] = useState(true)\n  const [updated, setUpdated] = useState(false)\n  const [pageFields, setPageFields] = useState([])\n  const [viewDropDown, setViewDropDown] = useState(false)\n  \n  const [pageSuccess, setPageSuccess] = useState(false)\n  const [pageError, setPageError] = useState(false)\n    \n  const [relatedInputData, setRelatedInputData] = useState(\"\")\n  const [relatedSubmitData, setRelatedSubmitData] = useState(\"\")\n  const [isRelatedDrawerOpen, setIsRelatedDrawerOpen] = useState(false)\n  \n  const [tab, setTab] = useState(\"BASIC INFO\")\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n  \n  const [addRelatedValue, setAddRelatedValue] = useState()\n  const [isRelatedActive, setIsRelatedActive] = useState(false)\n  \n  useEffect(() => {\n    \n    setLoading(true)\n    handlePageFields(isModule)\n    checkForNew(isDrawerActive, isNew)\n    fetchPage()\n    fetchBills()\n    fetchNotes()\n    \n  }, [])\n\n  useEffect(() => {\n    setPageFields()\n    checkForNew(isDrawerActive, isNew)\n    setLoading(true)\n    handlePageFields(isModule)\n    fetchPage()\n    fetchBills()\n    fetchNotes()\n    \n  }, [isModule])\n\n  useEffect(() => {\n    \n    handlePageFields(isModule)\n    fetchBills()\n    fetchNotes()\n    setTab(\"BASIC INFO\")\n    handleInitialFieldMapping(\"LocationName\", locations, pageFields)\n    handleInitialFieldMapping(\"OrderNum\", orders, pageFields)\n    handleInitialFieldMapping(\"Services\", services, pageFields)\n    handleInitialFieldMapping(\"AccountNum\", accounts, pageFields)\n    handleInitialFieldMapping(\"Bills\", bills, pageFields)\n    handleInitialFieldMapping(\"Notes\", notes, pageFields)\n    handleInitialFieldMapping(\"State\", stateList, pageFields)\n    handleInitialFieldMapping(\"TicketNum\", tickets, pageFields)\n    handleSetHeader()\n    setUpdated(false)\n    handleInitialFields()\n    handleFinishedLoading()\n    \n  },[loading])\n  \n\n/** Map-List - Side Effect to inherit related data  */\n\n  useEffect(() => {\n    relatedInputData.pageFields && relatedInputData.pageFields ? \n    handleInheritedData(relatedInputData) : \"\"\n  },[relatedInputData])\n\n/** Set Page Fields based on initialFields */\n  const handlePageFields = (isModule) => {\n    \n    switch (isModule) {\n      case \"Services\": \n        return (\n          setPageFields(serviceDetailFields) \n        )\n      case \"Accounts\":\n        return (\n          setPageFields(accountDetailFields)\n        )\n      case \"Orders\":\n        return (\n          setPageFields(orderDetailFields)\n        )\n      case \"Tickets\":\n        return (\n          setPageFields(ticketDetailFields)\n        )\n      case \"Locations\":\n        return (\n          setPageFields(locationDetailFields)\n        )\n      case \"Contracts\":\n        return (\n          setPageFields(contractDetailFields)\n        )\n      case \"Bills\":\n        return (\n          setPageFields(billsDetailFields)\n        )\n      case \"Notes\": \n        return (\n          setPageFields(notesDetailFields)\n        )\n      case \"Users\":\n        return (\n          setPageFields(userDetailFields)\n        )\n    }\n  }\n\n\n  const checkForNew = (isDrawerActive, isNew) => {\n    isDrawerActive === \"true\" ? setIsDrawerOpen(true) : \"\"\n    isNew === \"true\" ? \n      setDocIsNew(true) \n      : \"\"\n  }\n\n  const handleInitialFields = () => {\n    \n    setData({\n      ...data, \n      ['CreatedDate']: setCurrentDate(),\n      ['CreatedBy']: currentUser,\n      ['CompanyID']: currentCompanyID, \n      ['CompanyName']: currentCompany\n    }) \n  }\n\n  const handleSetHeader = () => {\n    const subtitle = pageFields.filter(f => f.isHeader === true).map(field => setActiveSubtitle(field.dataField))\n  }\n\n/** Map inputSource arrays for initialFields */\n  const handleInitialFieldMapping = (field, value, arr) => {\n\n    const indexRef = arr.findIndex(i => i.dataField === field)\n    arr[indexRef] = {...arr[indexRef], inputSource: value}\n  \n  }\n\n/** Fetch Document from Firebase */  \n  const fetchPage = async() => {\n   \n    const pageFieldsRef = await db.collection(isModule).doc(params.id).get() \n    const data = pageFieldsRef.data()\n    const id = pageFieldsRef.id\n    setActive({id: id, ...data})\n    setData(data)\n  \n  }\n\n  const fetchBills = async() => {\n    const billsRef = await db.collection(\"Bills\").where(\"ServiceID\", \"==\", params.id).get()\n    const bills = await billsRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setBills(bills)\n\n  } \n\n  const fetchOrders = async() => {\n    const ordersRef = await db.collection(\"Orders\").where(\"ServiceID\", \"==\", params.id).get()\n    const orders = await ordersRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setOrders(orders)\n\n  } \n  \n  const fetchNotes = async() => {\n    const notesRef = await db.collection(\"Notes\").where(\"ServiceID\", \"==\", params.id).get()\n    const notes = await notesRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setNotes(notes)\n\n  } \n\n  const handleFileChange = async(e) => {\n    const file = e.target.files[0]\n    const imageRef = store.ref(currentCompanyID).child(`${data.Name && data.Name}'-'${currentCompany}`)\n    await imageRef.put(file)\n    const fileURL = await imageRef.getDownloadURL() \n     setData({\n       ...data,\n       ['FileURL']: fileURL\n      })\n  }\n\n  const handleFinishedLoading = () => {\n    setTimeout(() => {setLoading(false)}, 1000)\n  }\n\n  const handleSubmit = () => {\n      \n      docIsNew === true ? \n      handleSubmitNew(data)\n      : \n      handleSubmitUpdated(data)\n        \n  }\nconsole.log(data)\n  const handleSubmitNew = async(data) => {\n    \n    try {\n      \n      await db.collection(isModule).doc().set(data) \n      \n      setPageSuccess(\"Changes Saved!\")\n      setTimeout(() => {setPageSuccess(false)}, 1000)\n    } catch {\n      setPageError(\"Error saving\")\n      setTimeout(() => {setPageError(false)}, 1000)\n    } \n    setDocIsNew(false) \n    setUpdated(true)\n    setIsDrawerOpen(!isDrawerOpen)\n  }\n\n  const handleSubmitUpdated = async() => { \n    \n      try {\n        \n        await db.collection(isModule).doc(params.id).update({\n          ...data, \n          ['LastUpdated']: setCurrentDate(), \n          ['LastUpdateBy']: currentUser\n        })\n        \n        setPageSuccess(\"CHANGES SAVED!\")\n        setTimeout(() => {setPageSuccess(false)}, 1000)\n      } catch {\n        setPageError(\"ERROR SAVING CHANGES\")\n      } \n      setDocIsNew(false) \n      setUpdated(true)\n      setIsDrawerOpen(!isDrawerOpen)\n  }\n\n  const handleRelatedSubmit = async() => {\n    \n    try {\n    await db.collection(relatedInputData.collection).doc().set(relatedSubmitData)\n      setPageSuccess(`New ${relatedInputData.label} Saved`)\n      setTimeout(() => {setPageSuccess(false)}, 1000)\n    } catch {\n      setPageError(`Error Saving New ${relatedInputData.label}`)\n      setTimeout(() => {setPageError(false)}, 1000)\n    }  \n      setIsRelatedDrawerOpen(!isRelatedDrawerOpen)\n      setUpdated(true)\n      setLoading(!loading)  \n  }\n\n\n\nconst handleToggle = () => {\n  setIsDrawerOpen(!isDrawerOpen)\n}\n\nconst handleChange = (e) => {\n  const {name, value} = e.target\n  console.log(name, value)\n  setActive({...active, [name]: value})\n  setData({...data, [name]: value})\n}\n\nconst handleRelatedSelectChange = (e, relatedDataField) => {\n  e.preventDefault()\n  const selectedValue = e.target.options[e.target.selectedIndex].text\n  const id = e.target.options[e.target.selectedIndex].id\n  const {name, relatedName} = relatedDataField\n  const {value} = e.target\n  \n  console.log({[relatedName]: id, [name]: value})\n  setActive({...active, [relatedName]: id, [name]: value})\n  setData({...data, [relatedName]: id, [name]: value})\n  setUpdated(!updated)\n}\n\nconst handleGoBack = () => {\n  navigate(-1)\n}\n\nconst handleClick = (e) => {\n  setLoading(true)\n  navigate({\n    pathname: `/${e.colRef}/${currentCompanyID}/${e.id}`,\n    state: {\n    services: services,\n    locations: locations,\n    accounts: accounts,\n    }\n  }) \n}\n\nconst handleRelatedDrawer = (field) => {\n\n  setRelatedInputData({ \n    ...relatedInputData,\n    collection: field.relatedCollection, \n    pageFields: field.relatedInputFields, \n    label: field.label\n  })\n\n  setRelatedSubmitData({\n    [ 'CompanyID' ]: currentCompanyID,\n    [ 'CompanyName' ]: currentCompany,\n    [ 'CreatedDate' ]: setCurrentDate(),\n    [ 'CreatedBy' ]: currentUser,\n    [field.relatedDataField]: params.id,\n})\n\nsetIsRelatedDrawerOpen(true)\n  \n}\n\nconst handleRelatedInputChange = (e) => {\n  \n  const { name, value } = e.target\n  setRelatedSubmitData({\n    ...relatedSubmitData,\n      [name]: value,\n    })\n}\n\nconst handleInheritedData = (e) => {\n\n  const {pageFields} = e \n  const relatedFields = pageFields.filter(f => \n    f.value != undefined).map(rel => ({\n      [rel.docField]:\n      active[rel.value]\n    })\n  )\n  \n  const merged = Object.assign({}, ...relatedFields, relatedSubmitData)\n\n  setRelatedSubmitData({...relatedSubmitData, ...merged})\n\n  }\n\nreturn (\n    <Loading active={loading}>\n\n    <Page \n      title={currentCompany}\n      subtitle={active && [active].map(item => item[activeSubtitle] && item[activeSubtitle])} \n      status=\"view\" \n      handleToggle={()=> handleToggle()} \n      pageSuccess={pageSuccess} \n      pageError={pageError}\n      handleGoBack={handleGoBack}\n    >\n      {userContext && userContext.userSession != undefined ? \n        <>\n          \n          <DetailViewDropDown \n            views={['BASIC INFO', 'DETAILS', 'SUPPORT', 'BILLING', 'NOTES']}\n            activeView='BASIC INFO'\n            handleToggle={()=>setViewDropDown(!viewDropDown)}\n            isActive={viewDropDown}\n            handleView={(e)=>setTab(e)}\n            value={active && [active].map(item => item[activeSubtitle] && item[activeSubtitle])}\n            title={isModule}\n            handleEditDrawer={()=>handleToggle()}\n          />\n          <div className=\"box is-rounded mx-2\" style={{minHeight: '50vh'}}>\n            <article className=\"hero title is-small is-size-5\"> \n              {tab}\n            </article>\n            <div className=\"block\">\n              {/** Refactor as ViewPageFields Component */}\n              {active && pageFields.map(field => \n                <>\n                  {[active].map(docItem => \n                    <div className={field.visible != false & field.tab === tab ? \"\" : \"is-hidden\" }> \n                    <hr className={field.hasBreakBefore === true ? \"\" : \"is-hidden\"} />\n                    \n                    <Columns options=\"is-mobile\">\n                    {field.inputFieldType === \"map-list\" ? \n                            \"\" :\n                      <Column size=\"is-two-fifths pl-5\">\n\n                        <FieldLabel>\n                          \n                              <Columns options=\"is-mobile\">\n                                <Column size=\"is-11\">\n                                  <div key={field.label}>{field.label}</div>\n                                </Column>\n                                <Column>:</Column>\n                              </Columns>\n                          \n                        </FieldLabel>\n\n                      </Column>\n                    }\n                      <Column size=\"pl-5\">\n                        \n                          {field.inputFieldType === \"map-list\" ? \n                            <>\n                              <div key={field.label}>{field.label}\n                                <a className=\"link has-text-weight-normal is-size-7 pl-2\" \n                                  onClick={() => handleRelatedDrawer(field)}>(add)</a> </div>\n                            </> : null}\n                          \n                          <PageField \n                            field={field}\n                            fieldData={docItem}\n                            relatedDataMap={\n                                field.inputSource && field.inputSource.filter(item => \n                                  item[field.relatedDataField] === docItem.id).map(i => ({...i}))\n                              }\n                            toggleViewDrawer={()=>handleToggle()}\n                            toggleFieldDropDown={()=>setIsRelatedActive(!isRelatedActive)}\n                            isViewRelatedActive={isRelatedActive}\n                            handleClick={(e)=>handleClick(e)}\n                          />\n                       \n                      </Column>\n                    </Columns>\n                      \n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n              <DrawerComponent \n                title=\"Edit\"\n                checked={isDrawerOpen}\n                handleClose={()=>setIsDrawerOpen(!isDrawerOpen)} \n                direction=\"right\"\n                handleSubmit={()=> handleSubmit()}\n              >\n\n                <PageInputFields \n                  checked={isDrawerOpen}\n                  handleClose={()=>setIsDrawerOpen(!isDrawerOpen)}\n                  handleChange={(e)=> handleChange(e)}\n                  handleRelatedSelectChange={(e, related)=> handleRelatedSelectChange(e, related)}\n                  handleFileChange={(e)=> handleFileChange(e)}\n                  pageFields={pageFields}\n                  active={active}\n                  tab={tab}\n                  addRelatedValue={addRelatedValue}\n                  handleAddRelatedValue={(e)=>handleRelatedDrawer(e)}\n                  resetAddRelatedValue={()=>setAddRelatedValue(\"\")}\n                  handleUpdated={()=>setUpdated(!updated)}\n                  currentCompany={currentCompany}\n                  currentCompanyID={currentCompanyID}\n                />\n\n                \n\n              </DrawerComponent>\n\n              \n\n              <DrawerComponent\n                title=\"Add New\"\n                checked={isRelatedDrawerOpen}\n                direction=\"right\"\n                handleClose={()=>setIsRelatedDrawerOpen(!isRelatedDrawerOpen)}\n                handleSubmit={()=>handleRelatedSubmit()}\n              >\n{/** \n                <QuickAdd \n                  colRef={relatedInputData.collection}\n                  dataField={relatedInputData.field}\n                  label={relatedInputData.label}\n                  handleRelatedInputChange={(e)=>handleRelatedInputChange(e)}\n                />\n*/}\n                <RelatedPageInputFields \n                  relatedFields={relatedInputData.pageFields}\n                  handleChange={(e)=>handleRelatedInputChange(e)}\n                  handleRelatedField={(e)=> handleRelatedField(e)}\n                  handleUpdated={()=>setUpdated(!updated)}\n                  activeData={active}\n                  relatedData={relatedInputData}\n                />\n\n                \n              </DrawerComponent>\n\n          </div>\n          <Columns>\n              {/** Refactor this as LastUpdatedComponent Component with Hook */}\n              <Column size=\"is-narrow\">\n                <div className=\"is-size-7 ml-5\" style={{fontVariant: [ 'small-caps' ]}}>\n                  last updated: {active.LastUpdated && active.LastUpdated}\n                </div>\n              </Column>\n              <Column size=\"is-narrow\">\n                <div className=\"is-size-7 ml-5\" style={{fontVariant: [ 'small-caps' ]}}>\n                  updated by: {active.LastUpdateBy && active.LastUpdateBy}</div>\n                </Column>\n             \n            </Columns>\n        </> : \n          <div className=\"tile warning\"> No record to display </div>\n      }    \n\n      {\n      /**<MonthlyCostGraph \n        id={params.id}\n      />*/\n      }\n\n    </Page>\n    <Footer \n      handleEditButton={(e)=> setIsDrawerOpen(e)}\n      isDrawerOpen={isDrawerOpen}\n      isBookmarked={active.isBookmarked}\n      tags={active.Tags}\n      handleUpdated={fetchPage}\n    />\n    </Loading>\n    \n  )\n}\nexport default DetailModule","import React from 'react'\n\nconst CheckIfNeedsCache = ({value, setValue, fallbackValue, handleSetCache, children}) => {\n  value != undefined & value != \"\" ? value : fallbackValue != undefined ? handleSetCache(fallbackValue, setValue) : null\n  return(\n    <>\n      {children}\n    </>\n  ) \n}\nexport default CheckIfNeedsCache","import React, {useEffect, useState, useRef, useContext, forwardRef} from 'react'\nimport {useNavigate} from 'react-router-dom'\n\nimport {db} from '../Contexts/firebase'\nimport {stateContext} from '../Contexts/stateContext'\n\nimport TextBox from '../Components/Forms/TextBox'\nimport TextArea from '../Components/Forms/TextArea'\nimport SelectInputProps from '../Components/Forms/SelectInputProps'\nimport TextInputAC from '../Components/Forms/TextInputAC'\nimport DrawerPage from '../Components/DrawerPage'\nimport Columns from '../Components/Layout/Columns'\nimport Column from '../Components/Layout/Column'\n\n\nconst QuickAdd = ({\n  colRef,\n  dataField,\n  label,\n  handleRelatedSubmit,\n  handleRelatedInputChange,\n}) => {\n\n  return (\n    <>\n    <TextBox title={label && label} name={dataField}  fieldChanged={(e)=>handleRelatedInputChange(e)} /> \n    </>\n  )\n}\nexport default QuickAdd","import React, {useState, useEffect, useContext, useRef} from 'react'\nimport {useParams, useNavigate} from 'react-router-dom'\n\nimport {stateContext} from '../Contexts/stateContext'\nimport { db } from '../Contexts/firebase'\nimport {\n  serviceDetailFields,\n  orderDetailFields,\n  accountDetailFields,\n  ticketDetailFields,\n  billsDetailFields } from '../Contexts/initialFields'\n\nimport Columns from '../Components/Layout/Columns'\nimport Column from '../Components/Layout/Column'\nimport Page from '../Components/Page'\nimport PageInputFields from '../Components/Forms/PageInputFields'\nimport DrawerComponent from '../Components/Layout/DrawerComponent'\nimport DeleteButton from '../Components/Buttons/DeleteButton'\n\nimport TabBar from '../Components/Tabs/TabBar'\n\nimport PageField from '../Components/Layout/PageField'\n\nimport Loading from '../Components/Loading'\nimport CheckIfNeedsCache from '../Components/Conditions/CheckIfNeedsCache'\nimport QuickAdd from './QuickAdd'\nimport FieldLabel from '../Components/Layout/FieldLabel'\n\n\nconst RelatedDetailModule = (state) => {\n\n  const params = useParams()\n  const navigate = useNavigate()\n  \n  const { isModule } = params.isModule && params || null\n\n  const userContext = useContext(stateContext)\n\n  const { serviceTypes, \n          accessTypes, \n          serviceStatusType,\n          vendorList, \n          isStyle,\n          setBills,\n          setCurrentDate,\n          setLocations,\n          setAccounts } = userContext\n\n  const { locations,\n          services, \n          orders, \n          accounts,\n          tickets,\n          bills,\n          currentCompany,\n          currentUser } = userContext.userSession\n  \n  const { currentCompanyID } = params\n  const {isNew}  = state.location.state || false \n  const {isDrawerActive} = state.location.state || false\n  const { cachedLocations } = state.location.state || []\n  const { cachedAccounts } = state.location.state || []\n  \n  const [data, setData] = useState(\"\")\n  const [active, setActive] = useState(\"\")\n  const [activeSubtitle, setActiveSubtitle] = useState(\"\")\n  const [docIsNew, setDocIsNew] = useState()\n  const [loading, setLoading] = useState(true)\n  const [updated, setUpdated] = useState(false)\n  const [pageFields, setPageFields] = useState([])\n  const [isQuickAddDataField, setIsQuickAddDataField] = useState(\"\")\n  const [isQuickAddDrawerOpen, setIsQuickAddDrawerOpen] = useState(false)\n  \n  const [pageSuccess, setPageSuccess] = useState(false)\n  const [pageError, setPageError] = useState(false)\n    \n  const [relatedInputData, setRelatedInputData] = useState(\"\")\n  const [isRelatedDrawerOpen, setIsRelatedDrawerOpen] = useState(false)\n  \n  const [tab, setTab] = useState(\"BASIC_INFO\")\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n  \n  const [addRelatedValue, setAddRelatedValue] = useState()\n  const [isRelatedActive, setIsRelatedActive] = useState(false)\n  \n\n  useEffect(() => {\n    handlePageFields()\n    checkForNew(isDrawerActive, isNew)\n    setLoading(true)\n    fetchPage()\n    fetchBills()\n    \n  }, [])\n\n  useEffect(() => {\n    \n    handlePageFields()\n    handleInitialFieldMapping(\"Vendor\", vendorList, pageFields)\n    handleInitialFieldMapping(\"LocationName\", locations, pageFields)\n    handleInitialFieldMapping(\"Type\", serviceTypes, pageFields)\n    handleInitialFieldMapping(\"AccessType\", accessTypes, pageFields)\n    handleInitialFieldMapping(\"Status\", serviceStatusType, pageFields)\n    handleInitialFieldMapping(\"OrderNum\", orders, pageFields)\n    handleInitialFieldMapping(\"ServiceID\", services, pageFields)\n    handleInitialFieldMapping(\"AccountNum\", accounts, pageFields)\n    handleInitialFieldMapping(\"Bills\", bills, pageFields)\n    handleSetHeader()\n    \n  },[loading])\n\n  useEffect(() => {\n\n    handlePageFields()\n    handleSetLastUpdatedFields()\n    handleInitialFieldMapping(\"Vendor\", vendorList, pageFields)\n    handleInitialFieldMapping(\"LocationName\", locations, pageFields)\n    handleInitialFieldMapping(\"Type\", serviceTypes, pageFields)\n    handleInitialFieldMapping(\"AccessType\", accessTypes, pageFields)\n    handleInitialFieldMapping(\"Status\", serviceStatusType, pageFields)\n    handleInitialFieldMapping(\"OrderNum\", orders, pageFields)\n    handleInitialFieldMapping(\"ServiceID\", services, pageFields)\n    handleInitialFieldMapping(\"AccountNum\", accounts, pageFields)\n    handleInitialFieldMapping(\"Bills\", bills, pageFields)\n    \n  },[updated])\n\n  const handlePageFields = () => {\n    switch (isModule) {\n      case \"Services\": \n        return (\n          setPageFields(serviceDetailFields) \n        )\n      case \"Accounts\":\n        return (\n          setPageFields(accountDetailFields)\n        )\n      case \"Orders\":\n        return (\n          setPageFields(orderDetailFields)\n        )\n      case \"Tickets\":\n        return (\n          setPageFields(ticketDetailFields)\n        )\n      case \"Bills\":\n        return (\n          setPageFields(billsDetailFields)\n        )\n    }\n  }\n\n  const checkForNew = (isDrawerActive, isNew) => {\n    isDrawerActive === \"true\" ? setIsDrawerOpen(true) : \"\"\n    isNew === \"true\" ? setDocIsNew(true) : \"\"\n  }\n\n  const handleSetHeader = () => {\n    const subtitle = pageFields.filter(f => f.isHeader === true).map(field => setActiveSubtitle(field.dataField))\n    setLoading(false)\n  }\n\n  const handleInitialFieldMapping = (field, value, arr) => {\n\n    const indexRef = arr.findIndex(i => i.dataField === field)\n    arr[indexRef] = {...arr[indexRef], inputSource: value}\n  \n  }\n  \n  const fetchPage = async() => {\n   \n    const pageFieldsRef = await db.collection(isModule).doc(params.id).get()\n    \n    const data = await pageFieldsRef.data()\n    const id = await pageFieldsRef.id\n    setActive({id: id, ...data})\n    setData(data)\n    console.log(\"fetch:\", active, data)\n  }\nconsole.log(\"after\", active, data)\n  const fetchBills = async() => {\n    const billsRef = await db.collection(\"Bills\").where(\"ServiceID\", \"==\", params.id).get()\n    const bills = await billsRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setBills(bills)\n    \n    await setLoading(false)\n  }  \nconsole.log(pageFields)\n  const handleSubmit = () => {\n    \n    \n      docIsNew === true ?\n        \n      handleSubmitNew(data) : handleSubmitUpdated(data)\n  }\n\n  const autoClose = () => {\n    setTimeout(() => {navigate(\"/dashboard\")}, 1500)\n  }\n\n  const handleSubmitNew = async(data) => {\n    try {\n      await db.collection(isModule).doc().set(data) \n      \n      setPageSuccess(\"Saved\")\n    } catch {\n      setPageError(\"Error saving\")\n    } \n    setDocIsNew(false) \n    setUpdated(true)\n    setIsDrawerOpen(!isDrawerOpen)\n  }\n\n  const handleSubmitUpdated = async(data) => { \n      try {\n        await db.collection(isModule).doc(params.id).update(data)\n        \n        setPageSuccess(\"Saved\")\n      } catch {\n        setPageError(\"Error saving\")\n      } \n      setDocIsNew(false) \n      setUpdated(true)\n      setIsDrawerOpen(!isDrawerOpen)\n  }\n  \n  const handleToggle = () => {\n    setIsDrawerOpen(!isDrawerOpen)\n  }\n\n\nconst handleSetLastUpdatedFields = () => {\n  setActive({\n    ...active,  \n    ['LastUpdated']: setCurrentDate(),\n    ['LastUpdatedBy']: currentUser,\n    ['CompanyID']: currentCompanyID, \n    ['CompanyName']: currentCompany\n  })\n  setData({\n    ...data, \n    ['LastUpdated']: setCurrentDate(),\n    ['LastUpdatedBy']: currentUser,\n    ['CompanyID']: currentCompanyID, \n    ['CompanyName']: currentCompany\n  })\n}  \n\nconst handleChange = (e) => {\n  const {name, value} = e.target\n  console.log(name, value)\n  setActive({...active, [name]: value})\n  setData({...data, [name]: value})\n  setUpdated(!updated)\n}\n\nconst handleRelatedSelectChange = (e, relatedDataField) => {\n  e.preventDefault()\n  const selectedValue = e.target.options[e.target.selectedIndex].text\n  const id = e.target.options[e.target.selectedIndex].id\n  const {name, relatedName} = relatedDataField\n  const {value} = e.target\n  \n  console.log({[relatedName]: id, [name]: value})\n  setActive({...active, [relatedName]: id, [name]: value})\n  setData({...data, [relatedName]: id, [name]: value})\n  setUpdated(!updated)\n}\n\nconst handleAddRelatedValue = (e) => {\n  console.log(e)\n  setAddRelatedValue(e)\n}\n\nconst handleSetCache = (value, setValue) => {\n  setValue(value)\n}\n\nconst handleClick = (e) => {\n  setLoading(true)\n  navigate({\n    pathname: `/${e.colRef}/${currentCompanyID}/${e.id}`,\n    state: {\n    \n    services: services,\n    locations: locations,\n    accounts: accounts\n    }\n  }) \n}\n\nconst handleRelatedSubmit = async() => {\n  console.log(relatedInputData)\n  try {\n  await db.collection(relatedInputData.collection).doc().set(relatedInputData.data)\n    setPageSuccess(`New ${relatedInputData.label} Saved`)\n  } catch {\n    setPageError(`Error Saving New ${relatedInputData.label}`)\n  }\n    \n    setUpdated(true)\n    \n}\n\nconst handleRelatedDrawer = (colRef, dataField, dataLabel, relatedDataField) => {\n  console.log({collection: colRef, field: dataField, label: dataLabel})\n  setRelatedInputData({collection: colRef, field: dataField, label: dataLabel, fieldRelated: relatedDataField})\n  setIsRelatedDrawerOpen(true)\n}\n\nconst handleRelatedInputChange = (e) => {\n  const {name, value} = e.target\n  setRelatedInputData({\n    ...relatedInputData, \n    data: {\n      [name]: value,\n      CompanyID: currentCompanyID,\n      CompanyName: currentCompany,\n      CreatedDate: setCurrentDate(),\n      CreatedBy: currentUser,\n      [relatedInputData.fieldRelated]: params.id\n    }})\n}\nreturn (\n    <Loading active={loading}>\n\n    <Page \n      title=\"DETAILS\" \n      subtitle={active && [active].map(item => item[activeSubtitle] && item[activeSubtitle])} \n      status=\"view\" \n      handleToggle={()=> handleToggle()} \n      pageSuccess={pageSuccess} \n      pageError={pageError}\n    >\n      {userContext && userContext.userSession != undefined ? \n        <>\n          <TabBar>{/** Refactor this as Array/Map */}\n            <ul>  \n              <li className={tab === \"BASIC_INFO\" ? \"is-active\" : \"\"}><a onClick={()=>setTab(\"BASIC_INFO\")}>Basic Info</a></li>\n              <li className={tab === \"DETAILS\" ? \"is-active\" : \"\"}><a onClick={()=>setTab(\"DETAILS\")}>Details</a></li>\n              <li className={tab === \"SUPPORT\" ? \"is-active\" : \"\"}><a onClick={()=>setTab(\"SUPPORT\")}>Support</a></li>\n              <li className={tab === \"BILLING\" ? \"is-active\" : \"\"}><a onClick={()=>setTab(\"BILLING\")}>Billing</a></li>\n              <li className={tab === \"NOTES\" ? \"is-active\" : \"\"}><a onClick={()=>setTab(\"NOTES\")}>Notes</a></li>\n            </ul>\n          </TabBar>\n\n          <div className=\"box p-4 is-rounded has-text-black\">\n\n              <nav className=\"breadcrumb\" aria-label=\"breadcrumbs\"> {/** Refactor this as LastUpdatedComponent Component with Hook */}\n                <ul>\n                  <li className=\"is-size-7 is-uppercase\">last updated: {active.LastUpdated && active.LastUpdated}</li>\n                  <li className=\"is-size-7 is-uppercase pl-2\">updated by: {active.LastUpdatedBy && active.LastUpdatedBy}</li>\n                </ul>\n              </nav>\n\n              {/** Refactor as ViewPageFields Component */}\n              {active && pageFields.map(field => \n                <>\n                  {[active].map(docItem => \n                    <div className={field.visible != false & field.tab === tab ? \"\" : \"is-hidden\" }> \n                    <Columns options=\"is-mobile\">\n                      <Column size=\"is-3\">\n\n                        <FieldLabel>\n                          <Columns options=\"is-mobile\">\n                            <Column size=\"is-11\">\n                              <div key={field.label}>{field.label} \n\n                                {field.addBtn === true ? \n                                  <a className=\"link has-text-weight-normal is-size-7 pl-2\" \n                                    onClick={(e) => handleRelatedDrawer(field.relatedCollection, field.dataField, field.relatedInputLabel, field.relatedDataField)}>   \n                                    (add) {/**handleToggleRelatedDrawer({colRef: field.relatedCollection, dataField: field.dataField }) */}\n                                  </a> : null}\n                                </div>\n                              </Column>\n                              <Column>:</Column>\n                            </Columns>\n                        </FieldLabel>\n\n                      </Column>\n                     \n                      <Column size=\"pl-5\">\n                      \n                      <CheckIfNeedsCache \n                          value={accounts} \n                          setValue={setAccounts} \n                          handleSetCache={(value, setValue)=>handleSetCache(value, setValue)} fallbackValue={cachedAccounts}\n                        >  \n                        <CheckIfNeedsCache \n                          value={locations} \n                          setValue={setLocations} \n                          handleSetCache={(value, setValue)=>handleSetCache(value, setValue)} fallbackValue={cachedLocations}\n                        >   \n                          <PageField \n                            field={field}\n                            fieldData={docItem}\n                            relatedDataMap={\n                                field.inputSource && field.inputSource.filter(item => \n                                  item[field.relatedDataField] === docItem.id).map(i => ({...i}))\n                              }\n                            toggleViewDrawer={()=>handleToggle()}\n                            toggleFieldDropDown={()=>setIsRelatedActive(!isRelatedActive)}\n                            isViewRelatedActive={isRelatedActive}\n                            handleClick={(e)=>handleClick(e)}\n                          />\n                        </CheckIfNeedsCache>\n                        </CheckIfNeedsCache>\n                      </Column>\n                    </Columns>\n                    </div>\n                  )}\n                </>\n              )}\n\n              <DrawerComponent \n                checked={isDrawerOpen}\n                handleClose={()=>setIsDrawerOpen(!isDrawerOpen)} \n                direction=\"right\"\n                handleSubmit={()=> handleSubmit()}\n              >\n\n                <PageInputFields \n                  checked={isDrawerOpen}\n                  handleClose={()=>setIsDrawerOpen(!isDrawerOpen)}\n                  handleChange={(e)=> handleChange(e)}\n                  handleRelatedSelectChange={(e, related)=> handleRelatedSelectChange(e, related)}\n                  pageFields={pageFields}\n                  active={active}\n                  tab={tab}\n                  addRelatedValue={addRelatedValue}\n                  handleAddRelatedValue={(e)=>handleAddRelatedValue(e)}\n                  resetAddRelatedValue={()=>setAddRelatedValue(\"\")}\n                  handleUpdated={()=>setUpdated(!updated)}\n                  currentCompany={currentCompany}\n                  currentCompanyID={currentCompanyID}\n                />\n\n                <DeleteButton \n                  colRef={isModule}\n                  docRef={active.id}\n                />\n\n              </DrawerComponent>\n\n              \n\n              <DrawerComponent\n                checked={isRelatedDrawerOpen}\n                direction=\"right\"\n                handleClose={()=>setIsRelatedDrawerOpen(!isRelatedDrawerOpen)}\n                handleSubmit={()=>handleRelatedSubmit()}\n              >\n\n                <QuickAdd \n                  colRef={relatedInputData.collection}\n                  dataField={relatedInputData.field}\n                  label={relatedInputData.label}\n                  \n                  \n                  handleRelatedInputChange={(e)=>handleRelatedInputChange(e)}\n                />\n                \n              </DrawerComponent>\n\n          </div>\n\n        </> : \n          <div className=\"tile warning\"> No record to display </div>\n      }    \n    </Page>\n\n    </Loading>\n    \n  )\n}\nexport default RelatedDetailModule","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { FaRobot } from 'react-icons/fa'\n\nconst NotFound = () => {\n  const navigate = useNavigate()\n  return(\n    <div className=\"hero is-medium\">\n\n      <div className=\"hero-body\">\n        <div className=\"card is-rounded px-4 py-4\">\n       <p className=\"title\"> <FaRobot /> Sorry about this... </p>\n       <p className=\"block\"> Click \n         <a className=\"pl-1\" onclick={()=>navigate('/dashboard')}>\n          here\n        </a> \n        to return to the dashboard</p></div> \n      </div>\n    </div>\n\n  )\n}\nexport default NotFound\n","import React from 'react'\n\nexport const Panel = ({params, children}) => {\n    return (\n        <nav className={`panel ${params}`}>\n            {children}\n        </nav>\n    )\n}\n\nexport const PanelHeader = ({params, children}) => {\n    return (\n        <p className={`panel-heading`}>\n            {children}\n        </p>\n    )\n}\n\nexport const PanelBlock = ({children}) => {\n    return (\n        <div className='panel-block'>\n            {children}\n        </div>\n    )\n}\n\nexport const PanelTabs = ({children}) => {\n    return (\n        <p className='panel-tabs'>\n            {children}\n        </p>\n    )\n}\n\n","import React, {useState, useContext} from 'react'\nimport SideDrawer from '../Components/Drawers/SideDrawer'\nimport DrawerPage from '../Components/DrawerPage'\nimport Columns from '../Components/Layout/Columns'\nimport Column from '../Components/Layout/Column'\nimport {Panel, PanelHeader, PanelBlock} from '../Components/Panels/Panel'\n\nexport function useCore() {\n    \n    const [editModule, setEditModule ] = useState({\n        open: true,\n        label: 'New Module',\n        })\n\n    const [fields, setFields] = useState([\n        {\n            label: 'Field',\n            module: 'Field',\n            type: 'text',\n            key: 'Field',\n            ref: {\n                options: ''\n            },\n            params: {\n                header: true,\n                visible: true,\n                tab: 'Essentials'\n            }\n        }\n    ])\n\n    \n    const handleSubmitNewModule = () => {\n        //insert fs addDoc (Core)\n    }\n    const handleUpdateModule = () => {\n        //insert fs updateDoc (Core)\n    }\n    const handleDeleteModule = () => {\n        //insert fs deleteDoc (Core)\n    }\n    const handleCloseModule = () => {\n        //insert splice\n    }\n\n    return {editModule, setEditModule, fields, setFields}\n}\n\nconst RenderModule = (props) => {\n    const {\n        moduleData,\n        fields,\n        checked,\n        handleToggleHeader,\n        handleToggleVisible,\n        handleToggleCurrency,\n        handleParamsTextChange,\n        handleRefTextChange,\n        handleTextChange, \n        handleModuleTextChange,\n        handleDeleteField,\n        handleSelectChange,\n        handleAddField,\n        handleSaveModule,\n        handleSubmitModule,\n        handleToggleDrawer\n    } = props\nconsole.log('fields:', fields, 'module', moduleData)\n    return (\n        <DrawerPage>\n            {moduleData && [moduleData]?.map(({open, label}) => \n            <SideDrawer \n                direction=\"right\" \n                checked={checked && checked} \n                handleClose={()=>handleToggleDrawer()}\n                title={label && label}\n            >\n            <div className='adminDrawer'>\n            <article className='message is-active'>\n            <div className='message-header'>Module Name</div>\n                <div className='field'>\n                    <p className='control'>\n                        <input \n                            className='input' \n                            type='text' \n                            name='label' \n                            placeholder='Label' \n                            onChange={(e) => handleModuleTextChange(e)} defaultValue={label} \n                        />\n                    </p>\n                </div>\n            </article>\n                    {fields.map((field, i) => {\n                        switch (field.type) {\n                            case 'text':\n                            return (\n                                <article className='message is-info'>\n                                <div className='message-header'>\n                                    {field?.label}\n                                    <button \n                                        className='delete' \n                                        onClick={(index)=>handleDeleteField({index: i})}\n                                    ></button>\n                                </div>\n                                <div className='message-body'>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Label</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='label' \n                                                placeholder='Label' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.label}\n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Key</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='key' \n                                                placeholder='Key' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.key}\n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Type</label>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                                    defaultValue={field.type}\n                                                >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Header</label>\n                                            <button \n                                                className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                            >\n                                                {field.params.header === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                        <label className='label'>Parameters: Visible</label>\n                                        <button \n                                            className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                            onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                        >\n                                            {field.params.visible === true ? 'on' : 'off'}\n                                        </button>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                        <label className='label'>Parameters: Currency</label>\n                                        <button \n                                            className={field.params?.currency === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                            onClick={(prev, index)=>handleToggleCurrency({prev: field, index: i})}\n                                        >\n                                            {field.params?.currency === true ? 'on' : 'off'}\n                                        </button>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Tab</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='tab' \n                                                placeholder='Tab' \n                                                onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.params.tab} \n                                            />\n                                        </p>\n                                    </div>\n                                    </div>\n                                </article>\n                                \n                            )\n                            case 'textarea':\n                            return (\n                                <article className='message is-info'>\n                                <div className='message-header'>\n                                    {field?.label}\n                                    <button \n                                        className='delete' \n                                        onClick={(index)=>handleDeleteField({index: i})}\n                                    ></button>\n                                </div>\n                                <div className='message-body'>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Label</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='label' \n                                                placeholder='Label' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.label}\n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Key</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='key' \n                                                placeholder='Key' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.key}\n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Type</label>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                                    defaultValue={field.type}\n                                                >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Header</label>\n                                            <button \n                                                className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                            >\n                                                {field.params.header === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                        <label className='label'>Parameters: Visible</label>\n                                        <button \n                                            className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                            onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                        >\n                                            {field.params.visible === true ? 'on' : 'off'}\n                                        </button>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                        <label className='label'>Parameters: Currency</label>\n                                        <button \n                                            className={field.params?.currency === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                            onClick={(prev, index)=>handleToggleCurrency({prev: field, index: i})}\n                                        >\n                                            {field.params?.currency === true ? 'on' : 'off'}\n                                        </button>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Tab</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='tab' \n                                                placeholder='Tab' \n                                                onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.params.tab} \n                                            />\n                                        </p>\n                                    </div>\n                                    </div>\n                                </article>\n                            )\n                            case 'select':\n                            return (\n                                <article className='message is-info'>\n                                <div className='message-header'>\n                                    {field?.label}\n                                    <button \n                                        className='delete' \n                                        onClick={(index)=>handleDeleteField({index: i})}\n                                    ></button>\n                                </div>\n                                <div className='message-body'>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Label</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='label' \n                                                placeholder='Label' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.label} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Key</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='key' \n                                                placeholder='Key' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.key} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                        <label className='label'>Type</label>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                                    defaultValue={field.type}\n                                                >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Ref: Select Field Options</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='options' \n                                                placeholder='Field Options' \n                                                onChange={(e, prev, index) => handleRefTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.ref?.fields}\n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Header</label>\n                                            <button \n                                                className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                            >\n                                                {field.params.header === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>    \n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Visible</label>\n                                            <button \n                                                className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                            >\n                                                {field.params.visible === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Tab</label>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='tab' \n                                                placeholder='Tab' \n                                                onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.params.tab}\n                                            />\n                                        </p>\n                                    </div>\n                                </div>\n                                </article>\n                                \n                            )\n                            case 'related-select':\n                            return (\n                                <article className='message is-info'>\n                                <div className='message-header'>\n                                    {field?.label}\n                                    <button \n                                        className='delete' \n                                        onClick={(index)=>handleDeleteField({index: i})}\n                                    ></button>\n                                </div>\n                                <div className='message-body'>\n                                    <div className='field'>\n                                    <p className='control'>\n                                    <label className='label'>Label</label>\n                                    <input \n                                        className='input' \n                                        type='text' \n                                        name='label' \n                                        placeholder='Label' \n                                        onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                        defaultValue={field.label} \n                                    />\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                    <label className='label'>Key</label>\n                                    <input \n                                        className='input' \n                                        type='text' \n                                        name='key' \n                                        placeholder='Key' \n                                        onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                        defaultValue={field.key} \n                                    />\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                    <label className='label'>Type</label>\n                                    <div className='select'>\n                                        <select \n                                            onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                            defaultValue={field.type}\n                                        >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                        </select>\n                                    </div>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                    <label className='label'>Ref: Related-Select - Collection to Relate</label>\n                                    <div className='select'>\n                                        <select \n                                            onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'collection'})} \n                                            defaultValue={field.ref?.collection}\n                                        >\n                                            <option value='Locations'>Locations</option>\n                                            <option value='Services'>Services</option>\n                                            <option value='Tickets'>Tickets</option>\n                                            <option value='Accounts'>Accounts</option>\n                                            <option value='Orders'>Orders</option>\n                                            <option value='Companies'>Companies</option>\n                                            <option value='Contacts'>Contacts</option>\n                                            <option value='Events'>Events</option>\n                                            <option value='Bills'>Bills</option>\n                                            <option value='Users'>Users</option>\n                                            <option value='Notes'>Notes</option>\n                                            <option value='Vendors'>Vendors</option>\n                                            <option value='States'>States</option>\n                                        </select>\n                                    </div>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                        <label className='label'>Ref: Related-Select - Fields to Relate</label>\n                                        <input \n                                            className='input' \n                                            type='text' \n                                            name='fields' \n                                            placeholder='Fields to Relate' \n                                            onChange={(e, prev, index) => handleRefTextChange(e, {prev: field, index: i})} \n                                            defaultValue={field.ref?.fields} \n                                        />\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                        <label className='label'>Parameters: Header</label>\n                                        <button \n                                            className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                            onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                        >\n                                            {field.params.header === true ? 'on' : 'off'}\n                                        </button>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                        <label className='label'>Parameters: Visible</label>\n                                        <button \n                                            className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                            onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                        >\n                                            {field.params.visible === true ? 'on' : 'off'}\n                                        </button>\n                                    </p>\n                                    </div>\n                                    <div className='field'>\n                                    <p className='control'>\n                                    <label className='label'>Parameters: Tab</label>\n                                    <input \n                                        className='input' \n                                        type='text' \n                                        name='tab' \n                                        placeholder='Tab' \n                                        onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                        defaultValue={field.params.tab} \n                                    />\n                                    </p>\n                                    </div>\n                                    </div>\n                                </article>\n                                \n                            )\n                            case 'datalist':\n                            return (\n                                <article className='message is-info'>\n                                    <div className='message-header'>\n                                        {field?.label}\n                                            <button \n                                                className='delete' \n                                                onClick={(index)=>handleDeleteField({index: i})}\n                                            ></button>\n                                    </div>\n                                    <div className='message-body'>\n                                    <div className='field'>\n                                    <label className='label'>Label</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='label' \n                                                placeholder='Label' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.label} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Key</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='key' \n                                                placeholder='Key' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.key} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Type</label>\n                                        <p className='control'>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                                    defaultValue={field.type}\n                                                >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Ref: Fields </label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='fields' \n                                                placeholder='Fields to Relate' \n                                                onChange={(e, prev, index) => handleRefTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.ref?.fields} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Header</label>\n                                        <p className='control'>\n                                            <button \n                                                className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                            >\n                                                {field.params.header === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Visible</label>\n                                            <button \n                                                className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                            >\n                                                {field.params.visible === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Tab</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='tab' \n                                                placeholder='Tab' \n                                                onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.params.tab} \n                                            />\n                                        </p>\n                                    </div>\n                                    </div>\n                                </article>\n                            )\n                            case 'related-datalist':\n                            return (\n                                <article className='message is-info'>\n                                    <div className='message-header'>\n                                        {field?.label}\n                                            <button \n                                                className='delete' \n                                                onClick={(index)=>handleDeleteField({index: i})}\n                                            ></button>\n                                    </div>\n                                    <div className='message-body'>\n                                    <div className='field'>\n                                    <label className='label'>Label</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='label' \n                                                placeholder='Label' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.label} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Key</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='key' \n                                                placeholder='Key' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.key} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Type</label>\n                                        <p className='control'>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                                    defaultValue={field.type}\n                                                >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Ref: Related-Datalist Field Collection</label>\n                                        <p className='control'>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'collection'})} \n                                                    defaultValue={field.ref?.collection}\n                                                >\n                                                    <option value='Locations'>Locations</option>\n                                                    <option value='Services'>Services</option>\n                                                    <option value='Tickets'>Tickets</option>\n                                                    <option value='Accounts'>Accounts</option>\n                                                    <option value='Orders'>Orders</option>\n                                                    <option value='Companies'>Companies</option>\n                                                    <option value='Contacts'>Contacts</option>\n                                                    <option value='Events'>Events</option>\n                                                    <option value='Bills'>Bills</option>\n                                                    <option value='Users'>Users</option>\n                                                    <option value='Notes'>Notes</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Ref: Related-Select - Fields to Relate</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='fields' \n                                                placeholder='Fields to Relate' \n                                                onChange={(e, prev, index) => handleRefTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.ref?.fields} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Header</label>\n                                        <p className='control'>\n                                            <button \n                                                className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                            >\n                                                {field.params.header === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Visible</label>\n                                            <button \n                                                className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                            >\n                                                {field.params.visible === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Tab</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='tab' \n                                                placeholder='Tab' \n                                                onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.params.tab} \n                                            />\n                                        </p>\n                                    </div>\n                                    </div>\n                                </article>\n                            )\n                            case 'datepicker':\n                            return (\n                                <article className='message is-info'>\n                                    <div className='message-header'>\n                                        {field?.label}\n                                            <button \n                                                className='delete' \n                                                onClick={(index)=>handleDeleteField({index: i})}\n                                            ></button>\n                                    </div>\n                                    <div className='message-body'>\n                                    <div className='field'>\n                                    <label className='label'>Label</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='label' \n                                                placeholder='Label' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.label} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Key</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='key' \n                                                placeholder='Key' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.key} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Type</label>\n                                        <p className='control'>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                                    defaultValue={field.type}\n                                                >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Header</label>\n                                        <p className='control'>\n                                            <button \n                                                className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                            >\n                                                {field.params.header === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Visible</label>\n                                            <button \n                                                className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                            >\n                                                {field.params.visible === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Tab</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='tab' \n                                                placeholder='Tab' \n                                                onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.params.tab} \n                                            />\n                                        </p>\n                                    </div>\n                                    </div>\n                                </article>\n                            )\n                            case 'related-doclink':\n                            return (\n                                <article className='message is-info'>\n                                    <div className='message-header'>\n                                        {field?.label}\n                                            <button \n                                                className='delete' \n                                                onClick={(index)=>handleDeleteField({index: i})}\n                                            ></button>\n                                    </div>\n                                    <div className='message-body'>\n                                    <div className='field'>\n                                    <label className='label'>Label</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='label' \n                                                placeholder='Label' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.label} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Key</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='key' \n                                                placeholder='Key' \n                                                onChange={(e, prev, index) => handleTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.key} \n                                            />\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Type</label>\n                                        <p className='control'>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'type'})} \n                                                    defaultValue={field.type}\n                                                >\n                                                    <option value='text'>Text</option>\n                                                    <option value='textarea'>Text-Area</option>\n                                                    <option value='select'>Select</option>\n                                                    <option value='related-select'>Related-Select</option>\n                                                    <option value='datalist'>Datalist</option>\n                                                    <option value='related-datalist'>Related Datalist</option>\n                                                    <option value='related-doclink'>Related Doclink</option>\n                                                    <option value='checkbox'>Checkbox</option>\n                                                    <option value='datepicker'>DatePicker</option>\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Field to Reference</label>\n                                        <p className='control'>\n                                            <div className='select'>\n                                                <select \n                                                    onChange={(e, prev, index, name) => handleSelectChange(e, {prev: field, index: i, name: 'ref'})} \n                                                    defaultValue={field?.ref}\n                                                >\n                                                    <option>Choose a field</option>\n                                                    {fields.map(f => \n                                                        <option value={f.key}>{f.key}</option>\n                                                    )}\n                                                </select>\n                                            </div>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Header</label>\n                                        <p className='control'>\n                                            <button \n                                                className={field.params.header === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleHeader({prev: field, index: i})}\n                                            >\n                                                {field.params.header === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                        <p className='control'>\n                                            <label className='label'>Parameters: Visible</label>\n                                            <button \n                                                className={field.params.visible === true ? 'button is-primary is-small' : 'button is-danger is-small'} \n                                                onClick={(prev, index)=>handleToggleVisible({prev: field, index: i})}\n                                            >\n                                                {field.params.visible === true ? 'on' : 'off'}\n                                            </button>\n                                        </p>\n                                    </div>\n                                    <div className='field'>\n                                    <label className='label'>Parameters: Tab</label>\n                                        <p className='control'>\n                                            <input \n                                                className='input' \n                                                type='text' \n                                                name='tab' \n                                                placeholder='Tab' \n                                                onChange={(e, prev, index) => handleParamsTextChange(e, {prev: field, index: i})} \n                                                defaultValue={field.params.tab} \n                                            />\n                                        </p>\n                                    </div>\n                                    </div>\n                                </article>\n                            )\n                        }\n                    })}\n                    \n                    <div className='field is-grouped'>\n                    <div className='control'>\n                        <button className='button' onClick={()=>handleAddField()}>Add Field</button>\n                    </div>\n                    <div className='control'>\n                        <button className='button' onClick={()=>handleSaveModule()}>Save Module</button>\n                    </div>\n                    <div className='control'>\n                        <button className='button' onClick={()=>handleSubmitModule()}>Submit Module</button>\n                    </div>\n                    </div>\n            </div>    \n            </SideDrawer>\n        )}\n        </DrawerPage>\n            \n    )\n}\nexport default RenderModule","import React, {useContext, useState, useEffect} from 'react'\nimport { db, fire, store } from '../../Contexts/firebase'\nimport {fieldContext} from '../../Contexts/fieldContext'\nimport RenderModule, {useCore} from '../../Hooks/useCore'\nimport {Panel, PanelHeader, PanelBlock} from '../../Components/Panels/Panel'\nconst Admin = () => {\n  const {\n    collection, \n    query, \n    where, \n    getDocs, \n    getDoc, \n    addDoc, \n    updateDoc, \n    doc,\n    ref,\n    setDoc,\n    deleteDoc,\n    uploadBytes,\n    getDownloadURL,\n    arrayUnion,\n    arrayRemove\n  } = fire\n\n  const {\n    serviceGridColumns, \n    serviceMobileGridColumns,\n    serviceGroupByFields,\n    locationGridColumns,\n    locationMobileGridColumns,\n    locationGroupByFields,\n    locationDetailFields,\n    ticketGridColumns, \n    ticketGroupByFields,\n    ticketMobileGridColumns,\n    orderGridColumns, \n    orderGroupByFields,\n    orderMobileGridColumns,\n    accountGridColumns, \n    accountGroupByFields,\n    accountMobileGridColumns,\n    userGridColumns,\n    userDetailFields, \n    userProfileFields,\n    contractGridColumns,\n    contractMobileGridColumns,\n    contractDetailFields,\n    contractGroupByFields,\n    serviceDetailFields,\n    ticketDetailFields,\n    accountDetailFields,\n    orderDetailFields,\n    billsDetailFields,\n    contactDetailFields,\n    eventDetailFields\n  } = useContext(fieldContext)\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n  const [isModuleList, setIsModuleList] = useState()\n  const [updated, setUpdated] = useState(false)\n\n  const {editModule, setEditModule} = useCore()\n  const {fields, setFields} = useCore()\n\n  useEffect(() => {\n    isModuleList != undefined ? console.log('Did not fetch') : fetchModules()\n  },[])\n\n  useEffect(() => {\n    updated != true ? console.log('Not updated') : fetchModules()\n  }, [updated])\n\n  const newModule = {\n    open: true,\n    group: '',\n    fields: {\n        label: 'Field1',\n        module: 'Field1',\n        type: 'text',\n        key: 'Field1',\n        params: {\n          header: 'true',\n          visible: 'true',\n          tab: 'Essentials'\n        }\n      }\n    }\n\n  const baseField = {\n    label: 'Field',\n    type: 'text',\n    key: 'Field',\n    params: {\n      header: true,\n      visible: true,\n      tab: 'Essentials'\n    }\n  }\n\n  const fetchModules = async() => {\n    try {\n    const q = query(collection(db, \"Core\"))\n    const modulesRef = await getDocs(q)\n    const modules = await modulesRef.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()}))\n    await setIsModuleList(modules)\n    } catch {\n      console.log('Error fetching')\n    }\n    setUpdated(false)\n  } \n\n  const handleSetModule = (mod) => {\n    setEditModule(mod)\n    setFields(mod.fields)\n    setIsDrawerOpen(true)\n  }\n\n  const handleAddNewModule = () => {\n    setEditModule(newModule)\n    handleToggleDrawer()\n  }\n\n  const handleTextChange = (e, {prev, index}) => {\n    e.preventDefault()\n    const {name, value} = e.target\n    const fieldChanged = {...prev, [name]: value}\n    const newFields = [...fields]\n    newFields[index] = {...fieldChanged}\n    setFields([...newFields])\n    console.log('index', index, 'fieldChanged', fieldChanged, 'fields', fields)\n  }\n\n  const handleSelectChange = (e, {prev, index, name}) => {\n    e.preventDefault()\n    const {value} = e.target\n    const fieldChanged = {...prev, [name]: value}\n    const newFields = [...fields]\n    newFields[index] = {...fieldChanged}\n    setFields([...newFields])\n    console.log('index', index, 'fieldChanged', fieldChanged, 'fields', fields)\n  }\n\n  const handleModuleTextChange = (e) => {\n    e.preventDefault()\n    const {name, value} = e.target\n    setEditModule({...editModule, ['label']: value, ['id']: value})\n  }\n\n  const handleToggleVisibleChange = ({prev, index}) => {\n    const fieldChanged = {...prev, ['params']: {...prev.params, visible: !prev.params.visible}}\n    const newFields = [...fields]\n    newFields[index] = {...fieldChanged}\n    setFields([...newFields])\n  }\n\n  const handleToggleCurrencyChange = ({prev, index}) => {\n    const fieldChanged = {...prev, ['params']: {...prev.params, currency: !prev.params?.currency}}\n    const newFields = [...fields]\n    newFields[index] = {...fieldChanged}\n    setFields([...newFields])\n  }\n\n  const handleToggleHeaderChange = ({prev, index}) => {\n    const fieldChanged = {...prev, ['params']: {...prev.params, header: !prev.params.header}}\n    const newFields = [...fields]\n    newFields[index] = {...fieldChanged}\n    setFields([...newFields])\n  }\n\n  const handleParamsTextChange = (e, {prev, index}) => {\n    const {name, value} = e.target\n    const fieldChanged = {...prev, ['params']: {...prev.params, [name]: value}}\n    const newFields = [...fields]\n    newFields[index] = {...fieldChanged}\n    setFields([...newFields])\n  }\n\n  const handleRefTextChange = (e, {prev, index}) => {\n    const {name, value} = e.target\n    const optionValues = value?.split(',')\n    const fieldChanged = {...prev, ['ref']: {...prev.ref, ['fields']: [...optionValues]}}\n    const newFields = [...fields]\n    newFields[index] = {...fieldChanged}\n    setFields([...newFields])\n  }\n\nconst handleAddField = () => {\n  const newFields = [...fields, baseField]\n  setFields([...newFields])\n}\n\nconst handleSaveModule = () => {\n  setEditModule({...editModule, fields})\n  console.log(editModule)\n}\n\nconst handleSubmitModule = async() => {\n    console.log('editModule', editModule, 'label', editModule.label, )\n  const docData = {...editModule}\n  try {\n    await setDoc(doc(db, 'Core', editModule.label), {...docData}) \n    closeToAdmin()\n    console.log(\"Saved!\")\n  } catch {\n    console.log(\"Error\")\n  } \n  setUpdated(true)\n}\n\nconst handleToggleDrawer = () => {\n  setIsDrawerOpen(!isDrawerOpen)\n}\n\nconst closeToAdmin = () => {\n  setIsDrawerOpen(!isDrawerOpen)\n  setEditModule('')\n  setFields('')\n}\n\nconst handleDeleteField = ({index}) => {\n  const copyArr = [...fields]\n  const totalFields = fields.length\n  copyArr.splice(index, totalFields)\n  setFields([...copyArr])\n}\n\nconst handleDeleteModule = async(mod) => {\n  console.log(mod)\n  try {\n    await deleteDoc(doc(db, 'Core', mod.id)) \n    \n    console.log(\"Saved!\")\n  } catch {\n    console.log(\"Error\")\n  } \n  setUpdated(true)\n}\n\nconsole.log('ismodulelist', isModuleList)\n  return(\n    <div className='adminDrawer'>\n    <Panel>\n      <PanelHeader>Edit Module Pages</PanelHeader>\n      <>\n        {isModuleList && isModuleList?.map((mod, index) => \n        <PanelBlock>\n          <p className='control has-icons-right'>\n            <button className='button is-fullwidth' onClick={() => handleSetModule(mod)}>{mod.id}\n            <span className='icon is-small is-right'>\n              <i className='delete is-small' onClick={()=>handleDeleteModule(mod)}></i>\n            </span>\n            </button>\n          </p>\n        </PanelBlock>\n        )}\n        <PanelBlock>\n          <button className='button' onClick={()=>handleToggleDrawer()}>Add Module</button>\n        </PanelBlock>\n      </>\n    </Panel>\n    \n    <RenderModule \n      moduleData={editModule && editModule}\n      fields={fields && fields}\n      checked={isDrawerOpen}\n      handleToggleDrawer={handleToggleDrawer}\n      handleTextChange={(e, prev, index)=>handleTextChange(e, prev, index)}\n      handleSelectChange={(e, prev, index, name)=>handleSelectChange(e, prev, index, name)}\n      handleToggleVisible={(prev, index)=>handleToggleVisibleChange(prev, index)}\n      handleToggleHeader={(prev, index)=>handleToggleHeaderChange(prev, index)}\n      handleToggleCurrency={(prev, index)=>handleToggleCurrencyChange(prev, index)}\n      handleParamsTextChange={(e, prev, index)=>handleParamsTextChange(e, prev, index)}\n      handleRefTextChange={(e, prev, index)=>handleRefTextChange(e, prev, index)}\n      handleModuleTextChange={(e)=>handleModuleTextChange(e)}\n      handleDeleteField={(index)=>handleDeleteField(index)}\n      handleAddField={()=>handleAddField()}\n      handleSaveModule={()=>handleSaveModule()}\n      handleSubmitModule={()=>handleSubmitModule()}\n    />\n    </div>\n  )\n}\nexport default Admin","import React, { useEffect, useState, useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSearchHook } from '../Hooks/useSearchHook'\nimport { stateContext } from '../Contexts/stateContext'\nimport CompanyList from './Companies/CompanyList'\nimport Page from '../Components/Page'\n\nconst Search = (props) => {\n  const userContext = useContext(stateContext)\n  const {currentCompanyID} = userContext.userSession\n  const { handleClick } = props\n  const [searchResults, setSearchValue] = useSearchHook()\n  const [locationResults, setLocationResults] = useState(\"\")\n  const [serviceResults, setServiceResults] = useState(\"\")\n  const [orderResults, setOrderResults] = useState(\"\")\n  const [ticketResults, setTicketResults] = useState(\"\")\n  const navigate = useNavigate()\n\n  const handleSearch = (e) => {\n    setSearchValue(e.target.value.toLowerCase())\n  }\n\n  \n  \n  const handleGoBack = () => {\n    navigate(-1)\n  }\n\n  useEffect(() => {\n    \n    console.log(searchResults)\n    setLocationResults(searchResults.locations && searchResults.locations)\n    setServiceResults(searchResults.services && searchResults.services)\n    \n  },[searchResults])\n\n  return(\n    <Page title=\"Search\" handleGoBack={handleGoBack}>\n      <div className=\"hero is-large\">\n        <p className=\"block\"/>\n          <input className=\"input is-rounded\" type='text' placeholder=\"Search\" onChange={(e) => handleSearch(e)} />\n          <div className=\"mt-5\">\n            {locationResults && locationResults != undefined ? locationResults.map(result => \n              <div className=\"box\" key={result.id}>\n                <div className=\"title is-size-7\">Location</div>\n                <a onClick={() => handleClick('Locations', result.id)}>\n                  <span className=\"title is-size-5\">\n                    {result.Name}\n                  </span> - {result?.Address1} {result?.Address2} {result?.City} {result?.State} {result.Zip}</a>\n                </div>\n            ) : \"\"}\n          </div>\n          <div>\n            {serviceResults && serviceResults != undefined ? serviceResults.map(result =>   \n              <div className=\"box\" key={result.id}>\n                <div className=\"title is-size-7\">Service</div>\n                <a onClick={() => handleClick('Services', result.id)}>\n                  <span className=\"title is-size-5\">\n                    {result.AssetID}\n                  </span> - {result.LocationName}</a>\n                </div>\n            ) : \"\"}\n          </div>\n      </div>\n    </Page>\n  )\n}\nexport default Search","import React, { useState, useEffect, useContext } from 'react'\nimport {stateContext} from '../Contexts/stateContext'\n\nexport function useSearchHook() {\n  const userContext = useContext(stateContext)\n  const { \n    locations, \n    services, \n    tickets, \n    orders,\n    accounts } = userContext.userSession\n\n  const [searchValue, setSearchValue] = useState(\"\")\n  const [data, setData] = useState([])\n  const [searchResults, setSearchResults] = useState([])\n\n  const searchLocationRef = locations ? [...locations] : \"\"\n  const searchServiceRef = services ? [...services] : \"\"\n  const searchTicketRef = tickets ? [...tickets] : \"\"\n  const searchOrderRef = orders ? [...orders] : \"\"\n  const searchAccountRef = accounts ? [...accounts] : \"\"\n\n  useEffect(() => {\n    \n    const locationResults = searchValue && searchLocationRef && searchLocationRef != undefined ? searchLocationRef.filter((obj) => Object.keys(obj).some((el) => obj[el].toString().toLowerCase().indexOf(searchValue) > -1)) : \"\"\n\n    const serviceResults = searchValue && searchServiceRef && searchServiceRef != undefined ? searchServiceRef.filter((obj) => Object.keys(obj).some((el) => obj[el].toString().toLowerCase().indexOf(searchValue) > -1)) : \"\"\n\n    const ticketResults = searchValue && searchTicketRef && searchTicketRef != undefined ? searchTicketRef.filter((obj) => Object.keys(obj).some((el) => obj[el].toString().toLowerCase().indexOf(searchValue) > -1)) : \"\"\n\n    const orderResults = searchValue && searchOrderRef && searchOrderRef != undefined ? searchOrderRef.filter((obj) => Object.keys(obj).some((el) => obj[el].toString().toLowerCase().indexOf(searchValue) > -1)) : \"\"\n\n    const accountResults = searchValue && searchAccountRef && searchAccountRef != undefined ? searchAccountRef.filter((obj) => Object.keys(obj).some((el) => obj[el].toString().toLowerCase().indexOf(searchValue) > -1)) : \"\"\n\n    setSearchResults({...searchResults, ['locations']: locationResults, ['services']: serviceResults, ['tickets']: ticketResults, ['orders']: orderResults, ['accounts']: accountResults})\n    console.log(searchResults) \n  },[searchValue])\n\n  return [searchResults, setSearchValue]\n}\n","import React, { useContext } from 'react'\n\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n\nimport { StateProvider, stateContext } from './Contexts/stateContext'\nimport { FieldProvider } from './Contexts/fieldContext'\nimport { AuthProvider } from './Contexts/AuthContext'\nimport Hello from './Pages/Hello'\nimport Dashboard from './Pages/Dashboard'\nimport Login from './Pages/Login'\nimport Register from './Pages/Register'\nimport NavBar from './Components/NavBar'\nimport AddCompany from './Pages/Companies/AddCompany'\nimport DetailModule from './Pages/DetailModule'\nimport RelatedDetailModule from './Pages/RelatedDetailModule'\nimport NotFound from './Components/NotFound'\nimport UserSettings from './Pages/Users/UserSettings'\nimport Admin from './Pages/Admin/Admin'\nimport Search from './Pages/Search'\n\n\nexport default function App() {\n  \n  const user = useContext(stateContext)\n  \n  return (\n    <StateProvider>\n    <AuthProvider>\n      <FieldProvider>\n      <Router>\n      <NavBar />\n\n        \n\n          <Routes>\n            \n            <Route exact path=\"/\"  element={<Hello />} />\n            <Route path=\"/dashboard\" element={<Dashboard />} />\n            \n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            \n            <Route path=\"/:isModule/:currentCompanyID/:id\" element={<DetailModule />} />\n            <Route path=\"/Related/:isModule/:currentCompanyID/:id\" element={<RelatedDetailModule />} />\n            \n            <Route path=\"/addcompany\" element={<AddCompany />} />\n            <Route path=\"/settings\" element={<Admin />} />\n            <Route path=\"/search\" element={<Search />} />\n            \n            <Route element={<NotFound />} />\n            </Routes>\n            \n        \n        \n         \n    </Router>\n    </FieldProvider>\n    </AuthProvider>\n    </StateProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\"\nimport \"./style.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}